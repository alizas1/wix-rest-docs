{
  "name": "Events - Ticketing",
  "client_id": "https://github.com/wix-private/events/tree/master/wix-events-platform-api/events-ticketing-v1/src/main/proto#public",
  "memberOf": "All APIs",
  "category": "business-service",
  "mixes": [],
  "labels": [],
  "docs":   {
    "summary": "API to sell tickets",
    "description": []
  },
  "properties": [],
  "tags":   [
        {
      "name": "Checkout",
      "entity": "_wix_events_ticketing_Order",
      "src": "https://github.com/wix-private/events/tree/master/wix-events-platform-api/events-ticketing-v1/wix/events/ticketing/Order.proto"
    },
        {
      "name": "Order",
      "entity": "_wix_events_ticketing_Order",
      "src": "https://github.com/wix-private/events/tree/master/wix-events-platform-api/events-ticketing-v1/wix/events/ticketing/Order.proto"
    },
        {
      "name": "Ticket Definitions",
      "entity": "_wix_events_ticketing_TicketDefinition",
      "src": "https://github.com/wix-private/events/tree/master/wix-events-platform-api/events-ticketing-v1/wix/events/ticketing/TicketDefinition.proto"
    },
        {
      "name": "Tickets",
      "entity": "_wix_events_ticketing_Ticket",
      "src": "https://github.com/wix-private/events/tree/master/wix-events-platform-api/events-ticketing-v1/wix/events/ticketing/Ticket.proto"
    }
  ],
  "relatedGuides":   [
        {
      "path": "../guides/events---ticketing/docs/partial-updates.md",
      "name": "Partial Updates"
    },
        {
      "path": "../guides/events---ticketing/docs/filter-and-sort.md",
      "name": "Filter and Sort"
    },
        {
      "path": "../guides/events---ticketing/docs/pagination.md",
      "name": "Pagination"
    },
        {
      "path": "../guides/events---ticketing/docs/intro.md",
      "name": "Introduction"
    },
        {
      "path": "../guides/events---ticketing/docs/fieldsets.md",
      "name": "Fieldset"
    }
  ],
  "operations":   [
        {
      "name": "Bulk Update Orders",
      "methodName": "BulkUpdateOrders",
      "serviceName": "OrderManagement",
      "tag": "Order",
      "permissions": [      {
        "name": "Manage Orders",
        "description": "Request permission to read, create and change orders."
      }],
      "events": [],
      "labels": [],
      "nameParams": [],
      "requiredFields": ["eventId"],
      "params":       [
                {
          "in": "PATH",
          "name": "eventId",
          "type": "string",
          "doc": " Event ID.\n",
          "required": true
        },
                {
          "in": "BODY",
          "name": "orderNumber",
          "type":           {
            "name": "array",
            "typeParams": ["string"]
          },
          "doc": "",
          "required": false
        },
                {
          "in": "BODY",
          "name": "fields",
          "type": "All APIs.Events - Ticketing._google_protobuf_FieldMask",
          "doc": " Set of fields to update.\n",
          "required": false
        },
                {
          "in": "BODY",
          "name": "archived",
          "type": "boolean",
          "doc": " Whether to archive the order.\n",
          "required": false
        }
      ],
      "ret":       {
        "type":         {
          "name": "BulkUpdateOrders",
          "statusCode": "200",
          "typeParams": ["All APIs.Events - Ticketing._wix_events_ticketing_BulkUpdateOrdersResponse"]
        },
        "doc": ""
      },
      "locations": [],
      "docs":       {
        "summary": "  Updates multiple orders' `archived` status.\n \n",
        "description": [],
        "request": "PATCH",
        "url": "https://www.wixapis.com/events/v1/events/{eventId}/orders",
        "links": [],
        "examples": [        {
          "title": "",
          "body": ["curl -X PATCH 'https://api.wix.com/events/v1/events/619d52c0-c93b-4155-a55c-108048f20b3f/orders' \\\n-H 'Content-Type: application/json' \\\n-H 'Authorization: <AUTH TOKEN>' \\\n-d @- << EOF\n{\n  \"orderNumber\": [\n    \"FM9X-EHKF-ZO\"\n  ],\n  \"fields\": {\n    \"paths\": [\n      \"archived\"\n    ]\n  },\n  \"archived\": false\n}\nEOF"],
          "response": ["{} "],
          "type": "curl",
          "extra": {}
        }],
        "extra": {}
      },
      "extra":       {
        "hasRest": true,
        "rpcRequestName": "BulkUpdateOrdersRequest",
        "rpcResponseName": "BulkUpdateOrdersResponse"
      },
      "customLabels": []
    },
        {
      "name": "Bulk Update Tickets",
      "methodName": "BulkUpdateTickets",
      "serviceName": "TicketManagement",
      "tag": "Tickets",
      "permissions": [      {
        "name": "Manage Guest List",
        "description": "Request permission to read, create and change event tickets, guest lists and RSVPs."
      }],
      "events": [],
      "labels": [],
      "nameParams": [],
      "requiredFields": ["eventId"],
      "params":       [
                {
          "in": "PATH",
          "name": "eventId",
          "type": "string",
          "doc": " Event ID.\n",
          "required": true
        },
                {
          "in": "BODY",
          "name": "ticketNumber",
          "type":           {
            "name": "array",
            "typeParams": ["string"]
          },
          "doc": " Unique ticket numbers.\n",
          "required": false
        },
                {
          "in": "BODY",
          "name": "archived",
          "type": "boolean",
          "doc": " Whether tickets are archived.\n",
          "required": false
        }
      ],
      "ret":       {
        "type":         {
          "name": "BulkUpdateTickets",
          "statusCode": "200",
          "typeParams": ["All APIs.Events - Ticketing._wix_events_ticketing_BulkUpdateTicketsResponse"]
        },
        "doc": ""
      },
      "locations": [],
      "docs":       {
        "summary": " Updates the `archived` state of multiple tickets. See [Partial Updates](https://dev.wix.com/api/rest/wix-events/wix-events/partial-updates) for more information.\n \n",
        "description": [],
        "request": "PATCH",
        "url": "https://www.wixapis.com/events/v1/events/{eventId}/tickets",
        "links": [],
        "examples": [        {
          "title": "",
          "body": ["curl -X PATCH 'https://www.wixapis.com/events/v1/events/ad18d12e-a6a9-4c17-abfa-6ff119479be2/tickets' \\\n-H 'Content-Type: application/json' \\\n-H 'Authorization: <AUTH TOKEN>' \\\n-d @- << EOF\n{\n  \"ticketNumber\": [\n    \"FNVL-NIJT-WP021\",\n    \"FNVL-O7MZ-0Q021\"\n  ],\n  \"archived\": true,\n  \"fields\": {\n    \"paths\": [\n      \"archived\"\n    ]\n  }\n}\nEOF"],
          "response": ["{} "],
          "type": "curl",
          "extra": {}
        }],
        "extra": {}
      },
      "extra":       {
        "hasRest": true,
        "rpcRequestName": "BulkUpdateTicketsRequest",
        "rpcResponseName": "BulkUpdateTicketsResponse"
      },
      "customLabels": []
    },
        {
      "name": "Cancel Reservation",
      "methodName": "CancelReservation",
      "serviceName": "CheckoutService",
      "tag": "Checkout",
      "permissions": [      {
        "name": "Manage Orders",
        "description": "Request permission to read, create and change orders."
      }],
      "events": [],
      "labels": [],
      "nameParams": [],
      "requiredFields":       [
        "eventId",
        "id"
      ],
      "params":       [
                {
          "in": "PATH",
          "name": "eventId",
          "type": "string",
          "doc": " Event ID.\n",
          "required": true
        },
                {
          "in": "PATH",
          "name": "id",
          "type": "string",
          "doc": " Reservation ID.\n",
          "required": true
        }
      ],
      "ret":       {
        "type":         {
          "name": "CancelReservation",
          "statusCode": "200",
          "typeParams": ["All APIs.Events - Ticketing._wix_events_ticketing_CancelReservationResponse"]
        },
        "doc": ""
      },
      "locations": [],
      "docs":       {
        "summary": " Cancels ticket reservation and returns tickets to stock.\n \n",
        "description": [],
        "request": "DELETE",
        "url": "https://www.wixapis.com/events/v1/events/{eventId}/tickets/reservation/{id}",
        "links": [],
        "examples": [        {
          "title": "",
          "body": ["curl -X DELETE 'https://www.wixapis.com/events/v1/events/fd56076c-38f4-4705-b9eb-ec322b85c745/tickets/reservation/1fe76e20-efa0-4330-be44-2a8b2ca3c208' \\\n-H 'Authorization: <AUTH TOKEN>'"],
          "response": ["{} "],
          "type": "curl",
          "extra": {}
        }],
        "extra": {}
      },
      "extra":       {
        "hasRest": true,
        "rpcRequestName": "CancelReservationRequest",
        "rpcResponseName": "CancelReservationResponse"
      },
      "customLabels": []
    },
        {
      "name": "Change Currency",
      "methodName": "ChangeCurrency",
      "serviceName": "TicketDefinitionManagement",
      "tag": "Ticket Definitions",
      "permissions": [      {
        "name": "Manage Ticket Definitions",
        "description": "Request permission to read, create and change event ticket definitions."
      }],
      "events": [],
      "labels": [],
      "nameParams": [],
      "requiredFields":       [
        "currency",
        "eventId"
      ],
      "params":       [
                {
          "in": "PATH",
          "name": "eventId",
          "type": "string",
          "doc": " Event ID.\n",
          "required": true
        },
                {
          "in": "BODY",
          "name": "currency",
          "type": "string",
          "doc": " Event currency.\n",
          "required": true
        }
      ],
      "ret":       {
        "type":         {
          "name": "ChangeCurrency",
          "statusCode": "200",
          "typeParams": ["All APIs.Events - Ticketing._wix_events_ticketing_ChangeCurrencyResponse"]
        },
        "doc": ""
      },
      "locations": [],
      "docs":       {
        "summary": " Changes the currency for all tickets (per event).\n \n",
        "description": [],
        "request": "PUT",
        "url": "https://www.wixapis.com/events/v1/events/{eventId}/tickets/definitions/currency",
        "links": [],
        "examples": [        {
          "title": "",
          "body": ["curl -X PUT 'https://www.wixapis.com/events/v1/events/fd56076c-38f4-4705-b9eb-ec322b85c745/tickets/definitions/currency?currency=EUR' \\\n-H 'Authorization: <AUTH>'"],
          "response": ["{} "],
          "type": "curl",
          "extra": {}
        }],
        "extra": {}
      },
      "extra":       {
        "hasRest": true,
        "rpcRequestName": "ChangeCurrencyRequest",
        "rpcResponseName": "ChangeCurrencyResponse"
      },
      "customLabels": []
    },
        {
      "name": "Check-in Tickets",
      "methodName": "CheckInTicket",
      "serviceName": "TicketManagement",
      "tag": "Tickets",
      "permissions": [],
      "events": [],
      "labels": [],
      "nameParams": [],
      "requiredFields": ["eventId"],
      "params":       [
                {
          "in": "BODY",
          "name": "eventId",
          "type": "string",
          "doc": " Event ID.\n",
          "required": true
        },
                {
          "in": "BODY",
          "name": "ticketNumber",
          "type":           {
            "name": "array",
            "typeParams": ["string"]
          },
          "doc": " Tickets to check-in.\n",
          "required": false
        }
      ],
      "ret":       {
        "type":         {
          "name": "CheckInTicket",
          "statusCode": "200",
          "typeParams": ["All APIs.Events - Ticketing._wix_events_ticketing_CheckInTicketResponse"]
        },
        "doc": ""
      },
      "locations": [],
      "docs":       {
        "summary": " Checks in 1 or more tickets.\n \n",
        "description": [],
        "request": "POST",
        "url": "https://www.wixapis.com/events/v1/tickets/check-in",
        "links": [],
        "examples": [        {
          "title": "",
          "body": ["curl -X POST 'https://www.wixapis.com/events/v1/tickets/check-in' \\\n-H 'Content-Type: application/json' \\\n-H 'Authorization: <AUTH TOKEN>' \\\n-d @- << EOF\n{\n  \"eventId\": \"ad18d12e-a6a9-4c17-abfa-6ff119479be2\",\n  \"ticketNumber\": [\n    \"FNVL-NIJT-WP021\",\n    \"FNVL-O7MZ-0Q021\"\n  ]\n}\nEOF"],
          "response": ["{\"tickets\": [\n    {\n    \"ticketNumber\": \"FNVL-NIJT-WP021\",\n    \"orderNumber\": \"FNVL-NIJT-WP\",\n    \"ticketDefinitionId\": \"d86ffbbd-aa9b-488d-a14b-11752b78e272\",\n    \"name\": \"Early Bird\",\n    \"price\":     {\n      \"amount\": \"12.34\",\n      \"currency\": \"USD\"\n    },\n    \"free\": false,\n    \"policy\": \"This is your event ticket. Ticket holders must present their tickets on entry.\",\n    \"checkIn\": {\"created\": \"2020-05-29T14:53:43.854Z\"},\n    \"orderStatus\": \"PAID\",\n    \"orderArchived\": false,\n    \"orderFullName\": \"John Doe\",\n    \"guestDetails\":     {\n      \"guestAssigned\": false,\n      \"firstName\": \"John\",\n      \"lastName\": \"Doe\",\n      \"email\": \"john.doe@example.com\",\n      \"contactId\": \"3ef81e9f-106e-408d-a3ee-3df60838acc6\"\n    },\n    \"archived\": false,\n    \"anonymized\": false,\n    \"checkInUrl\": \"https://www.wixevents.com/check-in/FNVL-NIJT-WP021,ad18d12e-a6a9-4c17-abfa-6ff119479be2\",\n    \"ticketPdfUrl\": \"https://apps.wix.com/events/doc/tickets/Ticket.pdf?request=<TOKEN>\"\n  },\n    {\n    \"ticketNumber\": \"FNVL-O7MZ-0Q021\",\n    \"orderNumber\": \"FNVL-O7MZ-0Q\",\n    \"ticketDefinitionId\": \"d86ffbbd-aa9b-488d-a14b-11752b78e272\",\n    \"name\": \"Early Bird\",\n    \"price\":     {\n      \"amount\": \"11.11\",\n      \"currency\": \"USD\"\n    },\n    \"free\": false,\n    \"policy\": \"This is your event ticket. Ticket holders must present their tickets on entry.\",\n    \"checkIn\": {\"created\": \"2020-05-29T14:53:43.859Z\"},\n    \"orderStatus\": \"OFFLINE_PENDING\",\n    \"orderArchived\": false,\n    \"orderFullName\": \"Jane Doe\",\n    \"guestDetails\":     {\n      \"guestAssigned\": false,\n      \"firstName\": \"Jane\",\n      \"lastName\": \"Doe\",\n      \"email\": \"jane.doe@example.com\",\n      \"contactId\": \"2b7494bc-550a-47d3-8bba-d22564ae8bdc\"\n    },\n    \"archived\": false,\n    \"anonymized\": false,\n    \"checkInUrl\": \"https://www.wixevents.com/check-in/FNVL-O7MZ-0Q021,ad18d12e-a6a9-4c17-abfa-6ff119479be2\",\n    \"ticketPdfUrl\": \"https://apps.wix.com/events/doc/tickets/Ticket.pdf?request=<TOKEN>\"\n  }\n]} "],
          "type": "curl",
          "extra": {}
        }],
        "extra": {}
      },
      "extra":       {
        "hasRest": true,
        "rpcRequestName": "CheckInTicketRequest",
        "rpcResponseName": "CheckInTicketResponse"
      },
      "customLabels": []
    },
        {
      "name": "Checkout",
      "methodName": "Checkout",
      "serviceName": "CheckoutService",
      "tag": "Checkout",
      "permissions": [      {
        "name": "Manage Orders",
        "description": "Request permission to read, create and change orders."
      }],
      "events": [],
      "labels": [],
      "nameParams": [],
      "requiredFields":       [
        "guests.form",
        "eventId"
      ],
      "params":       [
                {
          "in": "PATH",
          "name": "eventId",
          "type": "string",
          "doc": " Event ID.\n",
          "required": true
        },
                {
          "in": "BODY",
          "name": "reservationId",
          "type": "string",
          "doc": " Ticket reservation ID.\n",
          "required": false
        },
                {
          "in": "BODY",
          "name": "memberId",
          "type": "string",
          "doc": " Member ID (if empty - no site member is associated to this order).\n",
          "required": false
        },
                {
          "in": "BODY",
          "name": "discount",
          "type": "All APIs.Events - Ticketing._wix_events_ticketing_DiscountRequest",
          "doc": " Discount to apply on the invoice.\n",
          "required": false
        },
                {
          "in": "BODY",
          "name": "buyer",
          "type": "All APIs.Events - Ticketing._wix_events_ticketing_Buyer",
          "doc": " Buyer details.\n",
          "required": false
        },
                {
          "in": "BODY",
          "name": "guests",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Events - Ticketing._wix_events_ticketing_Guest"]
          },
          "doc": " Guest details.\n",
          "required": false
        },
                {
          "in": "BODY",
          "name": "paidPlanBenefit",
          "type": "All APIs.Events - Ticketing._wix_events_ticketing_PaidPlanBenefit",
          "doc": " Benefit granted by the pricing plan.\n",
          "required": false
        },
                {
          "in": "BODY",
          "name": "options",
          "type": "All APIs.Events - Ticketing._wix_events_ticketing_CheckoutOptions",
          "doc": " Options controlling the checkout process.\n",
          "required": false
        },
                {
          "in": "BODY",
          "name": "policyAgreementToken",
          "type": "string",
          "doc": " Policy agreement token. Required when the event has one or more policies.\n Token must match with the token from [GetTokens](https://dev.wix.com/api/rest/wix-events/wix-events/policy/get-tokens) response.\n",
          "required": false
        }
      ],
      "ret":       {
        "type":         {
          "name": "Checkout",
          "statusCode": "200",
          "typeParams": ["All APIs.Events - Ticketing._wix_events_ticketing_CheckoutResponse"]
        },
        "doc": ""
      },
      "locations": [],
      "docs":       {
        "summary": " Checkout reserved tickets.\n Creates order and associates it with a site contact.\n Guest details must be sent according to Registration Form input fields.\n (To change an existing \"INITIATED, \"PENDING\", or \"OFFLINE_PENDING\" order, call the [Update Checkout](https://dev.wix.com/api/rest/wix-events/wix-events/checkout/update-checkout) endpoint).\n \n",
        "description": [],
        "request": "POST",
        "url": "https://www.wixapis.com/events/v1/events/{eventId}/tickets/checkout",
        "links": [],
        "examples":         [
                    {
            "title": "Checkout",
            "body": ["curl -X POST 'https://www.wixapis.com/events/v1/events/419d52c0-c93b-4155-a55c-108048f20be/tickets/checkout' \\\n-H 'Content-Type: application/json' \\\n-H 'Authorization: <AUTH TOKEN>' \\\n--data-binary '{\n                 \"reservationId\": \"106348fb-2a70-4e6e-b6c1-7aa48752efb4\",\n                 \"discount\": {\n                   \"couponCode\": \"SUMMER\"\n                 },\n                 \"guests\": [\n                   {\n                     \"form\": {\n                       \"inputValues\": [\n                         {\n                           \"inputName\": \"firstName\",\n                           \"value\": \"John\"\n                         },\n                         {\n                           \"inputName\": \"lastName\",\n                           \"value\": \"Doe\"\n                         },\n                         {\n                           \"inputName\": \"email\",\n                           \"value\": \"john.doe@wix.com\"\n                         }\n                       ]\n                     }\n                   }\n                 ]\n               }'"],
            "response": ["{\n  \"order\":   {\n    \"orderNumber\": \"FOIK-XNX7-MX\",\n    \"reservationId\": \"106348fb-2a70-4e6e-b6c1-7aa48752efb4\",\n    \"snapshotId\": \"ff95a725-a58c-4c38-b636-b90d3d216432\",\n    \"eventId\": \"419d52c0-c93b-4155-a55c-108048f20be\",\n    \"contactId\": \"\",\n    \"memberId\": \"\",\n    \"created\": \"2020-06-19T10:21:54.082Z\",\n    \"firstName\": \"John\",\n    \"lastName\": \"Doe\",\n    \"email\": \"john.doe@wix.com\",\n    \"checkoutForm\": {\"inputValues\":     [\n            {\n        \"inputName\": \"firstName\",\n        \"value\": \"John\"\n      },\n            {\n        \"inputName\": \"lastName\",\n        \"value\": \"Doe\"\n      },\n            {\n        \"inputName\": \"email\",\n        \"value\": \"john.doe@wix.com\"\n      }\n    ]},\n    \"confirmed\": false,\n    \"status\": \"INITIATED\",\n    \"method\": \"\",\n    \"ticketsQuantity\": 3,\n    \"totalPrice\":     {\n      \"amount\": \"10.00\",\n      \"currency\": \"EUR\"\n    },\n    \"ticketsPdf\": \"<url_to_pdf>\",\n    \"tickets\": [],\n    \"archived\": false,\n    \"anonymized\": false,\n    \"fullName\": \"John Doe\",\n    \"invoice\":     {\n      \"items\":       [\n                {\n          \"id\": \"210db14c-c339-4ce3-b07a-4c0032a6fc79\",\n          \"quantity\": 1,\n          \"name\": \"Nice ticket\",\n          \"price\":           {\n            \"amount\": \"0.00\",\n            \"currency\": \"EUR\"\n          },\n          \"total\":           {\n            \"amount\": \"0.00\",\n            \"currency\": \"EUR\"\n          },\n          \"fees\": []\n        },\n                {\n          \"id\": \"1d4083ae-e8cf-4bb7-8e2a-0ad011f12b93\",\n          \"quantity\": 2,\n          \"name\": \"Early Bird\",\n          \"price\":           {\n            \"amount\": \"10.00\",\n            \"currency\": \"EUR\"\n          },\n          \"total\":           {\n            \"amount\": \"20.00\",\n            \"currency\": \"EUR\"\n          },\n          \"discount\":           {\n            \"amount\":             {\n              \"amount\": \"10.00\",\n              \"currency\": \"EUR\"\n            },\n            \"afterDiscount\":             {\n              \"amount\": \"10.00\",\n              \"currency\": \"EUR\"\n            },\n            \"code\": \"SUMMER\",\n            \"name\": \"SUMMER\",\n            \"couponId\": \"7a022172-f0c6-48f7-b4ad-8554697048aa\",\n            \"discounts\": [            {\n              \"amount\":               {\n                \"amount\": \"10.00\",\n                \"currency\": \"EUR\"\n              },\n              \"coupon\":               {\n                \"name\": \"SUMMER\",\n                \"code\": \"SUMMER\",\n                \"couponId\": \"7a022172-f0c6-48f7-b4ad-8554697048aa\"\n              }\n            }]\n          },\n          \"fees\": []\n        }\n      ],\n      \"total\":       {\n        \"amount\": \"20.00\",\n        \"currency\": \"EUR\"\n      },\n      \"discount\":       {\n        \"amount\":         {\n          \"amount\": \"10.00\",\n          \"currency\": \"EUR\"\n        },\n        \"afterDiscount\":         {\n          \"amount\": \"10.00\",\n          \"currency\": \"EUR\"\n        },\n        \"code\": \"SUMMER\",\n        \"name\": \"SUMMER\",\n        \"couponId\": \"7a022172-f0c6-48f7-b4ad-8554697048aa\",\n        \"discounts\": [        {\n          \"amount\":           {\n            \"amount\": \"10.00\",\n            \"currency\": \"EUR\"\n          },\n          \"coupon\":           {\n            \"name\": \"SUMMER\",\n            \"code\": \"SUMMER\",\n            \"couponId\": \"7a022172-f0c6-48f7-b4ad-8554697048aa\"\n          }\n        }]\n      },\n      \"subTotal\":       {\n        \"amount\": \"20.00\",\n        \"currency\": \"EUR\"\n      },\n      \"grandTotal\":       {\n        \"amount\": \"10.00\",\n        \"currency\": \"EUR\"\n      },\n      \"fees\": [],\n      \"revenue\":       {\n        \"amount\": \"10.00\",\n        \"currency\": \"EUR\"\n      }\n    },\n    \"fullyCheckedIn\": false,\n    \"transactionId\": \"\"\n  },\n  \"expires\": \"2020-06-19T10:41:33.147Z\",\n  \"reservations\":   [\n        {\n      \"quantity\": 1,\n      \"ticket\":       {\n        \"id\": \"210db14c-c339-4ce3-b07a-4c0032a6fc79\",\n        \"price\":         {\n          \"amount\": \"0.00\",\n          \"currency\": \"EUR\"\n        },\n        \"free\": true,\n        \"name\": \"Nice ticket\",\n        \"description\": \"\",\n        \"limitPerCheckout\": 0,\n        \"orderIndex\": 0,\n        \"policy\": \"\",\n        \"eventId\": \"\"\n      }\n    },\n        {\n      \"quantity\": 2,\n      \"ticket\":       {\n        \"id\": \"1d4083ae-e8cf-4bb7-8e2a-0ad011f12b93\",\n        \"price\":         {\n          \"amount\": \"10.00\",\n          \"currency\": \"EUR\"\n        },\n        \"free\": false,\n        \"name\": \"Early Bird\",\n        \"description\": \"\",\n        \"limitPerCheckout\": 0,\n        \"orderIndex\": 0,\n        \"policy\": \"\",\n        \"eventId\": \"\"\n      }\n    }\n  ]\n} "],
            "type": "curl",
            "extra": {"description": "A simple checkout when the guest is the buyer."}
          },
                    {
            "title": "Checkout with guest assigned tickets",
            "body": ["curl -X POST 'https://www.wixapis.com/events/v1/events/419d52c0-c93b-4155-a55c-108048f20be/tickets/checkout' \\\n-H 'Content-Type: application/json' \\\n-H 'Authorization: <AUTH TOKEN>' \\\n--data-binary '{\n                 \"reservationId\": \"106348fb-2a70-4e6e-b6c1-7aa48752efb4\",\n                 \"discount\": {\n                   \"couponCode\": \"SUMMER\"\n                 },\n                 \"buyer\": {\n                   \"firstName\": \"John\",\n                   \"lastName\": \"Doe\",\n                   \"email\": \"john.doe@somedomain.com\"\n                 },\n                 \"guests\": [\n                   {\n                     \"form\": {\n                       \"inputValues\": [\n                         {\n                           \"inputName\": \"firstName\",\n                           \"value\": \"John\"\n                         },\n                         {\n                           \"inputName\": \"lastName\",\n                           \"value\": \"Doe\"\n                         },\n                         {\n                           \"inputName\": \"email\",\n                           \"value\": \"john.doe@somedomain.com\"\n                         }\n                       ]\n                     }\n                   },\n                   {\n                     \"form\": {\n                       \"inputValues\": [\n                         {\n                           \"inputName\": \"firstName\",\n                           \"value\": \"Sarah\"\n                         },\n                         {\n                           \"inputName\": \"lastName\",\n                           \"value\": \"Doe\"\n                         },\n                         {\n                           \"inputName\": \"email\",\n                           \"value\": \"sarah.doe@somedomain.com\"\n                         }\n                       ]\n                     }\n                   },\n                   {\n                     \"form\": {\n                       \"inputValues\": [\n                         {\n                           \"inputName\": \"firstName\",\n                           \"value\": \"Mathew\"\n                         },\n                         {\n                           \"inputName\": \"lastName\",\n                           \"value\": \"Doe\"\n                         },\n                         {\n                           \"inputName\": \"email\",\n                           \"value\": \"mathew.doe@somedomain.com\"\n                         }\n                       ]\n                     }\n                   }\n                 ]\n               }'"],
            "response": ["{\n  \"order\":   {\n    \"orderNumber\": \"FNNU-XRQ9-QR\",\n    \"reservationId\": \"106348fb-2a70-4e6e-b6c1-7aa48752efb4\",\n    \"snapshotId\": \"ed37fbec-e065-473e-b079-6dbde2dff218\",\n    \"eventId\": \"419d52c0-c93b-4155-a55c-108048f20be\",\n    \"contactId\": \"\",\n    \"memberId\": \"\",\n    \"created\": \"2020-05-22T13:36:39.158Z\",\n    \"firstName\": \"John\",\n    \"lastName\": \"Doe\",\n    \"email\": \"john.doe@wix.com\",\n    \"checkoutForm\": {\"inputValues\":     [\n            {\n        \"inputName\": \"firstName\",\n        \"value\": \"John\"\n      },\n            {\n        \"inputName\": \"lastName\",\n        \"value\": \"Doe\"\n      },\n            {\n        \"inputName\": \"email\",\n        \"value\": \"john.doe@wix.com\"\n      }\n    ]},\n    \"confirmed\": false,\n    \"status\": \"INITIATED\",\n    \"method\": \"\",\n    \"ticketsQuantity\": 3,\n    \"totalPrice\":     {\n      \"amount\": \"190.00\",\n      \"currency\": \"EUR\"\n    },\n    \"ticketsPdf\": \"<url_to_pdf>\",\n    \"tickets\": [],\n    \"archived\": false,\n    \"anonymized\": false,\n    \"fullName\": \"John Doe\",\n    \"invoice\":     {\n      \"items\":       [\n                {\n          \"id\": \"48da25d2-afb2-4955-92a0-b820635ac321\",\n          \"quantity\": 1,\n          \"name\": \"Nice ticket\",\n          \"price\":           {\n            \"amount\": \"0.00\",\n            \"currency\": \"EUR\"\n          },\n          \"total\":           {\n            \"amount\": \"0.00\",\n            \"currency\": \"EUR\"\n          },\n          \"fees\": []\n        },\n                {\n          \"id\": \"9c13fb37-f2c6-4c9c-8950-41c49b0a5c84\",\n          \"quantity\": 2,\n          \"name\": \"VIP ticket\",\n          \"price\":           {\n            \"amount\": \"100.00\",\n            \"currency\": \"EUR\"\n          },\n          \"total\":           {\n            \"amount\": \"200.00\",\n            \"currency\": \"EUR\"\n          },\n          \"discount\":           {\n            \"amount\":             {\n              \"amount\": \"10.00\",\n              \"currency\": \"EUR\"\n            },\n            \"afterDiscount\":             {\n              \"amount\": \"190.00\",\n              \"currency\": \"EUR\"\n            },\n            \"code\": \"SUMMER\",\n            \"name\": \"SUMMER\",\n            \"couponId\": \"7a022172-f0c6-48f7-b4ad-8554697048aa\",\n            \"discounts\": [            {\n              \"amount\":               {\n                \"amount\": \"10.00\",\n                \"currency\": \"EUR\"\n              },\n              \"coupon\":               {\n                \"name\": \"SUMMER\",\n                \"code\": \"SUMMER\",\n                \"couponId\": \"7a022172-f0c6-48f7-b4ad-8554697048aa\"\n              }\n            }]\n          },\n          \"fees\": []\n        }\n      ],\n      \"total\":       {\n        \"amount\": \"200.00\",\n        \"currency\": \"EUR\"\n      },\n      \"discount\":       {\n        \"amount\":         {\n          \"amount\": \"10.00\",\n          \"currency\": \"EUR\"\n        },\n        \"afterDiscount\":         {\n          \"amount\": \"190.00\",\n          \"currency\": \"EUR\"\n        },\n        \"code\": \"SUMMER\",\n        \"name\": \"SUMMER\",\n        \"couponId\": \"7a022172-f0c6-48f7-b4ad-8554697048aa\",\n        \"discounts\": [        {\n          \"amount\":           {\n            \"amount\": \"10.00\",\n            \"currency\": \"EUR\"\n          },\n          \"coupon\":           {\n            \"name\": \"SUMMER\",\n            \"code\": \"SUMMER\",\n            \"couponId\": \"7a022172-f0c6-48f7-b4ad-8554697048aa\"\n          }\n        }]\n      },\n      \"subTotal\":       {\n        \"amount\": \"200.00\",\n        \"currency\": \"EUR\"\n      },\n      \"grandTotal\":       {\n        \"amount\": \"190.00\",\n        \"currency\": \"EUR\"\n      },\n      \"fees\": [],\n      \"revenue\":       {\n        \"amount\": \"190.00\",\n        \"currency\": \"EUR\"\n      }\n    },\n    \"fullyCheckedIn\": false,\n    \"transactionId\": \"\"\n  },\n  \"expires\": \"2020-05-22T13:12:54.804Z\",\n  \"reservations\":   [\n        {\n      \"quantity\": 1,\n      \"ticket\":       {\n        \"id\": \"48da25d2-afb2-4955-92a0-b820635ac321\",\n        \"price\":         {\n          \"amount\": \"0.00\",\n          \"currency\": \"EUR\"\n        },\n        \"free\": true,\n        \"name\": \"Nice ticket\",\n        \"description\": \"\",\n        \"limitPerCheckout\": 0,\n        \"orderIndex\": 0\n      }\n    },\n        {\n      \"quantity\": 2,\n      \"ticket\":       {\n        \"id\": \"9c13fb37-f2c6-4c9c-8950-41c49b0a5c84\",\n        \"price\":         {\n          \"amount\": \"100.00\",\n          \"currency\": \"EUR\"\n        },\n        \"free\": false,\n        \"name\": \"VIP ticket\",\n        \"description\": \"\",\n        \"limitPerCheckout\": 0,\n        \"orderIndex\": 0\n      }\n    }\n  ]\n} "],
            "type": "curl",
            "extra": {"description": "If guest assigned tickets is turned on of event, the guest form mus be filled for each of the ticket. Also buyer details has to be provided that will be visible in the order."}
          }
        ],
        "extra": {}
      },
      "extra":       {
        "hasRest": true,
        "rpcRequestName": "CheckoutRequest",
        "rpcResponseName": "CheckoutResponse"
      },
      "customLabels": []
    },
        {
      "name": "Confirm Order",
      "methodName": "ConfirmOrder",
      "serviceName": "OrderManagement",
      "tag": "Order",
      "permissions": [      {
        "name": "Manage Orders",
        "description": "Request permission to read, create and change orders."
      }],
      "events": [],
      "labels": [],
      "nameParams": [],
      "requiredFields": ["eventId"],
      "params":       [
                {
          "in": "PATH",
          "name": "eventId",
          "type": "string",
          "doc": " Event ID.\n",
          "required": true
        },
                {
          "in": "BODY",
          "name": "orderNumber",
          "type":           {
            "name": "array",
            "typeParams": ["string"]
          },
          "doc": " Order numbers.\n",
          "required": false
        }
      ],
      "ret":       {
        "type":         {
          "name": "ConfirmOrder",
          "statusCode": "200",
          "typeParams": ["All APIs.Events - Ticketing._wix_events_ticketing_ConfirmOrderResponse"]
        },
        "doc": ""
      },
      "locations": [],
      "docs":       {
        "summary": " Changes order status to \"CONFIRMED\" - from \"INITIATED, \"PENDING\", \"OFFLINE_PENDING\" to \"PAID\".\n Previously confirmed orders (with status \"PAID\" or \"FREE\") are not changed.\n Confirming previously \"INITIATED\" or \"PENDING\" orders triggers an email with the tickets to the buyer (and to additional guests, if relevant and provided).\n \n",
        "description": [],
        "request": "POST",
        "url": "https://www.wixapis.com/events/v1/events/{eventId}/orders/confirm",
        "links": [],
        "examples": [        {
          "title": "",
          "body": ["curl -X POST 'https://api.wix.com/events/v1/events/619d52c0-c93b-4155-a55c-108048f20b3f/orders/confirm' \\\n-H 'Content-Type: application/json' \\\n-H 'Authorization: <AUTH TOKEN>' \\\n-d @- << EOF\n{\n  \"orderNumber\": [\n    \"FM9X-EHKF-ZO\"\n  ]\n}\nEOF"],
          "response": ["{\"orders\": [{\n  \"orderNumber\": \"FM9X-EHKF-ZO\",\n  \"reservationId\": \"89f8cce3-d6aa-4b5d-a3ae-1667d81ceb8d\",\n  \"snapshotId\": \"f16f73a4-9c62-4f66-a4d2-2a01fe45fc96\",\n  \"eventId\": \"619d52c0-c93b-4155-a55c-108048f20b3f\",\n  \"contactId\": \"a5146d63-9f90-49d2-9979-34506942a02e\",\n  \"memberId\": \"\",\n  \"created\": \"2020-04-07T06:42:35.381Z\",\n  \"firstName\": \"John\",\n  \"lastName\": \"Doe\",\n  \"email\": \"john.doe@somedomain.com\",\n  \"checkoutForm\": {\"inputValues\":   [\n        {\n      \"inputName\": \"firstName\",\n      \"value\": \"John\"\n    },\n        {\n      \"inputName\": \"lastName\",\n      \"value\": \"Doe\"\n    },\n        {\n      \"inputName\": \"email\",\n      \"value\": \"john.doe@somedomain.com\"\n    }\n  ]},\n  \"confirmed\": true,\n  \"status\": \"PAID\",\n  \"method\": \"payPal\",\n  \"ticketsQuantity\": 1,\n  \"totalPrice\":   {\n    \"amount\": \"10.00\",\n    \"currency\": \"EUR\"\n  },\n  \"ticketsPdf\": \"<url_to_pdf>\",\n  \"tickets\": [  {\n    \"ticketNumber\": \"FM9X-EHKF-ZO021\",\n    \"orderNumber\": \"FM9X-EHKF-ZO\",\n    \"ticketDefinitionId\": \"0abf130e-2157-4131-a164-72c849d3f142\",\n    \"name\": \"VIP enterance\",\n    \"price\":     {\n      \"amount\": \"10.00\",\n      \"currency\": \"EUR\"\n    },\n    \"free\": false,\n    \"policy\": \"This is your event ticket. Ticket holders must present their tickets on entry. Looking forward to seeing you there!\",\n    \"checkInUrl\": \"https://www.wixevents.com/check-in/FM9X-EHKF-ZO021,619d52c0-c93b-4155-a55c-108048f20b3f\",\n    \"orderStatus\": \"PAID\",\n    \"orderArchived\": false,\n    \"orderFullName\": \"John Doe\",\n    \"guestFullName\": \"Sarah Doe\",\n    \"guestDetails\":     {\n      \"guestAssigned\": true,\n      \"firstName\": \"Sarah\",\n      \"lastName\": \"Doe\",\n      \"email\": \"sarah.doe@somedomain.com\",\n      \"form\": {\"inputValues\":       [\n                {\n          \"inputName\": \"email\",\n          \"value\": \"sarah.doe@somedomain.com\"\n        },\n                {\n          \"inputName\": \"lastName\",\n          \"value\": \"Doe\"\n        },\n                {\n          \"inputName\": \"firstName\",\n          \"value\": \"Sarah\"\n        }\n      ]},\n      \"contactId\": \"8777c2c8-d46e-466c-b602-e5144e2cb588\"\n    },\n    \"archived\": false,\n    \"ticketPdfUrl\": \"<url_to_pdf>\",\n    \"anonymized\": false\n  }],\n  \"archived\": false,\n  \"anonymized\": false,\n  \"fullName\": \"John Doe\",\n  \"fullyCheckedIn\": false,\n  \"transactionId\": \"de57fc42-d98c-4715-8627-65e0bc0b36af\"\n}]} "],
          "type": "curl",
          "extra": {}
        }],
        "extra": {}
      },
      "extra":       {
        "hasRest": true,
        "rpcRequestName": "ConfirmOrderRequest",
        "rpcResponseName": "ConfirmOrderResponse"
      },
      "customLabels": []
    },
        {
      "name": "Create Reservation",
      "methodName": "CreateReservation",
      "serviceName": "CheckoutService",
      "tag": "Checkout",
      "permissions": [      {
        "name": "Manage Orders",
        "description": "Request permission to read, create and change orders."
      }],
      "events": [],
      "labels": [],
      "nameParams": [],
      "requiredFields": ["eventId"],
      "params":       [
                {
          "in": "PATH",
          "name": "eventId",
          "type": "string",
          "doc": " Event ID.\n",
          "required": true
        },
                {
          "in": "BODY",
          "name": "ticketQuantities",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Events - Ticketing._wix_events_ticketing_TicketReservationQuantity"]
          },
          "doc": " Tickets to reserve.\n",
          "required": false
        },
                {
          "in": "BODY",
          "name": "ignoreLimits",
          "type": "boolean",
          "doc": " Whether to ignore the available ticket limits upon reservation.\n",
          "required": false
        },
                {
          "in": "BODY",
          "name": "allowHiddenTickets",
          "type": "boolean",
          "doc": " Whether to allow reservation for hidden tickets.\n",
          "required": false
        }
      ],
      "ret":       {
        "type":         {
          "name": "CreateReservation",
          "statusCode": "200",
          "typeParams": ["All APIs.Events - Ticketing._wix_events_ticketing_CreateReservationResponse"]
        },
        "doc": ""
      },
      "locations": [],
      "docs":       {
        "summary": " Reserves tickets for 20 minutes.\n Reserved tickets are deducted from tickets stock and cannot be bought by another party.\n When the reservation expires, the tickets are added back in the stock.\n \n",
        "description": [],
        "request": "POST",
        "url": "https://www.wixapis.com/events/v1/events/{eventId}/tickets/reservation",
        "links": [],
        "examples": [        {
          "title": "",
          "body": ["curl -X POST 'https://www.wixapis.com/events/v1/events/fd56076c-38f4-4705-b9eb-ec322b85c745/tickets/reservation' \\\n-H 'Content-Type: application/json' \\\n-H 'Authorization: <AUTH TOKEN>' \\\n--data-binary '{\n                 \"ticketQuantities\": [\n                   {\n                     \"ticketDefinitionId\": \"48da25d2-afb2-4955-92a0-b820635ac321\",\n                     \"quantity\": 1\n                   },\n                   {\n                     \"ticketDefinitionId\": \"9c13fb37-f2c6-4c9c-8950-41c49b0a5c84\",\n                     \"quantity\": 2\n                   }\n                 ]\n               }'"],
          "response": ["{\n  \"id\": \"1fe76e20-efa0-4330-be44-2a8b2ca3c208\",\n  \"expires\": \"2020-05-22T13:12:54.804Z\",\n  \"reservations\":   [\n        {\n      \"quantity\": 1,\n      \"ticket\":       {\n        \"id\": \"48da25d2-afb2-4955-92a0-b820635ac321\",\n        \"price\":         {\n          \"amount\": \"0.00\",\n          \"currency\": \"EUR\"\n        },\n        \"free\": true,\n        \"name\": \"Nice ticket\",\n        \"description\": \"\",\n        \"limitPerCheckout\": 0,\n        \"orderIndex\": 0\n      }\n    },\n        {\n      \"quantity\": 2,\n      \"ticket\":       {\n        \"id\": \"9c13fb37-f2c6-4c9c-8950-41c49b0a5c84\",\n        \"price\":         {\n          \"amount\": \"100.00\",\n          \"currency\": \"EUR\"\n        },\n        \"free\": false,\n        \"name\": \"VIP ticket\",\n        \"description\": \"\",\n        \"limitPerCheckout\": 0,\n        \"orderIndex\": 0\n      }\n    }\n  ],\n  \"invoice\":   {\n    \"items\":     [\n            {\n        \"id\": \"48da25d2-afb2-4955-92a0-b820635ac321\",\n        \"quantity\": 1,\n        \"name\": \"Nice ticket\",\n        \"price\":         {\n          \"amount\": \"0.00\",\n          \"currency\": \"EUR\"\n        },\n        \"total\":         {\n          \"amount\": \"0.00\",\n          \"currency\": \"EUR\"\n        },\n        \"fees\": []\n      },\n            {\n        \"id\": \"9c13fb37-f2c6-4c9c-8950-41c49b0a5c84\",\n        \"quantity\": 2,\n        \"name\": \"VIP ticket\",\n        \"price\":         {\n          \"amount\": \"100.00\",\n          \"currency\": \"EUR\"\n        },\n        \"total\":         {\n          \"amount\": 200,\n          \"currency\": \"EUR\"\n        },\n        \"fees\": []\n      }\n    ],\n    \"total\":     {\n      \"amount\": \"200.00\",\n      \"currency\": \"EUR\"\n    },\n    \"subTotal\":     {\n      \"amount\": \"200.00\",\n      \"currency\": \"EUR\"\n    },\n    \"grandTotal\":     {\n      \"amount\": \"200.00\",\n      \"currency\": \"EUR\"\n    },\n    \"fees\": [],\n    \"revenue\":     {\n      \"amount\": \"200.00\",\n      \"currency\": \"EUR\"\n    }\n  }\n} "],
          "type": "curl",
          "extra": {}
        }],
        "extra": {}
      },
      "extra":       {
        "hasRest": true,
        "rpcRequestName": "CreateReservationRequest",
        "rpcResponseName": "CreateReservationResponse"
      },
      "customLabels": []
    },
        {
      "name": "Create Ticket Definition",
      "methodName": "CreateTicketDefinition",
      "serviceName": "TicketDefinitionManagement",
      "tag": "Ticket Definitions",
      "permissions": [      {
        "name": "Manage Ticket Definitions",
        "description": "Request permission to read, create and change event ticket definitions."
      }],
      "events": [],
      "labels": [],
      "nameParams": [],
      "requiredFields":       [
        "definition",
        "definition.name",
        "eventId"
      ],
      "params":       [
                {
          "in": "PATH",
          "name": "eventId",
          "type": "string",
          "doc": " Event ID.\n",
          "required": true
        },
                {
          "in": "BODY",
          "name": "definition",
          "type": "All APIs.Events - Ticketing._wix_events_ticketing_TicketDefinitionData",
          "doc": "Ticket definition data.\n",
          "required": true
        }
      ],
      "ret":       {
        "type":         {
          "name": "CreateTicketDefinition",
          "statusCode": "200",
          "typeParams": ["All APIs.Events - Ticketing._wix_events_ticketing_CreateTicketDefinitionResponse"]
        },
        "doc": ""
      },
      "locations": [],
      "docs":       {
        "summary": " Creates a ticket definition (and enables ticket sales).\n \n",
        "description": [],
        "request": "POST",
        "url": "https://www.wixapis.com/events/v1/events/{eventId}/tickets/definitions",
        "links": [],
        "examples":         [
                    {
            "title": "Create paid ticket definition",
            "body": ["curl -X POST 'https://www.wixapis.com/events/v1/events/fd56076c-38f4-4705-b9eb-ec322b85c745/tickets/definitions' \\\n-H 'Content-Type: application/json' \\\n-H 'Authorization: <AUTH>' \\\n-d @- << EOF\n{\n  \"definition\": {\n    \"price\": {\n      \"amount\": \"100.00\",\n      \"currency\": \"USD\"\n    },\n    \"name\": \"VIP ticket\",\n    \"description\": \"Includes drinks\",\n    \"limitPerCheckout\": 20,\n    \"limited\": true,\n    \"quantity\": 10,\n    \"orderIndex\": 1,\n    \"policy\": \"This is your event ticket. Ticket holders must present their tickets on entry. You can either print your ticket or present this digital version. You can find all the details about this event on our website. If you have any questions, issues or wish to get a refund, contact the event host. If you can’t attend the event, please get in touch. Looking forward to seeing you there!\",\n    \"wixFeeConfig\": {\n        \"type\": \"FEE_INCLUDED\"\n    }\n  }\n}\nEOF"],
            "response": ["{\"definition\": {\n  \"id\": \"fa3b78b5-4a30-4c67-9b2e-32a3b6b3ca94\",\n  \"price\":   {\n    \"amount\": \"100.00\",\n    \"currency\": \"USD\",\n    \"value\": \"100.00\"\n  },\n  \"free\": false,\n  \"name\": \"VIP ticket\",\n  \"description\": \"Includes drinks\",\n  \"limitPerCheckout\": 10,\n  \"orderIndex\": 3,\n  \"policy\": \"This is your event ticket. Ticket holders must present their tickets on entry. You can either print your ticket or present this digital version. You can find all the details about this event on our website. If you have any questions, issues or wish to get a refund, contact the event host. If you can’t attend the event, please get in touch. Looking forward to seeing you there!\",\n  \"dashboard\":   {\n    \"hidden\": false,\n    \"sold\": 0,\n    \"limited\": true,\n    \"quantity\": 10,\n    \"unsold\": 10\n  },\n  \"eventId\": \"fd56076c-38f4-4705-b9eb-ec322b85c745\",\n  \"wixFeeConfig\": {\"type\": \"FEE_INCLUDED\"},\n  \"saleStatus\": \"SALE_STARTED\"\n}} "],
            "type": "curl",
            "extra": {}
          },
                    {
            "title": "Create ticket definition with custom sale period",
            "body": ["curl -X POST 'https://www.wixapis.com/events/v1/events/fd56076c-38f4-4705-b9eb-ec322b85c745/tickets/definitions' \\\n-H 'Content-Type: application/json' \\\n-H 'Authorization: <AUTH>' \\\n-d @- << EOF\n{\n  \"definition\": {\n    \"price\": {\n      \"amount\": \"100.00\",\n      \"currency\": \"USD\"\n    },\n    \"name\": \"VIP ticket\",\n    \"description\": \"Includes drinks\",\n    \"limitPerCheckout\": 20,\n    \"limited\": true,\n    \"quantity\": 10,\n    \"orderIndex\": 1,\n    \"policy\": \"This is your event ticket. Ticket holders must present their tickets on entry. You can either print your ticket or present this digital version. You can find all the details about this event on our website. If you have any questions, issues or wish to get a refund, contact the event host. If you can’t attend the event, please get in touch. Looking forward to seeing you there!\",\n    \"wixFeeConfig\": {\n        \"type\": \"FEE_INCLUDED\"\n    },\n    \"salePeriod\": {\n        \"hideNotOnSale\": true,\n        \"startDate\": \"2021-09-27T14:18:00Z\",\n        \"endDate\": \"2021-12-31T12:00:00Z\"\n    }\n  }\n}\nEOF"],
            "response": ["{\"definition\": {\n  \"id\": \"fa3b78b5-4a30-4c67-9b2e-32a3b6b3ca94\",\n  \"price\":   {\n    \"amount\": \"100.00\",\n    \"currency\": \"USD\",\n    \"value\": \"100.00\"\n  },\n  \"free\": false,\n  \"name\": \"VIP ticket\",\n  \"description\": \"Includes drinks\",\n  \"limitPerCheckout\": 10,\n  \"orderIndex\": 3,\n  \"policy\": \"This is your event ticket. Ticket holders must present their tickets on entry. You can either print your ticket or present this digital version. You can find all the details about this event on our website. If you have any questions, issues or wish to get a refund, contact the event host. If you can’t attend the event, please get in touch. Looking forward to seeing you there!\",\n  \"dashboard\":   {\n    \"hidden\": false,\n    \"sold\": 0,\n    \"limited\": true,\n    \"quantity\": 10,\n    \"unsold\": 10\n  },\n  \"eventId\": \"fd56076c-38f4-4705-b9eb-ec322b85c745\",\n  \"wixFeeConfig\": {\"type\": \"FEE_INCLUDED\"},\n  \"salePeriod\":   {\n    \"startDate\": \"2021-09-27T14:18:00Z\",\n    \"endDate\": \"2051-12-31T12:00:00Z\",\n    \"hideNotOnSale\": true\n  },\n  \"saleStatus\": \"SALE_STARTED\"\n}} "],
            "type": "curl",
            "extra": {}
          }
        ],
        "extra": {}
      },
      "extra":       {
        "hasRest": true,
        "rpcRequestName": "CreateTicketDefinitionRequest",
        "rpcResponseName": "CreateTicketDefinitionResponse"
      },
      "customLabels": []
    },
        {
      "name": "Delete Ticket Definition",
      "methodName": "DeleteTicketDefinition",
      "serviceName": "TicketDefinitionManagement",
      "tag": "Ticket Definitions",
      "permissions": [      {
        "name": "Manage Ticket Definitions",
        "description": "Request permission to read, create and change event ticket definitions."
      }],
      "events": [],
      "labels": [],
      "nameParams": [],
      "requiredFields": ["eventId"],
      "params":       [
                {
          "in": "PATH",
          "name": "eventId",
          "type": "string",
          "doc": " Event ID.\n",
          "required": true
        },
                {
          "in": "BODY",
          "name": "delete",
          "type": "All APIs.Events - Ticketing._wix_events_ticketing_DeleteTicketDefinitionRequest_delete",
          "doc": "",
          "required": false
        }
      ],
      "ret":       {
        "type":         {
          "name": "DeleteTicketDefinition",
          "statusCode": "200",
          "typeParams": ["All APIs.Events - Ticketing._wix_events_ticketing_DeleteTicketDefinitionResponse"]
        },
        "doc": ""
      },
      "locations": [],
      "docs":       {
        "summary": " Deletes a ticket definition. (Does not affect tickets that were already ordered).\n \n",
        "description": [],
        "request": "DELETE",
        "url": "https://www.wixapis.com/events/v1/events/{eventId}/tickets/definitions",
        "links": [],
        "examples": [        {
          "title": "",
          "body": ["curl -X DELETE 'https://www.wixapis.com/events/v1/events/fd56076c-38f4-4705-b9eb-ec322b85c745/tickets/definitions?all=true' \\\n-H 'Authorization: <AUTH>'"],
          "response": ["{} "],
          "type": "curl",
          "extra": {}
        }],
        "extra": {}
      },
      "extra":       {
        "hasRest": true,
        "rpcRequestName": "DeleteTicketDefinitionRequest",
        "rpcResponseName": "DeleteTicketDefinitionResponse"
      },
      "customLabels": []
    },
        {
      "name": "Delete Tickets Check-in",
      "methodName": "DeleteTicketCheckIn",
      "serviceName": "TicketManagement",
      "tag": "Tickets",
      "permissions": [],
      "events": [],
      "labels": [],
      "nameParams": [],
      "requiredFields": ["eventId"],
      "params":       [
                {
          "in": "BODY",
          "name": "eventId",
          "type": "string",
          "doc": " Event ID.\n",
          "required": true
        },
                {
          "in": "BODY",
          "name": "ticketNumber",
          "type":           {
            "name": "array",
            "typeParams": ["string"]
          },
          "doc": " Tickets to to delete check-in.\n",
          "required": false
        }
      ],
      "ret":       {
        "type":         {
          "name": "DeleteTicketCheckIn",
          "statusCode": "200",
          "typeParams": ["All APIs.Events - Ticketing._wix_events_ticketing_DeleteTicketCheckInResponse"]
        },
        "doc": ""
      },
      "locations": [],
      "docs":       {
        "summary": " Deletes check-in for 1 or more tickets.\n \n",
        "description": [],
        "request": "DELETE",
        "url": "https://www.wixapis.com/events/v1/tickets/check-in",
        "links": [],
        "examples": [        {
          "title": "",
          "body": ["curl -X DELETE 'https://www.wixapis.com/events/v1/tickets/check-in?eventId=ad18d12e-a6a9-4c17-abfa-6ff119479be2&ticketNumber=FNVL-NIJT-WP021&ticketNumber=FNVL-O7MZ-0Q021' \\\n-H 'Authorization: <AUTH TOKEN>'"],
          "response": ["{\"tickets\": [\n    {\n    \"ticketNumber\": \"FNVL-NIJT-WP021\",\n    \"orderNumber\": \"FNVL-NIJT-WP\",\n    \"ticketDefinitionId\": \"d86ffbbd-aa9b-488d-a14b-11752b78e272\",\n    \"name\": \"Early Bird\",\n    \"price\":     {\n      \"amount\": \"12.34\",\n      \"currency\": \"USD\"\n    },\n    \"free\": false,\n    \"policy\": \"This is your event ticket. Ticket holders must present their tickets on entry.\",\n    \"orderStatus\": \"PAID\",\n    \"orderArchived\": false,\n    \"orderFullName\": \"John Doe\",\n    \"guestDetails\":     {\n      \"guestAssigned\": false,\n      \"firstName\": \"John\",\n      \"lastName\": \"Doe\",\n      \"email\": \"john.doe@example.com\",\n      \"contactId\": \"3ef81e9f-106e-408d-a3ee-3df60838acc6\"\n    },\n    \"archived\": false,\n    \"anonymized\": false,\n    \"checkInUrl\": \"https://www.wixevents.com/check-in/FNVL-NIJT-WP021,ad18d12e-a6a9-4c17-abfa-6ff119479be2\",\n    \"ticketPdfUrl\": \"https://apps.wix.com/events/doc/tickets/Ticket.pdf?request=<TOKEN>\"\n  },\n    {\n    \"ticketNumber\": \"FNVL-O7MZ-0Q021\",\n    \"orderNumber\": \"FNVL-O7MZ-0Q\",\n    \"ticketDefinitionId\": \"d86ffbbd-aa9b-488d-a14b-11752b78e272\",\n    \"name\": \"Early Bird\",\n    \"price\":     {\n      \"amount\": \"11.11\",\n      \"currency\": \"USD\"\n    },\n    \"free\": false,\n    \"policy\": \"This is your event ticket. Ticket holders must present their tickets on entry.\",\n    \"orderStatus\": \"OFFLINE_PENDING\",\n    \"orderArchived\": false,\n    \"orderFullName\": \"Jane Doe\",\n    \"guestDetails\":     {\n      \"guestAssigned\": false,\n      \"firstName\": \"Jane\",\n      \"lastName\": \"Doe\",\n      \"email\": \"jane.doe@example.com\",\n      \"contactId\": \"2b7494bc-550a-47d3-8bba-d22564ae8bdc\"\n    },\n    \"archived\": false,\n    \"anonymized\": false,\n    \"checkInUrl\": \"https://www.wixevents.com/check-in/FNVL-O7MZ-0Q021,ad18d12e-a6a9-4c17-abfa-6ff119479be2\",\n    \"ticketPdfUrl\": \"https://apps.wix.com/events/doc/tickets/Ticket.pdf?request=<TOKEN>\"\n  }\n]} "],
          "type": "curl",
          "extra": {}
        }],
        "extra": {}
      },
      "extra":       {
        "hasRest": true,
        "rpcRequestName": "DeleteTicketCheckInRequest",
        "rpcResponseName": "DeleteTicketCheckInResponse"
      },
      "customLabels": []
    },
        {
      "name": "Get Checkout Options",
      "methodName": "GetCheckoutOptions",
      "serviceName": "CheckoutService",
      "tag": "Checkout",
      "permissions": [      {
        "name": "Manage Orders",
        "description": "Request permission to read, create and change orders."
      }],
      "events": [],
      "labels": [],
      "nameParams": [],
      "params": [],
      "ret":       {
        "type":         {
          "name": "GetCheckoutOptions",
          "statusCode": "200",
          "typeParams": ["All APIs.Events - Ticketing._wix_events_ticketing_GetCheckoutOptionsResponse"]
        },
        "doc": ""
      },
      "locations": [],
      "docs":       {
        "summary": " Returns checkout meta data used in checkout UX.\n \n",
        "description": [],
        "request": "GET",
        "url": "https://www.wixapis.com/events/v1/checkout/options",
        "links": [],
        "examples": [        {
          "title": "",
          "body": ["curl -X GET 'https://www.wixapis.com/events/v1/checkout/options' \\\n-H 'Authorization: <AUTH TOKEN>'"],
          "response": ["{\n  \"paymentMethodConfigured\": true,\n  \"acceptCoupons\": true,\n  \"premiumServices\": true,\n  \"paidTickets\": true\n} "],
          "type": "curl",
          "extra": {}
        }],
        "extra": {}
      },
      "extra":       {
        "hasRest": true,
        "rpcRequestName": "GetCheckoutOptionsRequest",
        "rpcResponseName": "GetCheckoutOptionsResponse"
      },
      "customLabels": []
    },
        {
      "name": "Get Invoice",
      "methodName": "GetInvoice",
      "serviceName": "CheckoutService",
      "tag": "Checkout",
      "permissions":       [
                {
          "name": "Manage Orders",
          "description": "Request permission to read, create and change orders."
        },
                {
          "name": "Read Basic Events Order Info",
          "description": "Request permission to read basic order info."
        }
      ],
      "events": [],
      "labels": [],
      "nameParams": [],
      "requiredFields":       [
        "eventId",
        "reservationId"
      ],
      "params":       [
                {
          "in": "PATH",
          "name": "eventId",
          "type": "string",
          "doc": " Event ID.\n",
          "required": true
        },
                {
          "in": "PATH",
          "name": "reservationId",
          "type": "string",
          "doc": " Reservation ID.\n",
          "required": true
        },
                {
          "in": "BODY",
          "name": "withDiscount",
          "type": "All APIs.Events - Ticketing._wix_events_ticketing_DiscountRequest",
          "doc": " Optional discount to be applied on the returned invoice.\n",
          "required": false
        },
                {
          "in": "BODY",
          "name": "paidPlanBenefit",
          "type": "All APIs.Events - Ticketing._wix_events_ticketing_PaidPlanBenefit",
          "doc": " Optional benefit granted by the pricing plan to be applied on the returned invoice.\n",
          "required": false
        }
      ],
      "ret":       {
        "type":         {
          "name": "GetInvoice",
          "statusCode": "200",
          "typeParams": ["All APIs.Events - Ticketing._wix_events_ticketing_GetInvoiceResponse"]
        },
        "doc": ""
      },
      "locations": [],
      "docs":       {
        "summary": " Generates a preview of a reservation invoice, including the given coupon or pricing plan.\n \n",
        "description": [],
        "request": "POST",
        "url": "https://www.wixapis.com/events/v1/events/{eventId}/tickets/reservation/{reservationId}/invoice",
        "links": [],
        "examples": [        {
          "title": "",
          "body": ["curl -X POST 'https://www.wixapis.com/events/v1/events/fd56076c-38f4-4705-b9eb-ec322b85c745/tickets/reservation/1fe76e20-efa0-4330-be44-2a8b2ca3c208/invoice' \\\n-H 'Content-Type: application/json' \\\n-H 'Authorization: <AUTH TOKEN>' \\\n--data-binary '{\n                 \"withDiscount\": {\n                   \"couponCode\": \"<coupon_code>\"\n                 }\n               }'"],
          "response": ["{\"invoice\": {\n  \"items\":   [\n        {\n      \"id\": \"48da25d2-afb2-4955-92a0-b820635ac321\",\n      \"quantity\": 1,\n      \"name\": \"Nice ticket\",\n      \"price\":       {\n        \"amount\": \"0.00\",\n        \"currency\": \"EUR\"\n      },\n      \"total\":       {\n        \"amount\": \"0.00\",\n        \"currency\": \"EUR\"\n      },\n      \"fees\": []\n    },\n        {\n      \"id\": \"9c13fb37-f2c6-4c9c-8950-41c49b0a5c84\",\n      \"quantity\": 2,\n      \"name\": \"VIP ticket\",\n      \"price\":       {\n        \"amount\": \"100.00\",\n        \"currency\": \"EUR\"\n      },\n      \"total\":       {\n        \"amount\": \"200.00\",\n        \"currency\": \"EUR\"\n      },\n      \"discount\":       {\n        \"amount\":         {\n          \"amount\": \"10.00\",\n          \"currency\": \"EUR\"\n        },\n        \"afterDiscount\":         {\n          \"amount\": \"190.00\",\n          \"currency\": \"EUR\"\n        },\n        \"code\": \"SUMMER\",\n        \"name\": \"SUMMER\",\n        \"couponId\": \"7a022172-f0c6-48f7-b4ad-8554697048aa\",\n        \"discounts\": [        {\n          \"amount\":           {\n            \"amount\": \"10.00\",\n            \"currency\": \"EUR\"\n          },\n          \"coupon\":           {\n            \"name\": \"SUMMER\",\n            \"code\": \"SUMMER\",\n            \"couponId\": \"7a022172-f0c6-48f7-b4ad-8554697048aa\"\n          }\n        }]\n      },\n      \"fees\": []\n    }\n  ],\n  \"total\":   {\n    \"amount\": \"200.00\",\n    \"currency\": \"EUR\"\n  },\n  \"discount\":   {\n    \"amount\":     {\n      \"amount\": \"10.00\",\n      \"currency\": \"EUR\"\n    },\n    \"afterDiscount\":     {\n      \"amount\": \"190.00\",\n      \"currency\": \"EUR\"\n    },\n    \"code\": \"SUMMER\",\n    \"name\": \"SUMMER\",\n    \"couponId\": \"7a022172-f0c6-48f7-b4ad-8554697048aa\",\n    \"discounts\": [    {\n      \"amount\":       {\n        \"amount\": \"10.00\",\n        \"currency\": \"EUR\"\n      },\n      \"coupon\":       {\n        \"name\": \"SUMMER\",\n        \"code\": \"SUMMER\",\n        \"couponId\": \"7a022172-f0c6-48f7-b4ad-8554697048aa\"\n      }\n    }]\n  },\n  \"subTotal\":   {\n    \"amount\": \"200.00\",\n    \"currency\": \"EUR\"\n  },\n  \"grandTotal\":   {\n    \"amount\": \"190.00\",\n    \"currency\": \"EUR\"\n  },\n  \"fees\": [],\n  \"revenue\":   {\n    \"amount\": \"190.00\",\n    \"currency\": \"EUR\"\n  }\n}} "],
          "type": "curl",
          "extra": {}
        }],
        "extra": {}
      },
      "extra":       {
        "hasRest": true,
        "rpcRequestName": "GetInvoiceRequest",
        "rpcResponseName": "GetInvoiceResponse"
      },
      "customLabels": []
    },
        {
      "name": "Get Order",
      "methodName": "GetOrder",
      "serviceName": "OrderManagement",
      "tag": "Order",
      "permissions": [      {
        "name": "Read Basic Events Order Info",
        "description": "Request permission to read basic order info."
      }],
      "events": [],
      "labels": [],
      "nameParams": [],
      "requiredFields":       [
        "eventId",
        "orderNumber"
      ],
      "params":       [
                {
          "in": "PATH",
          "name": "eventId",
          "type": "string",
          "doc": " Event ID.\n",
          "required": true
        },
                {
          "in": "PATH",
          "name": "orderNumber",
          "type": "string",
          "doc": " Unique order number.\n",
          "required": true
        },
                {
          "in": "QUERY",
          "name": "fieldset",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Events - Ticketing._wix_events_ticketing_OrderFieldset"]
          },
          "doc": " Controls which data is returned. See [Fieldset](https://dev.wix.com/api/rest/wix-events/wix-events/fieldset#wix-events_wix-events_fieldset_order-fieldset).\n",
          "required": false
        }
      ],
      "ret":       {
        "type":         {
          "name": "GetOrder",
          "statusCode": "200",
          "typeParams": ["All APIs.Events - Ticketing._wix_events_ticketing_GetOrderResponse"]
        },
        "doc": ""
      },
      "locations": [],
      "docs":       {
        "summary": "  Retrieves an order, including ticket data.\n \n",
        "description": [],
        "request": "GET",
        "url": "https://www.wixapis.com/events/v1/events/{eventId}/orders/{orderNumber}",
        "links": [],
        "examples": [        {
          "title": "",
          "body": ["curl -X GET 'https://api.wix.com/events/v1/events/619d52c0-c93b-4155-a55c-108048f20b3f/orders/FM9X-EHKF-ZO?fieldset=DETAILS&fieldset=FORM&fieldset=TICKETS' \\\n-H 'Authorization: <AUTH TOKEN>'"],
          "response": ["{\n  \"order\":   {\n    \"orderNumber\": \"FM9X-EHKF-ZO\",\n    \"reservationId\": \"89f8cce3-d6aa-4b5d-a3ae-1667d81ceb8d\",\n    \"snapshotId\": \"f16f73a4-9c62-4f66-a4d2-2a01fe45fc96\",\n    \"eventId\": \"619d52c0-c93b-4155-a55c-108048f20b3f\",\n    \"contactId\": \"a5146d63-9f90-49d2-9979-34506942a02e\",\n    \"memberId\": \"\",\n    \"created\": \"2020-04-07T06:42:35.381Z\",\n    \"firstName\": \"John\",\n    \"lastName\": \"Doe\",\n    \"email\": \"john.doe@somedomain.com\",\n    \"checkoutForm\": {\"inputValues\":     [\n            {\n        \"inputName\": \"firstName\",\n        \"value\": \"John\"\n      },\n            {\n        \"inputName\": \"lastName\",\n        \"value\": \"Doe\"\n      },\n            {\n        \"inputName\": \"email\",\n        \"value\": \"john.doe@somedomain.com\"\n      }\n    ]},\n    \"confirmed\": true,\n    \"status\": \"PAID\",\n    \"method\": \"payPal\",\n    \"ticketsQuantity\": 1,\n    \"totalPrice\":     {\n      \"amount\": \"10.00\",\n      \"currency\": \"EUR\"\n    },\n    \"ticketsPdf\": \"<url_to_pdf>\",\n    \"tickets\": [    {\n      \"ticketNumber\": \"FM9X-EHKF-ZO021\",\n      \"orderNumber\": \"FM9X-EHKF-ZO\",\n      \"ticketDefinitionId\": \"0abf130e-2157-4131-a164-72c849d3f142\",\n      \"name\": \"VIP enterance\",\n      \"price\":       {\n        \"amount\": \"10.00\",\n        \"currency\": \"EUR\"\n      },\n      \"free\": false,\n      \"policy\": \"This is your event ticket. Ticket holders must present their tickets on entry. Looking forward to seeing you there!\",\n      \"checkInUrl\": \"https://www.wixevents.com/check-in/FM9X-EHKF-ZO021,619d52c0-c93b-4155-a55c-108048f20b3f\",\n      \"orderStatus\": \"PAID\",\n      \"orderArchived\": false,\n      \"orderFullName\": \"John Doe\",\n      \"guestFullName\": \"Sarah Doe\",\n      \"guestDetails\":       {\n        \"guestAssigned\": true,\n        \"firstName\": \"Sarah\",\n        \"lastName\": \"Doe\",\n        \"email\": \"sarah.doe@somedomain.com\",\n        \"form\": {\"inputValues\":         [\n                    {\n            \"inputName\": \"email\",\n            \"value\": \"sarah.doe@somedomain.com\"\n          },\n                    {\n            \"inputName\": \"lastName\",\n            \"value\": \"Doe\"\n          },\n                    {\n            \"inputName\": \"firstName\",\n            \"value\": \"Sarah\"\n          }\n        ]},\n        \"contactId\": \"8777c2c8-d46e-466c-b602-e5144e2cb588\"\n      },\n      \"archived\": false,\n      \"ticketPdfUrl\": \"<url_to_pdf>\",\n      \"anonymized\": false\n    }],\n    \"archived\": false,\n    \"anonymized\": false,\n    \"fullName\": \"John Doe\",\n    \"fullyCheckedIn\": false,\n    \"transactionId\": \"de57fc42-d98c-4715-8627-65e0bc0b36af\"\n  },\n  \"calendarLinks\":   {\n    \"google\": \"<add_to_google_calendar_url>\",\n    \"ics\": \"<ics_url>\"\n  }\n} "],
          "type": "curl",
          "extra": {}
        }],
        "extra": {}
      },
      "extra":       {
        "hasRest": true,
        "rpcRequestName": "GetOrderRequest",
        "rpcResponseName": "GetOrderResponse"
      },
      "customLabels": []
    },
        {
      "name": "Get Summary",
      "methodName": "GetSummary",
      "serviceName": "OrderManagement",
      "tag": "Order",
      "permissions": [      {
        "name": "Read Basic Events Order Info",
        "description": "Request permission to read basic order info."
      }],
      "events": [],
      "labels": [],
      "nameParams": [],
      "params": [      {
        "in": "QUERY",
        "name": "eventId",
        "type": "string",
        "doc": " Event ID.\n",
        "required": false
      }],
      "ret":       {
        "type":         {
          "name": "GetSummary",
          "statusCode": "200",
          "typeParams": ["All APIs.Events - Ticketing._wix_events_ticketing_GetSummaryResponse"]
        },
        "doc": ""
      },
      "locations": [],
      "docs":       {
        "summary": " Retrieves a summary of total ticket sales.\n \n",
        "description": [],
        "request": "GET",
        "url": "https://www.wixapis.com/events/v1/orders/summary",
        "links": [],
        "examples": [        {
          "title": "",
          "body": ["curl -X GET 'https://api.wix.com/events/v1/orders/summary?eventId=619d52c0-c93b-4155-a55c-108048f20b3f' \\\n-H 'Authorization: <AUTH TOKEN>'"],
          "response": ["{\"sales\": [{\n  \"total\":   {\n    \"amount\": \"14.00\",\n    \"currency\": \"EUR\"\n  },\n  \"totalOrders\": 4,\n  \"totalTickets\": 8,\n  \"revenue\":   {\n    \"amount\": \"14.00\",\n    \"currency\": \"EUR\"\n  }\n}]} "],
          "type": "curl",
          "extra": {}
        }],
        "extra": {}
      },
      "extra":       {
        "hasRest": true,
        "rpcRequestName": "GetSummaryRequest",
        "rpcResponseName": "GetSummaryResponse"
      },
      "customLabels": []
    },
        {
      "name": "Get Ticket",
      "methodName": "GetTicket",
      "serviceName": "TicketManagement",
      "tag": "Tickets",
      "permissions": [      {
        "name": "Read Event Tickets and Guest List",
        "description": "Request permission to read event tickets and guest lists."
      }],
      "events": [],
      "labels": [],
      "nameParams": [],
      "requiredFields":       [
        "eventId",
        "ticketNumber"
      ],
      "params":       [
                {
          "in": "PATH",
          "name": "eventId",
          "type": "string",
          "doc": " Event ID.\n",
          "required": true
        },
                {
          "in": "PATH",
          "name": "ticketNumber",
          "type": "string",
          "doc": " Unique ticket number.\n",
          "required": true
        },
                {
          "in": "QUERY",
          "name": "fieldset",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Events - Ticketing._wix_events_ticketing_TicketFieldset"]
          },
          "doc": " Control which data is returned in response. See [Fieldsets](https://dev.wix.com/api/rest/wix-events/wix-events/fieldset#wix-events_wix-events_fieldset_ticket-fieldset).\n",
          "required": false
        }
      ],
      "ret":       {
        "type":         {
          "name": "GetTicket",
          "statusCode": "200",
          "typeParams": ["All APIs.Events - Ticketing._wix_events_ticketing_GetTicketResponse"]
        },
        "doc": ""
      },
      "locations": [],
      "docs":       {
        "summary": " Retrieves a ticket by unique ticket number.\n \n",
        "description": [],
        "request": "GET",
        "url": "https://www.wixapis.com/events/v1/events/{eventId}/tickets/{ticketNumber}",
        "links": [],
        "examples": [        {
          "title": "",
          "body": ["curl -X GET 'https://www.wixapis.com/events/v1/events/ad18d12e-a6a9-4c17-abfa-6ff119479be2/tickets/FNVL-NIJT-WP021?fieldset=GUEST_DETAILS&fieldset=TICKET_DETAILS' \\\n-H 'Authorization: <AUTH TOKEN>'"],
          "response": ["{\"ticket\": {\n  \"ticketNumber\": \"FNVL-NIJT-WP021\",\n  \"orderNumber\": \"FNVL-NIJT-WP\",\n  \"ticketDefinitionId\": \"d86ffbbd-aa9b-488d-a14b-11752b78e272\",\n  \"name\": \"Early Bird\",\n  \"price\":   {\n    \"amount\": \"12.34\",\n    \"currency\": \"USD\"\n  },\n  \"free\": false,\n  \"policy\": \"This is your event ticket. Ticket holders must present their tickets on entry.\",\n  \"orderStatus\": \"PAID\",\n  \"orderArchived\": false,\n  \"orderFullName\": \"John Doe\",\n  \"guestDetails\":   {\n    \"guestAssigned\": false,\n    \"firstName\": \"John\",\n    \"lastName\": \"Doe\",\n    \"email\": \"john.doe@example.com\",\n    \"contactId\": \"3ef81e9f-106e-408d-a3ee-3df60838acc6\"\n  },\n  \"archived\": false,\n  \"anonymized\": false,\n  \"checkInUrl\": \"https://www.wixevents.com/check-in/FNVL-NIJT-WP021,ad18d12e-a6a9-4c17-abfa-6ff119479be2\",\n  \"ticketPdfUrl\": \"https://apps.wix.com/events/doc/tickets/Ticket.pdf?request=<TOKEN>\"\n}} "],
          "type": "curl",
          "extra": {}
        }],
        "extra": {}
      },
      "extra":       {
        "hasRest": true,
        "rpcRequestName": "GetTicketRequest",
        "rpcResponseName": "GetTicketResponse"
      },
      "customLabels": []
    },
        {
      "name": "Get Ticket Definition",
      "methodName": "GetTicketDefinition",
      "serviceName": "TicketDefinitionManagement",
      "tag": "Ticket Definitions",
      "permissions":       [
                {
          "name": "Manage Orders",
          "description": "Request permission to read, create and change orders."
        },
                {
          "name": "Manage Ticket Definitions",
          "description": "Request permission to read, create and change event ticket definitions."
        }
      ],
      "events": [],
      "labels": [],
      "nameParams": [],
      "requiredFields": ["definitionId"],
      "params":       [
                {
          "in": "PATH",
          "name": "definitionId",
          "type": "string",
          "doc": " Ticket definition ID.\n",
          "required": true
        },
                {
          "in": "QUERY",
          "name": "fieldset",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Events - Ticketing._wix_events_ticketing_TicketDefinitionFieldset"]
          },
          "doc": " Control which data is returned in the response. See [Fieldsets](https://dev.wix.com/api/rest/wix-events/wix-events/fieldset#wix-events_wix-events_fieldset_ticket-definition-fieldset)\n",
          "required": false
        }
      ],
      "ret":       {
        "type":         {
          "name": "GetTicketDefinition",
          "statusCode": "200",
          "typeParams": ["All APIs.Events - Ticketing._wix_events_ticketing_GetTicketDefinitionResponse"]
        },
        "doc": ""
      },
      "locations": [],
      "docs":       {
        "summary": " Retrieves a ticket definition.\n \n",
        "description": [],
        "request": "GET",
        "url": "https://www.wixapis.com/events/v1/tickets/definitions/{definitionId}",
        "links": [],
        "examples": [        {
          "title": "Get single ticket definition",
          "body": ["curl -X GET 'https://www.wixapis.com/events/v1/tickets/definitions/d092fd27-35e9-433e-838c-7980708981a0?fieldset=POLICY&fieldset=DASHBOARD' \\\n-H 'Authorization: <AUTH>'"],
          "response": ["{\"definition\": {\n  \"id\": \"d092fd27-35e9-433e-838c-7980708981a0\",\n  \"price\":   {\n    \"amount\": \"100.00\",\n    \"currency\": \"USD\",\n    \"value\": \"100.00\"\n  },\n  \"free\": false,\n  \"name\": \"VIP ticket\",\n  \"description\": \"Includes drinks\",\n  \"limitPerCheckout\": 20,\n  \"orderIndex\": 1,\n  \"policy\": \"This is your event ticket. Ticket holders must present their tickets on entry. You can either print your ticket or present this digital version. You can find all the details about this event on our website. If you have any questions, issues or wish to get a refund, contact the event host. If you can’t attend the event, please get in touch. Looking forward to seeing you there!\",\n  \"dashboard\":   {\n    \"hidden\": false,\n    \"sold\": 0,\n    \"limited\": true,\n    \"quantity\": 100,\n    \"unsold\": 100\n  },\n  \"eventId\": \"0f018a42-fdb2-45d9-a008-6d0dd74b90ec\",\n  \"salePeriod\":   {\n    \"startDate\": \"2029-01-01T09:51:00Z\",\n    \"endDate\": \"2030-09-27T09:55:00Z\",\n    \"hideNotOnSale\": true\n  },\n  \"saleStatus\": \"SALE_SCHEDULED\"\n}} "],
          "type": "curl",
          "extra": {}
        }],
        "extra": {}
      },
      "extra":       {
        "hasRest": true,
        "rpcRequestName": "GetTicketDefinitionRequest",
        "rpcResponseName": "GetTicketDefinitionResponse"
      },
      "customLabels": []
    },
        {
      "name": "List Available Tickets",
      "methodName": "ListAvailableTickets",
      "serviceName": "CheckoutService",
      "tag": "Checkout",
      "permissions": [      {
        "name": "Manage Orders",
        "description": "Request permission to read, create and change orders."
      }],
      "events": [],
      "labels": [],
      "nameParams": [],
      "params":       [
                {
          "in": "QUERY",
          "name": "eventId",
          "type": "string",
          "doc": " Event ID. If not provided, available tickets for all events in the site will be returned.\n",
          "required": false
        },
                {
          "in": "QUERY",
          "name": "offset",
          "type": "integer",
          "doc": " Offset.\n",
          "required": false
        },
                {
          "in": "QUERY",
          "name": "limit",
          "type": "integer",
          "doc": " Limit.\n",
          "required": false
        },
                {
          "in": "QUERY",
          "name": "sort",
          "type": "string",
          "doc": " Sort order, defaults to \"created:asc\".\n See [supported fields](https://dev.wix.com/api/rest/wix-events/wix-events/filter-and-sort#wix-events_wix-events_filter-and-sort_list-query-available-tickets).\n",
          "required": false
        },
                {
          "in": "QUERY",
          "name": "state",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Events - Ticketing._wix_events_ticketing_TicketDefinitionStateEnum_State"]
          },
          "doc": "",
          "required": false
        }
      ],
      "ret":       {
        "type":         {
          "name": "ListAvailableTickets",
          "statusCode": "200",
          "typeParams": ["All APIs.Events - Ticketing._wix_events_ticketing_ListAvailableTicketsResponse"]
        },
        "doc": ""
      },
      "locations": [],
      "docs":       {
        "summary": " Returns tickets available to reserve.\n \n",
        "description": [],
        "request": "GET",
        "url": "https://www.wixapis.com/events/v1/tickets/available",
        "links": [],
        "examples": [        {
          "title": "",
          "body": ["curl -X GET 'https://www.wixapis.com/events/v1/tickets/available?limit=100&eventId=fd56076c-38f4-4705-b9eb-ec322b85c745&order=orderIndex:asc' \\\n-H 'Authorization: <AUTH TOKEN>'"],
          "response": ["{\n  \"metaData\":   {\n    \"count\": 2,\n    \"offset\": 0,\n    \"total\": 2\n  },\n  \"definitions\":   [\n        {\n      \"id\": \"48da25d2-afb2-4955-92a0-b820635ac321\",\n      \"price\":       {\n        \"amount\": \"0.00\",\n        \"currency\": \"EUR\"\n      },\n      \"free\": true,\n      \"name\": \"Nice ticket\",\n      \"description\": \"\",\n      \"limitPerCheckout\": 20,\n      \"orderIndex\": 4,\n      \"eventId\": \"fd56076c-38f4-4705-b9eb-ec322b85c745\"\n    },\n        {\n      \"id\": \"9c13fb37-f2c6-4c9c-8950-41c49b0a5c84\",\n      \"price\":       {\n        \"amount\": \"100.00\",\n        \"currency\": \"EUR\"\n      },\n      \"free\": false,\n      \"name\": \"VIP ticket\",\n      \"description\": \"\",\n      \"limitPerCheckout\": 20,\n      \"orderIndex\": 5,\n      \"eventId\": \"fd56076c-38f4-4705-b9eb-ec322b85c745\"\n    }\n  ]\n} "],
          "type": "curl",
          "extra": {}
        }],
        "extra": {}
      },
      "extra":       {
        "hasRest": true,
        "rpcRequestName": "ListAvailableTicketsRequest",
        "rpcResponseName": "ListAvailableTicketsResponse"
      },
      "customLabels": []
    },
        {
      "name": "List Orders",
      "methodName": "ListOrders",
      "serviceName": "OrderManagement",
      "tag": "Order",
      "permissions": [      {
        "name": "Read Basic Events Order Info",
        "description": "Request permission to read basic order info."
      }],
      "events": [],
      "labels": [],
      "nameParams": [],
      "params":       [
                {
          "in": "QUERY",
          "name": "offset",
          "type": "integer",
          "doc": " Offset.\n",
          "required": false
        },
                {
          "in": "QUERY",
          "name": "limit",
          "type": "integer",
          "doc": " Limit.\n",
          "required": false
        },
                {
          "in": "QUERY",
          "name": "fieldset",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Events - Ticketing._wix_events_ticketing_OrderFieldset"]
          },
          "doc": " Controls which data is returned. See [Fieldset](https://dev.wix.com/api/rest/wix-events/wix-events/fieldset#wix-events_wix-events_fieldset_order-fieldset).\n",
          "required": false
        },
                {
          "in": "QUERY",
          "name": "status",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Events - Ticketing._wix_events_ticketing_OrderStatus"]
          },
          "doc": " Status.\n",
          "required": false
        },
                {
          "in": "QUERY",
          "name": "eventId",
          "type":           {
            "name": "array",
            "typeParams": ["string"]
          },
          "doc": " Event ID.\n",
          "required": false
        },
                {
          "in": "QUERY",
          "name": "orderNumber",
          "type":           {
            "name": "array",
            "typeParams": ["string"]
          },
          "doc": " Order number.\n",
          "required": false
        },
                {
          "in": "QUERY",
          "name": "memberId",
          "type":           {
            "name": "array",
            "typeParams": ["string"]
          },
          "doc": " Site member ID.\n",
          "required": false
        },
                {
          "in": "QUERY",
          "name": "facet",
          "type":           {
            "name": "array",
            "typeParams": ["string"]
          },
          "doc": " Field facets.\n See [supported facets](https://dev.wix.com/api/rest/wix-events/wix-events/filter-and-sort#wix-events_wix-events_filter-and-sort_list-orders).\n",
          "required": false
        },
                {
          "in": "QUERY",
          "name": "searchPhrase",
          "type": "string",
          "doc": " Textual search filter - search is performed on \"full_name\", \"email\" and \"order_number\".\n",
          "required": false
        },
                {
          "in": "QUERY",
          "name": "eventCreatorId",
          "type":           {
            "name": "array",
            "typeParams": ["string"]
          },
          "doc": " Event creator ID.\n",
          "required": false
        },
                {
          "in": "QUERY",
          "name": "sort",
          "type": "string",
          "doc": " Sort order. Defaults to \"created:asc\".\n See [supported fields](https://dev.wix.com/api/rest/wix-events/wix-events/filter-and-sort#wix-events_wix-events_filter-and-sort_list-orders).\n",
          "required": false
        },
                {
          "in": "QUERY",
          "name": "tag",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Events - Ticketing._wix_events_ticketing_OrderTag"]
          },
          "doc": " Order tag.\n",
          "required": false
        }
      ],
      "ret":       {
        "type":         {
          "name": "ListOrders",
          "statusCode": "200",
          "typeParams": ["All APIs.Events - Ticketing._wix_events_ticketing_ListOrdersResponse"]
        },
        "doc": ""
      },
      "locations": [],
      "docs":       {
        "summary": " Retrieves a list of orders, including ticket data, with basic filter support.\n \n",
        "description": [],
        "request": "GET",
        "url": "https://www.wixapis.com/events/v1/orders",
        "links": [],
        "examples": [        {
          "title": "",
          "body": ["curl -X GET 'https://api.wix.com/events/v1/orders?eventId=619d52c0-c93b-4155-a55c-108048f20b3f&offset=0&limit=1&fieldset=DETAILS&fieldset=FORM&fieldset=TICKETS&facet=status' \\\n-H 'Authorization: <AUTH TOKEN>'"],
          "response": ["{\n  \"total\": 10,\n  \"limit\": 1,\n  \"orders\": [  {\n    \"orderNumber\": \"FM9X-EHKF-ZO\",\n    \"reservationId\": \"89f8cce3-d6aa-4b5d-a3ae-1667d81ceb8d\",\n    \"snapshotId\": \"f16f73a4-9c62-4f66-a4d2-2a01fe45fc96\",\n    \"eventId\": \"619d52c0-c93b-4155-a55c-108048f20b3f\",\n    \"contactId\": \"a5146d63-9f90-49d2-9979-34506942a02e\",\n    \"memberId\": \"\",\n    \"created\": \"2020-04-07T06:42:35.381Z\",\n    \"firstName\": \"John\",\n    \"lastName\": \"Doe\",\n    \"email\": \"john.doe@somedomain.com\",\n    \"checkoutForm\": {\"inputValues\":     [\n            {\n        \"inputName\": \"firstName\",\n        \"value\": \"John\"\n      },\n            {\n        \"inputName\": \"lastName\",\n        \"value\": \"Doe\"\n      },\n            {\n        \"inputName\": \"email\",\n        \"value\": \"john.doe@somedomain.com\"\n      }\n    ]},\n    \"confirmed\": true,\n    \"status\": \"PAID\",\n    \"method\": \"payPal\",\n    \"ticketsQuantity\": 1,\n    \"totalPrice\":     {\n      \"amount\": \"10.00\",\n      \"currency\": \"EUR\"\n    },\n    \"ticketsPdf\": \"<url_to_pdf>\",\n    \"tickets\": [    {\n      \"ticketNumber\": \"FM9X-EHKF-ZO021\",\n      \"orderNumber\": \"FM9X-EHKF-ZO\",\n      \"ticketDefinitionId\": \"0abf130e-2157-4131-a164-72c849d3f142\",\n      \"name\": \"VIP enterance\",\n      \"price\":       {\n        \"amount\": \"10.00\",\n        \"currency\": \"EUR\"\n      },\n      \"free\": false,\n      \"policy\": \"This is your event ticket. Ticket holders must present their tickets on entry. Looking forward to seeing you there!\",\n      \"checkInUrl\": \"https://www.wixevents.com/check-in/FM9X-EHKF-ZO021,619d52c0-c93b-4155-a55c-108048f20b3f\",\n      \"orderStatus\": \"PAID\",\n      \"orderArchived\": false,\n      \"orderFullName\": \"John Doe\",\n      \"guestFullName\": \"Sarah Doe\",\n      \"guestDetails\":       {\n        \"guestAssigned\": true,\n        \"firstName\": \"Sarah\",\n        \"lastName\": \"Doe\",\n        \"email\": \"sarah.doe@somedomain.com\",\n        \"form\": {\"inputValues\":         [\n                    {\n            \"inputName\": \"email\",\n            \"value\": \"sarah.doe@somedomain.com\"\n          },\n                    {\n            \"inputName\": \"lastName\",\n            \"value\": \"Doe\"\n          },\n                    {\n            \"inputName\": \"firstName\",\n            \"value\": \"Sarah\"\n          }\n        ]},\n        \"contactId\": \"8777c2c8-d46e-466c-b602-e5144e2cb588\"\n      },\n      \"archived\": false,\n      \"ticketPdfUrl\": \"<url_to_pdf>\",\n      \"anonymized\": false\n    }],\n    \"archived\": false,\n    \"anonymized\": false,\n    \"fullName\": \"John Doe\",\n    \"fullyCheckedIn\": false,\n    \"transactionId\": \"de57fc42-d98c-4715-8627-65e0bc0b36af\"\n  }],\n  \"facets\": {\"status\": {\"counts\":   {\n    \"INITIATED\": 6,\n    \"PAID\": 3,\n    \"OFFLINE_PENDING\": 1\n  }}},\n  \"orderFacets\": {\"facets\": {\"status\": {\"counts\":   {\n    \"INITIATED\":     {\n      \"count\": 6,\n      \"tickets\": 20,\n      \"ticketsCheckIn\": 0\n    },\n    \"PAID\":     {\n      \"count\": 3,\n      \"tickets\": 7,\n      \"ticketsCheckIn\": 0\n    },\n    \"OFFLINE_PENDING\":     {\n      \"count\": 1,\n      \"tickets\": 1,\n      \"ticketsCheckIn\": 1\n    }\n  }}}}\n} "],
          "type": "curl",
          "extra": {}
        }],
        "extra": {}
      },
      "extra":       {
        "hasRest": true,
        "rpcRequestName": "ListOrdersRequest",
        "rpcResponseName": "ListOrdersResponse"
      },
      "customLabels": []
    },
        {
      "name": "List Ticket Definitions",
      "methodName": "ListTicketDefinitions",
      "serviceName": "TicketDefinitionManagement",
      "tag": "Ticket Definitions",
      "permissions":       [
                {
          "name": "Manage Orders",
          "description": "Request permission to read, create and change orders."
        },
                {
          "name": "Manage Ticket Definitions",
          "description": "Request permission to read, create and change event ticket definitions."
        }
      ],
      "events": [],
      "labels": [],
      "nameParams": [],
      "params":       [
                {
          "in": "QUERY",
          "name": "eventId",
          "type":           {
            "name": "array",
            "typeParams": ["string"]
          },
          "doc": " Event ID.\n",
          "required": false
        },
                {
          "in": "QUERY",
          "name": "offset",
          "type": "integer",
          "doc": " Offset. See [Pagination](https://dev.wix.com/api/rest/getting-started/pagination).\n",
          "required": false
        },
                {
          "in": "QUERY",
          "name": "limit",
          "type": "integer",
          "doc": " Limit. See [Pagination](https://dev.wix.com/api/rest/getting-started/pagination).\n",
          "required": false
        },
                {
          "in": "QUERY",
          "name": "fieldset",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Events - Ticketing._wix_events_ticketing_TicketDefinitionFieldset"]
          },
          "doc": " Controls which data is returned in the response. See [Fieldsets](https://dev.wix.com/api/rest/wix-events/wix-events/fieldset#wix-events_wix-events_fieldset_ticket-definition-fieldset)\n",
          "required": false
        },
                {
          "in": "QUERY",
          "name": "eventCreatorId",
          "type":           {
            "name": "array",
            "typeParams": ["string"]
          },
          "doc": " Event creator id filter, by default any.\n",
          "required": false
        },
                {
          "in": "QUERY",
          "name": "state",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Events - Ticketing._wix_events_ticketing_ListTicketDefinitionsRequest_State"]
          },
          "doc": " Filters by ticket definition state.\n",
          "required": false
        },
                {
          "in": "QUERY",
          "name": "sort",
          "type": "string",
          "doc": " Sort order. Defaults to: \"created:asc\".\n See [supported fields](https://dev.wix.com/api/rest/wix-events/wix-events/filter-and-sort#wix-events_wix-events_filter-and-sort_list-ticket-definitions).\n",
          "required": false
        },
                {
          "in": "QUERY",
          "name": "saleStatus",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Events - Ticketing._wix_events_ticketing_TicketSaleStatus"]
          },
          "doc": " Ticket sale status.\n",
          "required": false
        },
                {
          "in": "QUERY",
          "name": "facet",
          "type":           {
            "name": "array",
            "typeParams": ["string"]
          },
          "doc": " Filter facets to include in the response.\n See [supported facets](https://dev.wix.com/api/rest/wix-events/wix-events/filter-and-sort#wix-events_wix-events_filter-and-sort_list-ticket-definitions).\n",
          "required": false
        }
      ],
      "ret":       {
        "type":         {
          "name": "ListTicketDefinitions",
          "statusCode": "200",
          "typeParams": ["All APIs.Events - Ticketing._wix_events_ticketing_ListTicketDefinitionsResponse"]
        },
        "doc": ""
      },
      "locations": [],
      "docs":       {
        "summary": " Retrieves a list of up to 100 ticket definitions, with basic filter support.\n \n",
        "description": [],
        "request": "GET",
        "url": "https://www.wixapis.com/events/v1/tickets/definitions",
        "links": [],
        "examples": [        {
          "title": "List ordered event ticket definitions with facets",
          "body": ["curl -X GET 'https://www.wixapis.com/events/v1/tickets/definitions?offset=0&limit=2&eventId=fd56076c-38f4-4705-b9eb-ec322b85c745&order=created:asc,modified:desc&fieldset=DASHBOARD&state=VISIBLE&facet=saleStatus' \\\n-H 'Authorization: <AUTH>'"],
          "response": ["{\n  \"metaData\":   {\n    \"count\": 2,\n    \"offset\": 0,\n    \"total\": 2\n  },\n  \"definitions\":   [\n        {\n      \"id\": \"48da25d2-afb2-4955-92a0-b820635ac321\",\n      \"price\":       {\n        \"amount\": \"0.00\",\n        \"currency\": \"EUR\"\n      },\n      \"free\": true,\n      \"name\": \"Nice ticket\",\n      \"description\": \"\",\n      \"limitPerCheckout\": 20,\n      \"orderIndex\": 4,\n      \"policy\": \"\",\n      \"dashboard\":       {\n        \"hidden\": false,\n        \"sold\": 0,\n        \"limited\": false\n      },\n      \"eventId\": \"fd56076c-38f4-4705-b9eb-ec322b85c745\",\n      \"salePeriod\":       {\n        \"startDate\": \"2021-09-27T09:51:00Z\",\n        \"endDate\": \"2021-09-27T09:55:00Z\",\n        \"hideNotOnSale\": false\n      },\n      \"saleStatus\": \"SALE_ENDED\"\n    },\n        {\n      \"id\": \"9c13fb37-f2c6-4c9c-8950-41c49b0a5c84\",\n      \"price\":       {\n        \"amount\": \"100.00\",\n        \"currency\": \"EUR\"\n      },\n      \"free\": false,\n      \"name\": \"VIP ticket\",\n      \"description\": \"\",\n      \"limitPerCheckout\": 20,\n      \"orderIndex\": 5,\n      \"policy\": \"\",\n      \"dashboard\":       {\n        \"hidden\": false,\n        \"sold\": 0,\n        \"limited\": false\n      },\n      \"eventId\": \"fd56076c-38f4-4705-b9eb-ec322b85c745\",\n      \"salePeriod\":       {\n        \"startDate\": \"2019-09-27T09:51:00Z\",\n        \"endDate\": \"2110-09-27T09:55:00Z\",\n        \"hideNotOnSale\": true\n      },\n      \"saleStatus\": \"SALE_STARTED\"\n    }\n  ],\n  \"facets\": {\"saleStatus\": {\"counts\":   {\n    \"SALE_STARTED\": 1,\n    \"SALE_ENDED\": 1\n  }}}\n} "],
          "type": "curl",
          "extra": {}
        }],
        "extra": {}
      },
      "extra":       {
        "hasRest": true,
        "rpcRequestName": "ListTicketDefinitionsRequest",
        "rpcResponseName": "ListTicketDefinitionsResponse"
      },
      "customLabels": []
    },
        {
      "name": "List Tickets",
      "methodName": "ListTickets",
      "serviceName": "TicketManagement",
      "tag": "Tickets",
      "permissions": [      {
        "name": "Read Event Tickets and Guest List",
        "description": "Request permission to read event tickets and guest lists."
      }],
      "events": [],
      "labels": [],
      "nameParams": [],
      "requiredFields": ["eventId"],
      "params":       [
                {
          "in": "PATH",
          "name": "eventId",
          "type":           {
            "name": "array",
            "typeParams": ["string"]
          },
          "doc": " Event ID.\n",
          "required": true
        },
                {
          "in": "QUERY",
          "name": "ticketNumber",
          "type":           {
            "name": "array",
            "typeParams": ["string"]
          },
          "doc": " Ticket numbers.\n",
          "required": false
        },
                {
          "in": "QUERY",
          "name": "orderNumber",
          "type":           {
            "name": "array",
            "typeParams": ["string"]
          },
          "doc": " Order numbers.\n",
          "required": false
        },
                {
          "in": "QUERY",
          "name": "offset",
          "type": "integer",
          "doc": " Offset. See [Pagination](https://dev.wix.com/api/rest/getting-started/pagination).\n",
          "required": false
        },
                {
          "in": "QUERY",
          "name": "searchPhrase",
          "type": "string",
          "doc": " Textual search filter - search is performed on \"orderFullName\", \"guestFullName\", and \"ticketNumber\".\n",
          "required": false
        },
                {
          "in": "QUERY",
          "name": "contactId",
          "type":           {
            "name": "array",
            "typeParams": ["string"]
          },
          "doc": " Guest contact ID.\n",
          "required": false
        },
                {
          "in": "QUERY",
          "name": "fieldset",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Events - Ticketing._wix_events_ticketing_TicketFieldset"]
          },
          "doc": " Control which data is returned in response. See [Fieldsets](https://dev.wix.com/api/rest/wix-events/wix-events/fieldset#wix-events_wix-events_fieldset_ticket-fieldset).\n",
          "required": false
        },
                {
          "in": "QUERY",
          "name": "orderStatus",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Events - Ticketing._wix_events_ticketing_OrderStatus"]
          },
          "doc": " Order status.\n",
          "required": false
        },
                {
          "in": "QUERY",
          "name": "sort",
          "type": "string",
          "doc": " Sort order. Defaults to \"ticket_number:asc\".\n See [supported fields](https://dev.wix.com/api/rest/wix-events/wix-events/filter-and-sort#wix-events_wix-events_filter-and-sort_list-tickets).\n",
          "required": false
        },
                {
          "in": "QUERY",
          "name": "limit",
          "type": "integer",
          "doc": " Number of items to load per page. See [Pagination](https://dev.wix.com/api/rest/getting-started/pagination).\n",
          "required": false
        },
                {
          "in": "QUERY",
          "name": "state",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Events - Ticketing._wix_events_ticketing_ListTicketsRequest_State"]
          },
          "doc": " Ticket state.\n",
          "required": false
        },
                {
          "in": "QUERY",
          "name": "facet",
          "type":           {
            "name": "array",
            "typeParams": ["string"]
          },
          "doc": " Filter facets.\n See [supported facets](https://dev.wix.com/api/rest/wix-events/wix-events/filter-and-sort#wix-events_wix-events_filter-and-sort_list-tickets).\n",
          "required": false
        },
                {
          "in": "QUERY",
          "name": "memberId",
          "type":           {
            "name": "array",
            "typeParams": ["string"]
          },
          "doc": " Site member ID.\n",
          "required": false
        }
      ],
      "ret":       {
        "type":         {
          "name": "ListTickets",
          "statusCode": "200",
          "typeParams": ["All APIs.Events - Ticketing._wix_events_ticketing_ListTicketsResponse"]
        },
        "doc": ""
      },
      "locations": [],
      "docs":       {
        "summary": " Retrieves a list of up to 100 tickets, given the provided [pagination](https://dev.wix.com/api/rest/getting-started/pagination), [filtering & sorting](https://dev.wix.com/api/rest/wix-events/wix-events/filter-and-sort#wix-events_wix-events_filter-and-sort_list-tickets).\n \n",
        "description": [],
        "request": "GET",
        "url": "https://www.wixapis.com/events/v1/events/{eventId}/tickets",
        "links": [],
        "examples": [        {
          "title": "",
          "body": ["curl -X GET 'https://www.wixapis.com/events/v1/events/ad18d12e-a6a9-4c17-abfa-6ff119479be2/tickets?limit=10&fieldset=GUEST_DETAILS&fieldset=TICKET_DETAILS&state=PAID' \\\n-H 'Authorization: <AUTH TOKEN>'"],
          "response": ["{\n  \"total\": 2,\n  \"offset\": 0,\n  \"limit\": 10,\n  \"tickets\":   [\n        {\n      \"ticketNumber\": \"FNVL-NIJT-WP021\",\n      \"orderNumber\": \"FNVL-NIJT-WP\",\n      \"ticketDefinitionId\": \"d86ffbbd-aa9b-488d-a14b-11752b78e272\",\n      \"name\": \"Early Bird\",\n      \"price\":       {\n        \"amount\": \"12.34\",\n        \"currency\": \"USD\"\n      },\n      \"free\": false,\n      \"policy\": \"This is your event ticket. Ticket holders must present their tickets on entry.\",\n      \"orderStatus\": \"PAID\",\n      \"orderArchived\": false,\n      \"orderFullName\": \"John Doe\",\n      \"guestDetails\":       {\n        \"guestAssigned\": false,\n        \"firstName\": \"John\",\n        \"lastName\": \"Doe\",\n        \"email\": \"john.doe@example.com\",\n        \"contactId\": \"3ef81e9f-106e-408d-a3ee-3df60838acc6\"\n      },\n      \"archived\": false,\n      \"anonymized\": false,\n      \"checkInUrl\": \"https://www.wixevents.com/check-in/FNVL-NIJT-WP021,ad18d12e-a6a9-4c17-abfa-6ff119479be2\",\n      \"ticketPdfUrl\": \"https://apps.wix.com/events/doc/tickets/Ticket.pdf?request=<TOKEN>\"\n    },\n        {\n      \"ticketNumber\": \"FNVL-O7MZ-0Q021\",\n      \"orderNumber\": \"FNVL-O7MZ-0Q\",\n      \"ticketDefinitionId\": \"d86ffbbd-aa9b-488d-a14b-11752b78e272\",\n      \"name\": \"Early Bird\",\n      \"price\":       {\n        \"amount\": \"11.11\",\n        \"currency\": \"USD\"\n      },\n      \"free\": false,\n      \"policy\": \"This is your event ticket. Ticket holders must present their tickets on entry.\",\n      \"orderStatus\": \"OFFLINE_PENDING\",\n      \"orderArchived\": false,\n      \"orderFullName\": \"Jane Doe\",\n      \"guestDetails\":       {\n        \"guestAssigned\": false,\n        \"firstName\": \"Jane\",\n        \"lastName\": \"Doe\",\n        \"email\": \"jane.doe@example.com\",\n        \"contactId\": \"2b7494bc-550a-47d3-8bba-d22564ae8bdc\"\n      },\n      \"archived\": false,\n      \"anonymized\": false,\n      \"checkInUrl\": \"https://www.wixevents.com/check-in/FNVL-O7MZ-0Q021,ad18d12e-a6a9-4c17-abfa-6ff119479be2\",\n      \"ticketPdfUrl\": \"https://apps.wix.com/events/doc/tickets/Ticket.pdf?request=<TOKEN>\"\n    }\n  ],\n  \"facets\": {}\n} "],
          "type": "curl",
          "extra": {}
        }],
        "extra": {}
      },
      "extra":       {
        "hasRest": true,
        "rpcRequestName": "ListTicketsRequest",
        "rpcResponseName": "ListTicketsResponse"
      },
      "customLabels": []
    },
        {
      "name": "List Tickets (Additional Binding 1)",
      "methodName": "ListTickets",
      "serviceName": "TicketManagement",
      "tag": "Tickets",
      "permissions": [      {
        "name": "Read Event Tickets and Guest List",
        "description": "Request permission to read event tickets and guest lists."
      }],
      "events": [],
      "labels": [],
      "nameParams": [],
      "params":       [
                {
          "in": "QUERY",
          "name": "eventId",
          "type":           {
            "name": "array",
            "typeParams": ["string"]
          },
          "doc": " Event ID.\n",
          "required": false
        },
                {
          "in": "QUERY",
          "name": "offset",
          "type": "integer",
          "doc": " Offset. See [Pagination](https://dev.wix.com/api/rest/getting-started/pagination).\n",
          "required": false
        },
                {
          "in": "QUERY",
          "name": "limit",
          "type": "integer",
          "doc": " Number of items to load per page. See [Pagination](https://dev.wix.com/api/rest/getting-started/pagination).\n",
          "required": false
        },
                {
          "in": "QUERY",
          "name": "orderNumber",
          "type":           {
            "name": "array",
            "typeParams": ["string"]
          },
          "doc": " Order numbers.\n",
          "required": false
        },
                {
          "in": "QUERY",
          "name": "ticketNumber",
          "type":           {
            "name": "array",
            "typeParams": ["string"]
          },
          "doc": " Ticket numbers.\n",
          "required": false
        },
                {
          "in": "QUERY",
          "name": "searchPhrase",
          "type": "string",
          "doc": " Textual search filter - search is performed on \"orderFullName\", \"guestFullName\", and \"ticketNumber\".\n",
          "required": false
        },
                {
          "in": "QUERY",
          "name": "orderStatus",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Events - Ticketing._wix_events_ticketing_OrderStatus"]
          },
          "doc": " Order status.\n",
          "required": false
        },
                {
          "in": "QUERY",
          "name": "fieldset",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Events - Ticketing._wix_events_ticketing_TicketFieldset"]
          },
          "doc": " Control which data is returned in response. See [Fieldsets](https://dev.wix.com/api/rest/wix-events/wix-events/fieldset#wix-events_wix-events_fieldset_ticket-fieldset).\n",
          "required": false
        },
                {
          "in": "QUERY",
          "name": "state",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Events - Ticketing._wix_events_ticketing_ListTicketsRequest_State"]
          },
          "doc": " Ticket state.\n",
          "required": false
        },
                {
          "in": "QUERY",
          "name": "memberId",
          "type":           {
            "name": "array",
            "typeParams": ["string"]
          },
          "doc": " Site member ID.\n",
          "required": false
        },
                {
          "in": "QUERY",
          "name": "facet",
          "type":           {
            "name": "array",
            "typeParams": ["string"]
          },
          "doc": " Filter facets.\n See [supported facets](https://dev.wix.com/api/rest/wix-events/wix-events/filter-and-sort#wix-events_wix-events_filter-and-sort_list-tickets).\n",
          "required": false
        },
                {
          "in": "QUERY",
          "name": "sort",
          "type": "string",
          "doc": " Sort order. Defaults to \"ticket_number:asc\".\n See [supported fields](https://dev.wix.com/api/rest/wix-events/wix-events/filter-and-sort#wix-events_wix-events_filter-and-sort_list-tickets).\n",
          "required": false
        },
                {
          "in": "QUERY",
          "name": "contactId",
          "type":           {
            "name": "array",
            "typeParams": ["string"]
          },
          "doc": " Guest contact ID.\n",
          "required": false
        }
      ],
      "ret":       {
        "type":         {
          "name": "ListTickets",
          "statusCode": "200",
          "typeParams": ["All APIs.Events - Ticketing._wix_events_ticketing_ListTicketsResponse"]
        },
        "doc": ""
      },
      "locations": [],
      "docs":       {
        "summary": " Retrieves a list of up to 100 tickets, given the provided [pagination](https://dev.wix.com/api/rest/getting-started/pagination), [filtering & sorting](https://dev.wix.com/api/rest/wix-events/wix-events/filter-and-sort#wix-events_wix-events_filter-and-sort_list-tickets).\n \n",
        "description": [],
        "request": "GET",
        "url": "https://www.wixapis.com/events/v1/tickets",
        "links": [],
        "examples": [        {
          "title": "",
          "body": ["curl -X GET 'https://www.wixapis.com/events/v1/events/ad18d12e-a6a9-4c17-abfa-6ff119479be2/tickets?limit=10&fieldset=GUEST_DETAILS&fieldset=TICKET_DETAILS&state=PAID' \\\n-H 'Authorization: <AUTH TOKEN>'"],
          "response": ["{\n  \"total\": 2,\n  \"offset\": 0,\n  \"limit\": 10,\n  \"tickets\":   [\n        {\n      \"ticketNumber\": \"FNVL-NIJT-WP021\",\n      \"orderNumber\": \"FNVL-NIJT-WP\",\n      \"ticketDefinitionId\": \"d86ffbbd-aa9b-488d-a14b-11752b78e272\",\n      \"name\": \"Early Bird\",\n      \"price\":       {\n        \"amount\": \"12.34\",\n        \"currency\": \"USD\"\n      },\n      \"free\": false,\n      \"policy\": \"This is your event ticket. Ticket holders must present their tickets on entry.\",\n      \"orderStatus\": \"PAID\",\n      \"orderArchived\": false,\n      \"orderFullName\": \"John Doe\",\n      \"guestDetails\":       {\n        \"guestAssigned\": false,\n        \"firstName\": \"John\",\n        \"lastName\": \"Doe\",\n        \"email\": \"john.doe@example.com\",\n        \"contactId\": \"3ef81e9f-106e-408d-a3ee-3df60838acc6\"\n      },\n      \"archived\": false,\n      \"anonymized\": false,\n      \"checkInUrl\": \"https://www.wixevents.com/check-in/FNVL-NIJT-WP021,ad18d12e-a6a9-4c17-abfa-6ff119479be2\",\n      \"ticketPdfUrl\": \"https://apps.wix.com/events/doc/tickets/Ticket.pdf?request=<TOKEN>\"\n    },\n        {\n      \"ticketNumber\": \"FNVL-O7MZ-0Q021\",\n      \"orderNumber\": \"FNVL-O7MZ-0Q\",\n      \"ticketDefinitionId\": \"d86ffbbd-aa9b-488d-a14b-11752b78e272\",\n      \"name\": \"Early Bird\",\n      \"price\":       {\n        \"amount\": \"11.11\",\n        \"currency\": \"USD\"\n      },\n      \"free\": false,\n      \"policy\": \"This is your event ticket. Ticket holders must present their tickets on entry.\",\n      \"orderStatus\": \"OFFLINE_PENDING\",\n      \"orderArchived\": false,\n      \"orderFullName\": \"Jane Doe\",\n      \"guestDetails\":       {\n        \"guestAssigned\": false,\n        \"firstName\": \"Jane\",\n        \"lastName\": \"Doe\",\n        \"email\": \"jane.doe@example.com\",\n        \"contactId\": \"2b7494bc-550a-47d3-8bba-d22564ae8bdc\"\n      },\n      \"archived\": false,\n      \"anonymized\": false,\n      \"checkInUrl\": \"https://www.wixevents.com/check-in/FNVL-O7MZ-0Q021,ad18d12e-a6a9-4c17-abfa-6ff119479be2\",\n      \"ticketPdfUrl\": \"https://apps.wix.com/events/doc/tickets/Ticket.pdf?request=<TOKEN>\"\n    }\n  ],\n  \"facets\": {}\n} "],
          "type": "curl",
          "extra": {}
        }],
        "extra": {}
      },
      "extra":       {
        "hasRest": true,
        "rpcRequestName": "ListTicketsRequest",
        "rpcResponseName": "ListTicketsResponse"
      },
      "customLabels": []
    },
        {
      "name": "Query Available Tickets",
      "methodName": "QueryAvailableTickets",
      "serviceName": "CheckoutService",
      "tag": "Checkout",
      "permissions": [      {
        "name": "Manage Orders",
        "description": "Request permission to read, create and change orders."
      }],
      "events": [],
      "labels": [],
      "nameParams": [],
      "params":       [
                {
          "in": "BODY",
          "name": "offset",
          "type": "integer",
          "doc": " Offset.\n",
          "required": false
        },
                {
          "in": "BODY",
          "name": "limit",
          "type": "integer",
          "doc": " Limit.\n",
          "required": false
        },
                {
          "in": "BODY",
          "name": "filter",
          "type": "struct",
          "doc": " Ticket definition.\n See [supported fields and operators](https://dev.wix.com/api/rest/wix-events/wix-events/filter-and-sort#wix-events_wix-events_filter-and-sort_list-query-available-tickets).\n",
          "required": false
        },
                {
          "in": "BODY",
          "name": "fieldset",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Events - Ticketing._wix_events_ticketing_TicketDefinitionFieldset"]
          },
          "doc": "",
          "required": false
        },
                {
          "in": "BODY",
          "name": "sort",
          "type": "string",
          "doc": " Sort order, defaults to \"created:asc\".\n See [supported fields](https://dev.wix.com/api/rest/wix-events/wix-events/filter-and-sort#wix-events_wix-events_filter-and-sort_list-query-available-tickets).\n",
          "required": false
        }
      ],
      "ret":       {
        "type":         {
          "name": "QueryAvailableTickets",
          "statusCode": "200",
          "typeParams": ["All APIs.Events - Ticketing._wix_events_ticketing_QueryAvailableTicketsResponse"]
        },
        "doc": ""
      },
      "locations": [],
      "docs":       {
        "summary": " Returns tickets available to reserve.\n \n",
        "description": [],
        "request": "POST",
        "url": "https://www.wixapis.com/events/v1/tickets/available/query",
        "links": [],
        "examples": [        {
          "title": "",
          "body": ["curl -X POST 'https://www.wixapis.com/events/v1/tickets/available/query' \\\n-H 'Content-Type: application/json' \\\n-H 'Authorization: <AUTH TOKEN>' \\\n--data-binary '{\n                 \"offset\": 0,\n                 \"limit\": 100,\n                 \"order\": \"orderIndex:asc\",\n                 \"filter\": {\n                   \"name\": {\n                     \"$contains\": \"ticket\"\n                   }\n                 }\n               }'"],
          "response": ["{\n  \"metaData\":   {\n    \"count\": 2,\n    \"offset\": 0,\n    \"total\": 2\n  },\n  \"definitions\":   [\n        {\n      \"id\": \"48da25d2-afb2-4955-92a0-b820635ac321\",\n      \"price\":       {\n        \"amount\": \"0.00\",\n        \"currency\": \"EUR\"\n      },\n      \"free\": true,\n      \"name\": \"Nice ticket\",\n      \"description\": \"\",\n      \"limitPerCheckout\": 20,\n      \"orderIndex\": 4,\n      \"eventId\": \"fd56076c-38f4-4705-b9eb-ec322b85c745\"\n    },\n        {\n      \"id\": \"9c13fb37-f2c6-4c9c-8950-41c49b0a5c84\",\n      \"price\":       {\n        \"amount\": \"100.00\",\n        \"currency\": \"EUR\"\n      },\n      \"free\": false,\n      \"name\": \"VIP ticket\",\n      \"description\": \"\",\n      \"limitPerCheckout\": 20,\n      \"orderIndex\": 5,\n      \"eventId\": \"fd56076c-38f4-4705-b9eb-ec322b85c745\"\n    }\n  ]\n} "],
          "type": "curl",
          "extra": {}
        }],
        "extra": {}
      },
      "extra":       {
        "hasRest": true,
        "rpcRequestName": "QueryAvailableTicketsRequest",
        "rpcResponseName": "QueryAvailableTicketsResponse"
      },
      "customLabels": []
    },
        {
      "name": "Query Ticket Definitions",
      "methodName": "QueryTicketDefinitions",
      "serviceName": "TicketDefinitionManagement",
      "tag": "Ticket Definitions",
      "permissions":       [
                {
          "name": "Manage Orders",
          "description": "Request permission to read, create and change orders."
        },
                {
          "name": "Manage Ticket Definitions",
          "description": "Request permission to read, create and change event ticket definitions."
        }
      ],
      "events": [],
      "labels": [],
      "nameParams": [],
      "params":       [
                {
          "in": "BODY",
          "name": "offset",
          "type": "integer",
          "doc": " Offset. See [Pagination](https://dev.wix.com/api/rest/getting-started/pagination).\n",
          "required": false
        },
                {
          "in": "BODY",
          "name": "limit",
          "type": "integer",
          "doc": " Limit. See [Pagination](https://dev.wix.com/api/rest/getting-started/pagination).\n",
          "required": false
        },
                {
          "in": "BODY",
          "name": "fieldset",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Events - Ticketing._wix_events_ticketing_TicketDefinitionFieldset"]
          },
          "doc": " Control which data is returned in the response. See [fieldsets](https://dev.wix.com/api/rest/wix-events/wix-events/fieldset#wix-events_wix-events_fieldset_ticket-definition-fieldset).\n",
          "required": false
        },
                {
          "in": "BODY",
          "name": "filter",
          "type": "struct",
          "doc": " Filter. See [supported fields and operators](https://dev.wix.com/api/rest/wix-events/wix-events/filter-and-sort#wix-events_wix-events_filter-and-sort_query-ticket-definitions).\n",
          "required": false
        },
                {
          "in": "BODY",
          "name": "sort",
          "type": "string",
          "doc": " Sort order. Defaults to: \"created:asc\".\n See [supported fields](https://dev.wix.com/api/rest/wix-events/wix-events/filter-and-sort#wix-events_wix-events_filter-and-sort_query-ticket-definitions).\n",
          "required": false
        },
                {
          "in": "BODY",
          "name": "facet",
          "type":           {
            "name": "array",
            "typeParams": ["string"]
          },
          "doc": " Filter facets to include in the response.\n See [supported facets](https://dev.wix.com/api/rest/wix-events/wix-events/filter-and-sort#wix-events_wix-events_filter-and-sort_query-ticket-definitions).\n",
          "required": false
        }
      ],
      "ret":       {
        "type":         {
          "name": "QueryTicketDefinitions",
          "statusCode": "200",
          "typeParams": ["All APIs.Events - Ticketing._wix_events_ticketing_QueryTicketDefinitionsResponse"]
        },
        "doc": ""
      },
      "locations": [],
      "docs":       {
        "summary": " Retrieves a list of up to 100 ticket definitions, supporting [structurized queries](https://dev.wix.com/api/rest/wix-events/wix-events/filter-and-sort#wix-events_wix-events_filter-and-sort_query-ticket-definitions).\n \n",
        "description": [],
        "request": "POST",
        "url": "https://www.wixapis.com/events/v1/tickets/definitions/query",
        "links": [],
        "examples":         [
                    {
            "title": "Query ticket definitions with filter and order params",
            "body": ["curl -X POST 'https://www.wixapis.com/events/v1/tickets/definitions/query' \\\n-H 'Content-Type: application/json' \\\n-H 'Authorization: <AUTH>' \\\n--data-binary '{\n                 \"offset\": 0,\n                 \"limit\": 2,\n                 \"order\": \"created:desc\",\n                 \"filter\": {\n                   \"eventId\": {\n                     \"$hasSome\": [ \"fd56076c-38f4-4705-b9eb-ec322b85c745\" ]\n                   }\n                 }\n               }'"],
            "response": ["{\n  \"total\": 2,\n  \"offset\": 0,\n  \"limit\": 2,\n  \"definitions\":   [\n        {\n      \"id\": \"9c13fb37-f2c6-4c9c-8950-41c49b0a5c84\",\n      \"price\":       {\n        \"amount\": \"100.00\",\n        \"currency\": \"EUR\"\n      },\n      \"free\": false,\n      \"name\": \"VIP ticket\",\n      \"description\": \"\",\n      \"limitPerCheckout\": 20,\n      \"orderIndex\": 5,\n      \"policy\": \"\",\n      \"eventId\": \"fd56076c-38f4-4705-b9eb-ec322b85c745\"\n    },\n        {\n      \"id\": \"48da25d2-afb2-4955-92a0-b820635ac321\",\n      \"price\":       {\n        \"amount\": \"0.00\",\n        \"currency\": \"EUR\"\n      },\n      \"free\": true,\n      \"name\": \"Nice ticket\",\n      \"description\": \"\",\n      \"limitPerCheckout\": 20,\n      \"orderIndex\": 4,\n      \"policy\": \"\",\n      \"eventId\": \"fd56076c-38f4-4705-b9eb-ec322b85c745\"\n    }\n  ]\n} "],
            "type": "curl",
            "extra": {}
          },
                    {
            "title": "Query ticket definitions with sale status filter and facets",
            "body": ["curl -X POST 'https://www.wixapis.com/events/v1/tickets/definitions/query' \\\n-H 'Content-Type: application/json' \\\n-H 'Authorization: <AUTH>' \\\n--data-binary '{\n                 \"offset\": 0,\n                 \"limit\": 2,\n                 \"order\": \"created:desc\",\n                 \"filter\": {\n                   \"eventId\": {\n                     \"$hasSome\": [ \"0f018a42-fdb2-45d9-a008-6d0dd74b90ec\" ]\n                   },\n                   \"saleStatus\": {\n                     \"$hasSome\": [ \"SALE_STARTED\", \"SALE_SCHEDULED\" ]\n                   }\n                 },\n                 \"facet\": [\"saleStatus\"]\n               }'"],
            "response": ["{\n  \"total\": 8,\n  \"offset\": 0,\n  \"limit\": 2,\n  \"definitions\":   [\n        {\n      \"id\": \"5bc9cb0d-5a4e-4251-97e9-e9c5a7ee9960\",\n      \"price\":       {\n        \"amount\": \"0.00\",\n        \"currency\": \"EUR\",\n        \"value\": \"0.00\"\n      },\n      \"free\": true,\n      \"name\": \"Early Bird\",\n      \"description\": \"Buy it while it lasts\",\n      \"limitPerCheckout\": 20,\n      \"orderIndex\": 1,\n      \"policy\": \"\",\n      \"eventId\": \"0f018a42-fdb2-45d9-a008-6d0dd74b90ec\",\n      \"saleStatus\": \"SALE_STARTED\"\n    },\n        {\n      \"id\": \"d092fd27-35e9-433e-838c-7980708981a0\",\n      \"price\":       {\n        \"amount\": \"0.00\",\n        \"currency\": \"EUR\",\n        \"value\": \"0.00\"\n      },\n      \"free\": true,\n      \"name\": \"Late Bird\",\n      \"description\": \"In case you missed 'Early Bird' ticket\",\n      \"limitPerCheckout\": 20,\n      \"orderIndex\": 4,\n      \"policy\": \"\",\n      \"eventId\": \"0f018a42-fdb2-45d9-a008-6d0dd74b90ec\",\n      \"saleStatus\": \"SALE_STARTED\"\n    }\n  ],\n  \"facets\": {\"saleStatus\": {\"counts\":   {\n    \"SALE_SCHEDULED\": 1,\n    \"SALE_STARTED\": 7\n  }}}\n} "],
            "type": "curl",
            "extra": {}
          }
        ],
        "extra": {}
      },
      "extra":       {
        "hasRest": true,
        "rpcRequestName": "QueryTicketDefinitionsRequest",
        "rpcResponseName": "QueryTicketDefinitionsResponse"
      },
      "customLabels": []
    },
        {
      "name": "Update Checkout",
      "methodName": "UpdateCheckout",
      "serviceName": "CheckoutService",
      "tag": "Checkout",
      "permissions": [      {
        "name": "Manage Orders",
        "description": "Request permission to read, create and change orders."
      }],
      "events": [],
      "labels": [],
      "nameParams": [],
      "requiredFields":       [
        "eventId",
        "orderNumber"
      ],
      "params":       [
                {
          "in": "PATH",
          "name": "eventId",
          "type": "string",
          "doc": " Event ID.\n",
          "required": true
        },
                {
          "in": "PATH",
          "name": "orderNumber",
          "type": "string",
          "doc": " Unique order number.\n",
          "required": true
        },
                {
          "in": "BODY",
          "name": "buyer",
          "type": "All APIs.Events - Ticketing._wix_events_ticketing_Buyer",
          "doc": " Buyer details.\n",
          "required": false
        },
                {
          "in": "BODY",
          "name": "guests",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Events - Ticketing._wix_events_ticketing_Guest"]
          },
          "doc": " Guest details.\n",
          "required": false
        },
                {
          "in": "BODY",
          "name": "memberId",
          "type": "string",
          "doc": " Member ID (if empty - no site member is associated to this order).\n",
          "required": false
        },
                {
          "in": "BODY",
          "name": "discount",
          "type": "All APIs.Events - Ticketing._wix_events_ticketing_DiscountRequest",
          "doc": " Discount to apply on the invoice.\n",
          "required": false
        },
                {
          "in": "BODY",
          "name": "paidPlanBenefit",
          "type": "All APIs.Events - Ticketing._wix_events_ticketing_PaidPlanBenefit",
          "doc": " Benefit granted by the pricing plan.\n",
          "required": false
        }
      ],
      "ret":       {
        "type":         {
          "name": "UpdateCheckout",
          "statusCode": "200",
          "typeParams": ["All APIs.Events - Ticketing._wix_events_ticketing_UpdateCheckoutResponse"]
        },
        "doc": ""
      },
      "locations": [],
      "docs":       {
        "summary": " Updates order and tickets (supported only for unconfirmed orders).\n Guest details must be sent according to Registration Form input fields.\n \n",
        "description": [],
        "request": "PATCH",
        "url": "https://www.wixapis.com/events/v1/events/{eventId}/tickets/checkout/{orderNumber}",
        "links": [],
        "examples": [        {
          "title": "",
          "body": ["curl -X PATCH 'https://www.wixapis.com/events/v1/events/fd56076c-38f4-4705-b9eb-ec322b85c745/tickets/checkout/FM9X-EHKF-ZO' \\\n-H 'Content-Type: application/json' \\\n-H 'Authorization: <AUTH TOKEN>' \\\n--data-binary '{\n                 \"buyer\": {\n                   \"firstName\": \"Ms Sarah\",\n                   \"lastName\": \"Doe\",\n                   \"email\": \"john.doe@wix.com\"\n                 },\n                 \"guests\": [\n                   {\n                     \"form\": {\n                       \"inputValues\": [\n                         {\n                           \"inputName\": \"firstName\",\n                           \"value\": \"John\"\n                         },\n                         {\n                           \"inputName\": \"lastName\",\n                           \"value\": \"Doe\"\n                         },\n                         {\n                           \"inputName\": \"email\",\n                           \"value\": \"john.doe@wix.com\"\n                         }\n                       ]\n                     }\n                   },\n                   {\n                     \"form\": {\n                       \"inputValues\": [\n                         {\n                           \"inputName\": \"firstName\",\n                           \"value\": \"Sarah\"\n                         },\n                         {\n                           \"inputName\": \"lastName\",\n                           \"value\": \"Doe\"\n                         },\n                         {\n                           \"inputName\": \"email\",\n                           \"value\": \"sarah.doe@wix.com\"\n                         }\n                       ]\n                     }\n                   },\n                   {\n                     \"form\": {\n                       \"inputValues\": [\n                         {\n                           \"inputName\": \"firstName\",\n                           \"value\": \"Mathew\"\n                         },\n                         {\n                           \"inputName\": \"lastName\",\n                           \"value\": \"Doe\"\n                         },\n                         {\n                           \"inputName\": \"email\",\n                           \"value\": \"mathew.doe@wix.com\"\n                         }\n                       ]\n                     }\n                   }\n                 ]\n               }'"],
          "response": ["{\n  \"order\":   {\n    \"orderNumber\": \"FNNU-XRQ9-QR\",\n    \"reservationId\": \"1fe76e20-efa0-4330-be44-2a8b2ca3c208\",\n    \"snapshotId\": \"ed37fbec-e065-473e-b079-6dbde2dff218\",\n    \"eventId\": \"619d52c0-c93b-4155-a55c-108048f20b3f\",\n    \"contactId\": \"\",\n    \"memberId\": \"\",\n    \"created\": \"2020-05-22T13:36:39.158Z\",\n    \"firstName\": \"John\",\n    \"lastName\": \"Doe\",\n    \"email\": \"john.doe@wix.com\",\n    \"checkoutForm\": {\"inputValues\":     [\n            {\n        \"inputName\": \"firstName\",\n        \"value\": \"Ms Sarah\"\n      },\n            {\n        \"inputName\": \"lastName\",\n        \"value\": \"Doe\"\n      },\n            {\n        \"inputName\": \"email\",\n        \"value\": \"john.doe@wix.com\"\n      }\n    ]},\n    \"confirmed\": false,\n    \"status\": \"INITIATED\",\n    \"method\": \"\",\n    \"ticketsQuantity\": 3,\n    \"totalPrice\":     {\n      \"amount\": \"190.00\",\n      \"currency\": \"EUR\"\n    },\n    \"ticketsPdf\": \"<url_to_pdf>\",\n    \"tickets\": [],\n    \"archived\": false,\n    \"anonymized\": false,\n    \"fullName\": \"John Doe\",\n    \"invoice\":     {\n      \"items\":       [\n                {\n          \"id\": \"48da25d2-afb2-4955-92a0-b820635ac321\",\n          \"quantity\": 1,\n          \"name\": \"Nice ticket\",\n          \"price\":           {\n            \"amount\": \"0.00\",\n            \"currency\": \"EUR\"\n          },\n          \"total\":           {\n            \"amount\": \"0.00\",\n            \"currency\": \"EUR\"\n          },\n          \"fees\": []\n        },\n                {\n          \"id\": \"9c13fb37-f2c6-4c9c-8950-41c49b0a5c84\",\n          \"quantity\": 2,\n          \"name\": \"VIP ticket\",\n          \"price\":           {\n            \"amount\": \"100.00\",\n            \"currency\": \"EUR\"\n          },\n          \"total\":           {\n            \"amount\": \"200.00\",\n            \"currency\": \"EUR\"\n          },\n          \"discount\":           {\n            \"amount\":             {\n              \"amount\": \"10.00\",\n              \"currency\": \"EUR\"\n            },\n            \"afterDiscount\":             {\n              \"amount\": \"190.00\",\n              \"currency\": \"EUR\"\n            },\n            \"code\": \"SUMMER\",\n            \"name\": \"SUMMER\",\n            \"couponId\": \"7a022172-f0c6-48f7-b4ad-8554697048aa\",\n            \"discounts\": [            {\n              \"amount\":               {\n                \"amount\": \"10.00\",\n                \"currency\": \"EUR\"\n              },\n              \"coupon\":               {\n                \"name\": \"SUMMER\",\n                \"code\": \"SUMMER\",\n                \"couponId\": \"7a022172-f0c6-48f7-b4ad-8554697048aa\"\n              }\n            }]\n          },\n          \"fees\": []\n        }\n      ],\n      \"total\":       {\n        \"amount\": \"200.00\",\n        \"currency\": \"EUR\"\n      },\n      \"discount\":       {\n        \"amount\":         {\n          \"amount\": \"10.00\",\n          \"currency\": \"EUR\"\n        },\n        \"afterDiscount\":         {\n          \"amount\": \"190.00\",\n          \"currency\": \"EUR\"\n        },\n        \"code\": \"SUMMER\",\n        \"name\": \"SUMMER\",\n        \"couponId\": \"7a022172-f0c6-48f7-b4ad-8554697048aa\",\n        \"discounts\": [        {\n          \"amount\":           {\n            \"amount\": \"10.00\",\n            \"currency\": \"EUR\"\n          },\n          \"coupon\":           {\n            \"name\": \"SUMMER\",\n            \"code\": \"SUMMER\",\n            \"couponId\": \"7a022172-f0c6-48f7-b4ad-8554697048aa\"\n          }\n        }]\n      },\n      \"subTotal\":       {\n        \"amount\": \"200.00\",\n        \"currency\": \"EUR\"\n      },\n      \"grandTotal\":       {\n        \"amount\": \"190.00\",\n        \"currency\": \"EUR\"\n      },\n      \"fees\": [],\n      \"revenue\":       {\n        \"amount\": \"190.00\",\n        \"currency\": \"EUR\"\n      }\n    },\n    \"fullyCheckedIn\": false,\n    \"transactionId\": \"\"\n  },\n  \"expires\": \"2020-05-22T13:12:54.804Z\",\n  \"reservations\":   [\n        {\n      \"quantity\": 1,\n      \"ticket\":       {\n        \"id\": \"48da25d2-afb2-4955-92a0-b820635ac321\",\n        \"price\":         {\n          \"amount\": \"0.00\",\n          \"currency\": \"EUR\"\n        },\n        \"free\": true,\n        \"name\": \"Nice ticket\",\n        \"description\": \"\",\n        \"limitPerCheckout\": 0,\n        \"orderIndex\": 0\n      }\n    },\n        {\n      \"quantity\": 2,\n      \"ticket\":       {\n        \"id\": \"9c13fb37-f2c6-4c9c-8950-41c49b0a5c84\",\n        \"price\":         {\n          \"amount\": \"100.00\",\n          \"currency\": \"EUR\"\n        },\n        \"free\": false,\n        \"name\": \"VIP ticket\",\n        \"description\": \"\",\n        \"limitPerCheckout\": 0,\n        \"orderIndex\": 0\n      }\n    }\n  ]\n} "],
          "type": "curl",
          "extra": {}
        }],
        "extra": {}
      },
      "extra":       {
        "hasRest": true,
        "rpcRequestName": "UpdateCheckoutRequest",
        "rpcResponseName": "UpdateCheckoutResponse"
      },
      "customLabels": []
    },
        {
      "name": "Update Order",
      "methodName": "UpdateOrder",
      "serviceName": "OrderManagement",
      "tag": "Order",
      "permissions": [      {
        "name": "Manage Orders",
        "description": "Request permission to read, create and change orders."
      }],
      "events": [],
      "labels": [],
      "nameParams": [],
      "requiredFields":       [
        "eventId",
        "orderNumber",
        "fields"
      ],
      "params":       [
                {
          "in": "PATH",
          "name": "eventId",
          "type": "string",
          "doc": " Event ID.\n",
          "required": true
        },
                {
          "in": "PATH",
          "name": "orderNumber",
          "type": "string",
          "doc": " Unique order number.\n",
          "required": true
        },
                {
          "in": "BODY",
          "name": "fields",
          "type": "All APIs.Events - Ticketing._google_protobuf_FieldMask",
          "doc": " Set of field paths to update.\n",
          "required": true
        },
                {
          "in": "BODY",
          "name": "checkoutForm",
          "type": "All APIs.Events - Ticketing._wix_events_FormResponse",
          "doc": " Checkout form.\n",
          "required": false
        },
                {
          "in": "BODY",
          "name": "archived",
          "type": "boolean",
          "doc": " Whether order is archived.\n",
          "required": false
        }
      ],
      "ret":       {
        "type":         {
          "name": "UpdateOrder",
          "statusCode": "200",
          "typeParams": ["All APIs.Events - Ticketing._wix_events_ticketing_UpdateOrderResponse"]
        },
        "doc": ""
      },
      "locations": [],
      "docs":       {
        "summary": " Updates an order's `checkoutForm` and/or `archived` status.\n \n",
        "description": [],
        "request": "PATCH",
        "url": "https://www.wixapis.com/events/v1/events/{eventId}/orders/{orderNumber}",
        "links": [],
        "examples": [        {
          "title": "",
          "body": ["curl -X PATCH 'https://api.wix.com/events/v1/events/619d52c0-c93b-4155-a55c-108048f20b3f/orders/FM9X-EHKF-ZO' \\\n-H 'Content-Type: application/json' \\\n-H 'Authorization: <AUTH TOKEN>' \\\n-d @- << EOF\n{\n  \"fields\": {\n    \"paths\": [\n      \"checkoutForm\"\n    ]\n  },\n  \"checkoutForm\": {\n    \"inputValues\": [\n      {\n        \"inputName\": \"firstName\",\n        \"value\": \"JonnyJohn\"\n      },\n      {\n        \"inputName\": \"lastName\",\n        \"value\": \"DoudyDoe\"\n      },\n      {\n        \"inputName\": \"email\",\n        \"value\": \"john.doe@somedomain.com\"\n      }\n    ]\n  }\n}\nEOF"],
          "response": ["{\"order\": {\n  \"orderNumber\": \"FM9X-EHKF-ZO\",\n  \"reservationId\": \"89f8cce3-d6aa-4b5d-a3ae-1667d81ceb8d\",\n  \"snapshotId\": \"f16f73a4-9c62-4f66-a4d2-2a01fe45fc96\",\n  \"eventId\": \"619d52c0-c93b-4155-a55c-108048f20b3f\",\n  \"contactId\": \"a5146d63-9f90-49d2-9979-34506942a02e\",\n  \"memberId\": \"\",\n  \"created\": \"2020-04-07T06:42:35.381Z\",\n  \"firstName\": \"JonnyJohn\",\n  \"lastName\": \"DoudyDoe\",\n  \"email\": \"john.doe@somedomain.com\",\n  \"checkoutForm\": {\"inputValues\":   [\n        {\n      \"inputName\": \"firstName\",\n      \"value\": \"JonnyJohn\"\n    },\n        {\n      \"inputName\": \"lastName\",\n      \"value\": \"DoudyDoe\"\n    },\n        {\n      \"inputName\": \"email\",\n      \"value\": \"john.doe@somedomain.com\"\n    }\n  ]},\n  \"confirmed\": true,\n  \"status\": \"PAID\",\n  \"method\": \"payPal\",\n  \"ticketsQuantity\": 1,\n  \"totalPrice\":   {\n    \"amount\": \"10.00\",\n    \"currency\": \"EUR\"\n  },\n  \"ticketsPdf\": \"<url_to_pdf>\",\n  \"tickets\": [  {\n    \"ticketNumber\": \"FM9X-EHKF-ZO021\",\n    \"orderNumber\": \"FM9X-EHKF-ZO\",\n    \"ticketDefinitionId\": \"0abf130e-2157-4131-a164-72c849d3f142\",\n    \"name\": \"VIP enterance\",\n    \"price\":     {\n      \"amount\": \"10.00\",\n      \"currency\": \"EUR\"\n    },\n    \"free\": false,\n    \"policy\": \"This is your event ticket. Ticket holders must present their tickets on entry. Looking forward to seeing you there!\",\n    \"checkInUrl\": \"https://www.wixevents.com/check-in/FM9X-EHKF-ZO021,619d52c0-c93b-4155-a55c-108048f20b3f\",\n    \"orderStatus\": \"PAID\",\n    \"orderArchived\": false,\n    \"orderFullName\": \"JonnyJohn DoudyDoe\",\n    \"guestFullName\": \"Sarah Doe\",\n    \"guestDetails\":     {\n      \"guestAssigned\": true,\n      \"firstName\": \"Sarah\",\n      \"lastName\": \"Doe\",\n      \"email\": \"sarah.doe@somedomain.com\",\n      \"form\": {\"inputValues\":       [\n                {\n          \"inputName\": \"email\",\n          \"value\": \"sarah.doe@somedomain.com\"\n        },\n                {\n          \"inputName\": \"lastName\",\n          \"value\": \"Doe\"\n        },\n                {\n          \"inputName\": \"firstName\",\n          \"value\": \"Sarah\"\n        }\n      ]},\n      \"contactId\": \"8777c2c8-d46e-466c-b602-e5144e2cb588\"\n    },\n    \"archived\": false,\n    \"ticketPdfUrl\": \"<url_to_pdf>\",\n    \"anonymized\": false\n  }],\n  \"archived\": false,\n  \"anonymized\": false,\n  \"fullName\": \"JonnyJohn DoudyDoe\",\n  \"fullyCheckedIn\": false,\n  \"transactionId\": \"de57fc42-d98c-4715-8627-65e0bc0b36af\"\n}} "],
          "type": "curl",
          "extra": {}
        }],
        "extra": {}
      },
      "extra":       {
        "hasRest": true,
        "rpcRequestName": "UpdateOrderRequest",
        "rpcResponseName": "UpdateOrderResponse"
      },
      "customLabels": []
    },
        {
      "name": "Update Ticket",
      "methodName": "UpdateTicket",
      "serviceName": "TicketManagement",
      "tag": "Tickets",
      "permissions": [      {
        "name": "Manage Guest List",
        "description": "Request permission to read, create and change event tickets, guest lists and RSVPs."
      }],
      "events": [],
      "labels": [],
      "nameParams": [],
      "requiredFields":       [
        "fields",
        "eventId",
        "ticketNumber"
      ],
      "params":       [
                {
          "in": "PATH",
          "name": "eventId",
          "type": "string",
          "doc": " Event ID.\n",
          "required": true
        },
                {
          "in": "PATH",
          "name": "ticketNumber",
          "type": "string",
          "doc": " Unique ticket number.\n",
          "required": true
        },
                {
          "in": "BODY",
          "name": "fields",
          "type": "All APIs.Events - Ticketing._google_protobuf_FieldMask",
          "doc": " Set of field paths, specifying which parts of this resource to update.\n When fields are empty, request is interpreted as full update.\n Behavior follows [google.protobuf.FieldMask](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#google.protobuf.FieldMask) semantics.\n",
          "required": true
        },
                {
          "in": "BODY",
          "name": "archived",
          "type": "boolean",
          "doc": " Whether ticket is archived.\n",
          "required": false
        },
                {
          "in": "BODY",
          "name": "guestDetails",
          "type": "All APIs.Events - Ticketing._wix_events_ticketing_UpdateTicketRequest_GuestDetailsUpdate",
          "doc": " Assigned guest details.\n",
          "required": false
        }
      ],
      "ret":       {
        "type":         {
          "name": "UpdateTicket",
          "statusCode": "200",
          "typeParams": ["All APIs.Events - Ticketing._wix_events_ticketing_UpdateTicketResponse"]
        },
        "doc": ""
      },
      "locations": [],
      "docs":       {
        "summary": " Updates a ticket. See [Partial Updates](https://dev.wix.com/api/rest/wix-events/wix-events/partial-updates) for more information.\n \n",
        "description": [],
        "request": "PATCH",
        "url": "https://www.wixapis.com/events/v1/events/{eventId}/tickets/{ticketNumber}",
        "links": [],
        "examples":         [
                    {
            "title": "Archive ticket",
            "body": ["curl -X PATCH 'https://www.wixapis.com/events/v1/events/ad18d12e-a6a9-4c17-abfa-6ff119479be2/tickets/FNVL-NIJT-WP021' \\\n-H 'Content-Type: application/json' \\\n-H 'Authorization: <AUTH TOKEN>' \\\n-d @- << EOF\n{\n  \"archived\": true,\n  \"fields\": {\n    \"paths\": [\n      \"archived\"\n    ]\n  }\n}\nEOF"],
            "response": ["{\"ticket\": {\n  \"ticketNumber\": \"FNVL-NIJT-WP021\",\n  \"orderNumber\": \"FNVL-NIJT-WP\",\n  \"ticketDefinitionId\": \"d86ffbbd-aa9b-488d-a14b-11752b78e272\",\n  \"name\": \"Early Bird\",\n  \"price\":   {\n    \"amount\": \"12.34\",\n    \"currency\": \"USD\"\n  },\n  \"free\": false,\n  \"policy\": \"This is your event ticket. Ticket holders must present their tickets on entry.\",\n  \"orderStatus\": \"PAID\",\n  \"orderArchived\": false,\n  \"orderFullName\": \"John Doe\",\n  \"guestDetails\":   {\n    \"guestAssigned\": false,\n    \"firstName\": \"John\",\n    \"lastName\": \"Doe\",\n    \"email\": \"john.doe@example.com\",\n    \"contactId\": \"3ef81e9f-106e-408d-a3ee-3df60838acc6\"\n  },\n  \"archived\": true,\n  \"anonymized\": false,\n  \"checkInUrl\": \"https://www.wixevents.com/check-in/FNVL-NIJT-WP021,ad18d12e-a6a9-4c17-abfa-6ff119479be2\",\n  \"ticketPdfUrl\": \"https://apps.wix.com/events/doc/tickets/Ticket.pdf?request=<TOKEN>\"\n}} "],
            "type": "curl",
            "extra": {"description": "Ticket can be archived and unarchived through ticket update."}
          },
                    {
            "title": "Update form of ticket guest",
            "body": ["curl -X PATCH 'https://www.wixapis.com/events/v1/events/ad18d12e-a6a9-4c17-abfa-6ff119479be2/tickets/FNVL-NIJT-WP021' \\\n-H 'Content-Type: application/json' \\\n-H 'Authorization: <AUTH TOKEN>' \\\n-d @- << EOF\n{\n  \"guestDetails\": {\n    \"form\": {\n      \"inputValues\": [\n        {\n          \"inputName\": \"custom\",\n          \"values\": [\n            \"Red\",\n            \"green\"\n          ]\n        },\n        {\n          \"inputName\": \"email\",\n          \"value\": \"john.doe@example.com\"\n        },\n        {\n          \"inputName\": \"lastName\",\n          \"value\": \"Doe\"\n        },\n        {\n          \"inputName\": \"firstName\",\n          \"value\": \"Jonh\"\n        }\n      ]\n    }\n  },\n  \"fields\": {\n    \"paths\": [\n      \"guestDetails.form\"\n    ]\n  }\n}\nEOF"],
            "response": ["{\"ticket\": {\n  \"ticketNumber\": \"FNVL-NIJT-WP021\",\n  \"orderNumber\": \"FNVL-NIJT-WP\",\n  \"ticketDefinitionId\": \"FNVL-NIJT-WP\",\n  \"name\": \"Early Bird\",\n  \"price\":   {\n    \"amount\": \"10.00\",\n    \"currency\": \"EUR\"\n  },\n  \"free\": false,\n  \"policy\": \"This is your event ticket. Ticket holders must present tickets upon entry.\",\n  \"orderStatus\": \"OFFLINE_PENDING\",\n  \"orderArchived\": false,\n  \"orderFullName\": \"Jonh Doe\",\n  \"guestFullName\": \"Jonh Doe\",\n  \"guestDetails\":   {\n    \"guestAssigned\": true,\n    \"firstName\": \"Jonh\",\n    \"lastName\": \"Doe\",\n    \"email\": \"john.doe@example.com\",\n    \"form\": {\"inputValues\":     [\n            {\n        \"inputName\": \"custom\",\n        \"value\": \"\",\n        \"values\":         [\n          \"Red\",\n          \"green\"\n        ],\n        \"number\": 0\n      },\n            {\n        \"inputName\": \"email\",\n        \"value\": \"john.doe@example.com\",\n        \"values\": [],\n        \"number\": 0\n      },\n            {\n        \"inputName\": \"lastName\",\n        \"value\": \"Doe\",\n        \"values\": [],\n        \"number\": 0\n      },\n            {\n        \"inputName\": \"firstName\",\n        \"value\": \"Jonh\",\n        \"values\": [],\n        \"number\": 0\n      }\n    ]},\n    \"contactId\": \"3ef81e9f-106e-408d-a3ee-3df60838acc6\"\n  },\n  \"archived\": false,\n  \"ticketPdf\": \"https://apps.wix.com/events/doc/tickets/Ticket.pdf?request=<TOKEN>\",\n  \"memberId\": \"babf399a-4e8e-4e19-8bcc-f4f9c298ec63\",\n  \"anonymized\": false,\n  \"checkInUrl\": \"https://www.wixevents.com/check-in/FNVL-NIJT-WP021,ad18d12e-a6a9-4c17-abfa-6ff119479be2\",\n  \"ticketPdfUrl\": \"https://apps.wix.com/events/doc/tickets/Ticket.pdf?request=<TOKEN>\"\n}} "],
            "type": "curl",
            "extra": {"description": "Ticket guest form can be updated if a guest is assigned to the ticket."}
          }
        ],
        "extra": {}
      },
      "extra":       {
        "hasRest": true,
        "rpcRequestName": "UpdateTicketRequest",
        "rpcResponseName": "UpdateTicketResponse"
      },
      "customLabels": []
    },
        {
      "name": "Update Ticket Definition",
      "methodName": "UpdateTicketDefinition",
      "serviceName": "TicketDefinitionManagement",
      "tag": "Ticket Definitions",
      "permissions": [      {
        "name": "Manage Ticket Definitions",
        "description": "Request permission to read, create and change event ticket definitions."
      }],
      "events": [],
      "labels": [],
      "nameParams": [],
      "requiredFields":       [
        "fields",
        "definition.pricing.price",
        "eventId",
        "definitionId"
      ],
      "params":       [
                {
          "in": "PATH",
          "name": "eventId",
          "type": "string",
          "doc": " Event ID.\n",
          "required": true
        },
                {
          "in": "PATH",
          "name": "definitionId",
          "type": "string",
          "doc": " Ticket definition ID.\n",
          "required": true
        },
                {
          "in": "BODY",
          "name": "definition",
          "type": "All APIs.Events - Ticketing._wix_events_ticketing_TicketDefinitionData",
          "doc": "Ticket definition data.\n",
          "required": false
        },
                {
          "in": "BODY",
          "name": "fields",
          "type": "All APIs.Events - Ticketing._google_protobuf_FieldMask",
          "doc": " Set of field paths, specifying which parts of ticket definition to update.\n",
          "required": true
        }
      ],
      "ret":       {
        "type":         {
          "name": "UpdateTicketDefinition",
          "statusCode": "200",
          "typeParams": ["All APIs.Events - Ticketing._wix_events_ticketing_UpdateTicketDefinitionResponse"]
        },
        "doc": ""
      },
      "locations": [],
      "docs":       {
        "summary": " Updates a ticket definition. See [partial updates](https://dev.wix.com/api/rest/wix-events/wix-events/partial-updates) for more information.\n \n",
        "description": [],
        "request": "PATCH",
        "url": "https://www.wixapis.com/events/v1/events/{eventId}/tickets/definitions/{definitionId}",
        "links": [],
        "examples":         [
                    {
            "title": "Update price and limit",
            "body": ["curl -X PATCH 'https://www.wixapis.com/events/v1/events/fd56076c-38f4-4705-b9eb-ec322b85c745/tickets/definitions/fa3b78b5-4a30-4c67-9b2e-32a3b6b3ca94' \\\n-H 'Content-Type: application/json' \\\n-H 'Authorization: <AUTH>' \\\n-d @- << EOF\n{\n  \"definition\": {\n    \"price\": {\n      \"amount\": \"49.99\",\n      \"currency\": \"USD\"\n    },\n    \"name\": \"VIP ticket\",\n    \"limited\": false\n  },\n  \"fields\": {\n    \"paths\": [\n      \"price\",\n      \"quantity\",\n      \"limited\"\n    ]\n  }\n}\nEOF"],
            "response": ["{\"definition\": {\n  \"id\": \"fa3b78b5-4a30-4c67-9b2e-32a3b6b3ca94\",\n  \"price\":   {\n    \"amount\": \"49.99\",\n    \"currency\": \"USD\"\n  },\n  \"free\": false,\n  \"name\": \"VIP ticket\",\n  \"description\": \"Includes drinks\",\n  \"limitPerCheckout\": 20,\n  \"orderIndex\": 3,\n  \"policy\": \"This is your event ticket. Ticket holders must present their tickets on entry. You can either print your ticket or present this digital version. You can find all the details about this event on our website. If you have any questions, issues or wish to get a refund, contact the event host. If you can’t attend the event, please get in touch. Looking forward to seeing you there!\",\n  \"dashboard\":   {\n    \"hidden\": false,\n    \"sold\": 0,\n    \"limited\": false\n  },\n  \"eventId\": \"fd56076c-38f4-4705-b9eb-ec322b85c745\",\n  \"saleStatus\": \"SALE_STARTED\"\n}} "],
            "type": "curl",
            "extra": {}
          },
                    {
            "title": "Hide ticket definition",
            "body": ["curl -X PATCH 'https://www.wixapis.com/events/v1/events/fd56076c-38f4-4705-b9eb-ec322b85c745/tickets/definitions/dd042646-8fc2-4d08-9e90-bfabb98a7b28' \\\n-H 'Content-Type: application/json' \\\n-H 'Authorization: <AUTH>' \\\n-d @- << EOF\n{\n  \"definition\": {\n    \"hidden\": true\n  },\n  \"fields\": {\n    \"paths\": [\n      \"hidden\"\n    ]\n  }\n}\nEOF"],
            "response": ["{\"definition\": {\n  \"id\": \"dd042646-8fc2-4d08-9e90-bfabb98a7b28\",\n  \"price\":   {\n    \"amount\": \"49.99\",\n    \"currency\": \"USD\"\n  },\n  \"free\": false,\n  \"name\": \"VIP ticket\",\n  \"description\": \"\",\n  \"limitPerCheckout\": 20,\n  \"orderIndex\": 1,\n  \"policy\": \"Some policy\",\n  \"dashboard\":   {\n    \"hidden\": true,\n    \"sold\": 0,\n    \"limited\": false\n  },\n  \"eventId\": \"fd56076c-38f4-4705-b9eb-ec322b85c745\",\n  \"saleStatus\": \"SALE_STARTED\"\n}} "],
            "type": "curl",
            "extra": {"description": "This way ticket definition can be hidden from sales."}
          },
                    {
            "title": "Update ticket definition sale period",
            "body": ["curl -X PATCH 'https://www.wixapis.com/events/v1/events/0f018a42-fdb2-45d9-a008-6d0dd74b90ec/tickets/definitions/d092fd27-35e9-433e-838c-7980708981a0' \\\n-H 'Content-Type: application/json' \\\n-H 'Authorization: <AUTH>' \\\n-d @- << EOF\n{\n  \"definition\": {\n    \"salePeriod\": {\n      \"startDate\": \"2029-01-01T09:51:00Z\",\n      \"endDate\": \"2030-09-27T09:55:00Z\",\n      \"hideNotOnSale\": true\n    }\n  },\n  \"fields\": {\n    \"paths\": [\n      \"salePeriod\"\n    ]\n  }\n}\nEOF"],
            "response": ["{\"definition\": {\n  \"id\": \"d092fd27-35e9-433e-838c-7980708981a0\",\n  \"price\":   {\n    \"amount\": \"0.00\",\n    \"currency\": \"EUR\",\n    \"value\": \"0.00\"\n  },\n  \"free\": true,\n  \"name\": \"Secret Ticket\",\n  \"description\": \"Patience is virtue\",\n  \"limitPerCheckout\": 20,\n  \"orderIndex\": 4,\n  \"policy\": \"This is your event ticket. Ticket holders must present their tickets on entry. You can either print your ticket or present this digital version. You can find all the details about this event on our website. If you have any questions, issues or wish to get a refund, contact the event host. If you can’t attend the event, please get in touch. Looking forward to seeing you there!\",\n  \"dashboard\":   {\n    \"hidden\": false,\n    \"sold\": 0,\n    \"limited\": false\n  },\n  \"eventId\": \"0f018a42-fdb2-45d9-a008-6d0dd74b90ec\",\n  \"salePeriod\":   {\n    \"startDate\": \"2029-01-01T09:51:00Z\",\n    \"endDate\": \"2030-09-27T09:55:00Z\",\n    \"hideNotOnSale\": true\n  },\n  \"saleStatus\": \"SALE_SCHEDULED\"\n}} "],
            "type": "curl",
            "extra": {}
          }
        ],
        "extra": {}
      },
      "extra":       {
        "hasRest": true,
        "rpcRequestName": "UpdateTicketDefinitionRequest",
        "rpcResponseName": "UpdateTicketDefinitionResponse"
      },
      "customLabels": []
    }
  ],
  "events":   [
        {
      "type": "_wix_events_ticketing_events_OrderUpdated",
      "name": "Order Updated Webhook",
      "docs":       {
        "summary": "",
        "src": "https://github.com/wix-private/events/tree/master/wix-events-platform-api/events-ticketing-v1/src/main/proto/wix/events/ticketing/TicketManagement.proto"
      },
      "topic": "wix-events.ticketing",
      "tag": "Tickets",
      "permissions": [      {
        "name": "Read Basic Events Order Info",
        "description": "Request permission to read basic order info."
      }],
      "customLabels": []
    },
        {
      "type": "_wix_events_ticketing_events_OrderConfirmed",
      "name": "Order Confirmed Webhook",
      "docs":       {
        "summary": "",
        "src": "https://github.com/wix-private/events/tree/master/wix-events-platform-api/events-ticketing-v1/src/main/proto/wix/events/ticketing/CheckoutService.proto"
      },
      "topic": "wix-events.ticketing",
      "tag": "Checkout",
      "permissions": [      {
        "name": "Read Basic Events Order Info",
        "description": "Request permission to read basic order info."
      }],
      "customLabels": []
    },
        {
      "type": "_wix_events_ticketing_events_OrderPaid",
      "name": "Order Paid Webhook",
      "docs":       {
        "summary": "",
        "src": "https://github.com/wix-private/events/tree/master/wix-events-platform-api/events-ticketing-v1/src/main/proto/wix/events/ticketing/CheckoutService.proto"
      },
      "topic": "wix-events.ticketing",
      "tag": "Checkout",
      "permissions": [      {
        "name": "Read Basic Events Order Info",
        "description": "Request permission to read basic order info."
      }],
      "customLabels": []
    },
        {
      "type": "_wix_events_ticketing_events_ReservationCreated",
      "name": "Reservation Created Webhook",
      "docs":       {
        "summary": "",
        "src": "https://github.com/wix-private/events/tree/master/wix-events-platform-api/events-ticketing-v1/src/main/proto/wix/events/ticketing/CheckoutService.proto"
      },
      "topic": "wix-events.ticketing",
      "tag": "Checkout",
      "permissions":       [
                {
          "name": "Manage Orders",
          "description": "Request permission to read, create and change orders."
        },
                {
          "name": "Read Basic Events Order Info",
          "description": "Request permission to read basic order info."
        }
      ],
      "customLabels": []
    },
        {
      "type": "_wix_events_ticketing_events_ReservationUpdated",
      "name": "Reservation Updated Webhook",
      "docs":       {
        "summary": "",
        "src": "https://github.com/wix-private/events/tree/master/wix-events-platform-api/events-ticketing-v1/src/main/proto/wix/events/ticketing/CheckoutService.proto"
      },
      "topic": "wix-events.ticketing",
      "tag": "Checkout",
      "permissions":       [
                {
          "name": "Manage Orders",
          "description": "Request permission to read, create and change orders."
        },
                {
          "name": "Read Basic Events Order Info",
          "description": "Request permission to read basic order info."
        }
      ],
      "customLabels": []
    },
        {
      "type": "_wix_events_ticketing_events_OrderDeleted",
      "name": "Order Deleted Webhook",
      "docs":       {
        "summary": " This event is triggered when an order is deleted via GDPR request.\n",
        "src": "https://github.com/wix-private/events/tree/master/wix-events-platform-api/events-ticketing-v1/src/main/proto/wix/events/ticketing/OrderManagement.proto"
      },
      "topic": "wix-events.ticketing",
      "tag": "Order",
      "permissions": [      {
        "name": "Read Basic Events Order Info",
        "description": "Request permission to read basic order info."
      }],
      "customLabels": []
    },
        {
      "type": "_wix_events_ticketing_events_OrderInitiated",
      "name": "Order Initiated Webhook",
      "docs":       {
        "summary": "",
        "src": "https://github.com/wix-private/events/tree/master/wix-events-platform-api/events-ticketing-v1/src/main/proto/wix/events/ticketing/CheckoutService.proto"
      },
      "topic": "wix-events.ticketing",
      "tag": "Checkout",
      "permissions": [      {
        "name": "Read Basic Events Order Info",
        "description": "Request permission to read basic order info."
      }],
      "customLabels": []
    },
        {
      "type": "_wix_events_ticketing_events_TicketDefinitionUpdated",
      "name": "Ticket Definition Updated Webhook",
      "docs":       {
        "summary": "",
        "src": "https://github.com/wix-private/events/tree/master/wix-events-platform-api/events-ticketing-v1/src/main/proto/wix/events/ticketing/TicketDefinitionManagement.proto"
      },
      "topic": "wix-events.ticketing",
      "tag": "Ticket Definitions",
      "permissions":       [
                {
          "name": "Manage Orders",
          "description": "Request permission to read, create and change orders."
        },
                {
          "name": "Manage Ticket Definitions",
          "description": "Request permission to read, create and change event ticket definitions."
        }
      ],
      "customLabels": []
    },
        {
      "type": "_wix_events_ticketing_events_TicketDefinitionCreated",
      "name": "Ticket Definition Created Webhook",
      "docs":       {
        "summary": "",
        "src": "https://github.com/wix-private/events/tree/master/wix-events-platform-api/events-ticketing-v1/src/main/proto/wix/events/ticketing/TicketDefinitionManagement.proto"
      },
      "topic": "wix-events.ticketing",
      "tag": "Ticket Definitions",
      "permissions":       [
                {
          "name": "Manage Orders",
          "description": "Request permission to read, create and change orders."
        },
                {
          "name": "Manage Ticket Definitions",
          "description": "Request permission to read, create and change event ticket definitions."
        }
      ],
      "customLabels": []
    },
        {
      "type": "_wix_events_ticketing_events_TicketDefinitionDeleted",
      "name": "Ticket Definition Deleted Webhook",
      "docs":       {
        "summary": "",
        "src": "https://github.com/wix-private/events/tree/master/wix-events-platform-api/events-ticketing-v1/src/main/proto/wix/events/ticketing/TicketDefinitionManagement.proto"
      },
      "topic": "wix-events.ticketing",
      "tag": "Ticket Definitions",
      "permissions":       [
                {
          "name": "Manage Orders",
          "description": "Request permission to read, create and change orders."
        },
                {
          "name": "Manage Ticket Definitions",
          "description": "Request permission to read, create and change event ticket definitions."
        }
      ],
      "customLabels": []
    }
  ],
  "callbacks": [],
  "messages":   [
        {
      "name": "_wix_events_Money",
      "displayName": "Money Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "amount",
          "type": "string",
          "doc": " Decimal amount representation. Deprecated, use `value` instead.\n",
          "deprecated": true
        },
                {
          "name": "currency",
          "type": "string",
          "doc": " ISO 4217 format of the currency i.e. `USD`.\n"
        },
                {
          "name": "value",
          "type": "string",
          "doc": " Monetary amount. Decimal string with a period as a decimal separator (e.g., 3.99). Optionally, a single (-), to indicate that the amount is negative.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "countsMapEntry",
      "displayName": "counts Map Entry Object",
      "locations": [],
      "docs":       {
        "summary": "Set of key-value pairs. Facet counts aggregated per value\n",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "key:value",
        "type": "integer",
        "doc": "`key` of type string, `value` of type integer"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_FacetCounts",
      "displayName": "Facet Counts Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "counts",
        "type": "All APIs.Events - Ticketing.countsMapEntry",
        "doc": "Set of key-value pairs. Facet counts aggregated per value\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_ResponseMetaData",
      "displayName": "Response Meta Data Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "count",
          "type": "integer",
          "doc": " Number of items in the response.\n"
        },
                {
          "name": "offset",
          "type": "integer",
          "doc": " Offset of items.\n"
        },
                {
          "name": "total",
          "type": "integer",
          "doc": " Total number of matching items.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_SearchMetaData_Result",
      "displayName": "Result Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "id",
          "type": "string",
          "doc": " Entity ID\n"
        },
                {
          "name": "score",
          "type": "string",
          "doc": " Entity score.\n Higher is more relevant to search phrase.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_SearchMetaData",
      "displayName": "Search Meta Data Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "results",
        "type":         {
          "name": "array",
          "typeParams": ["All APIs.Events - Ticketing._wix_events_SearchMetaData_Result"]
        },
        "doc": " Search results\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_CheckIn",
      "displayName": "Check In Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "created",
        "type": "string",
        "doc": " Time of check-in\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_OriginatedFrom",
      "displayName": "Originated From Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "instanceId",
          "type": "string",
          "doc": " Instance ID. Indicates the original app instance which current entity originated from.\n"
        },
                {
          "name": "eventId",
          "type": "string",
          "doc": " Event ID. Indicates the original event which current entity originated from.\n"
        },
                {
          "name": "entityId",
          "type": "string",
          "doc": " Event ID. Indicates the original entity which current entity originated from.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_common_Address",
      "displayName": "Address Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "country",
          "type": "string",
          "doc": " Country code.\n"
        },
                {
          "name": "subdivision",
          "type": "string",
          "doc": " Subdivision. Usually a state, region, prefecture, or province code, according to [ISO 3166-2](https://en.wikipedia.org/wiki/ISO_3166-2).\n"
        },
                {
          "name": "city",
          "type": "string",
          "doc": " City name.\n"
        },
                {
          "name": "postalCode",
          "type": "string",
          "doc": " Zip/postal code.\n"
        },
                {
          "name": "street",
          "type": "All APIs.Events - Ticketing._wix_common_Address_street",
          "doc": ""
        },
                {
          "name": "addressLine2",
          "type": "string",
          "doc": " Free text providing more detailed address info. Usually contains Apt, Suite, and Floor.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_common_Address_street",
      "displayName": "street Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "streetAddress",
          "type": "All APIs.Events - Ticketing._wix_common_StreetAddress",
          "doc": " Street name and number.\n"
        },
                {
          "name": "addressLine",
          "type": "string",
          "doc": " Main address line, usually street and number as free text.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": [],
      "oneOf": true
    },
        {
      "name": "_wix_common_Subdivision",
      "displayName": "Subdivision Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "code",
          "type": "string",
          "doc": " Short subdivision code.\n"
        },
                {
          "name": "name",
          "type": "string",
          "doc": " Subdivision full name.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_common_StreetAddress",
      "displayName": "Street Address Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "number",
          "type": "string",
          "doc": " Street number.\n"
        },
                {
          "name": "name",
          "type": "string",
          "doc": " Street name.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_common_AddressLocation",
      "displayName": "Address Location Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "latitude",
          "type": "number",
          "doc": " Address latitude.\n"
        },
                {
          "name": "longitude",
          "type": "number",
          "doc": " Address longitude.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_FormResponse",
      "displayName": "Form Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "inputValues",
        "type":         {
          "name": "array",
          "typeParams": ["All APIs.Events - Ticketing._wix_events_InputValue"]
        },
        "doc": " Input values entered upon ticket order.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_InputValue",
      "displayName": "Input Value Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "inputName",
          "type": "string",
          "doc": " Unique input name.\n"
        },
                {
          "name": "value",
          "type": "string",
          "doc": " Text value representation.\n"
        },
                {
          "name": "values",
          "type":           {
            "name": "array",
            "typeParams": ["string"]
          },
          "doc": " Text value vector.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_FormattedAddress",
      "displayName": "Formatted Address Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "formatted",
          "type": "string",
          "doc": " One line address representation.\n"
        },
                {
          "name": "address",
          "type": "All APIs.Events - Ticketing._wix_common_Address",
          "doc": " Address components (optional).\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_ticketing_Discount",
      "displayName": "Discount Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "amount",
          "type": "All APIs.Events - Ticketing._wix_events_Money",
          "doc": " Total discount amount.\n"
        },
                {
          "name": "afterDiscount",
          "type": "All APIs.Events - Ticketing._wix_events_Money",
          "doc": " Total charge after applied discount.\n"
        },
                {
          "name": "code",
          "type": "string",
          "doc": " Discount coupon code.\n",
          "deprecated": true
        },
                {
          "name": "name",
          "type": "string",
          "doc": " Discount coupon name.\n",
          "deprecated": true
        },
                {
          "name": "couponId",
          "type": "string",
          "doc": " Discount coupon ID.\n",
          "deprecated": true
        },
                {
          "name": "discounts",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Events - Ticketing._wix_events_ticketing_DiscountItem"]
          },
          "doc": " Discount items.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_ticketing_DiscountItem",
      "displayName": "Discount Item Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "amount",
          "type": "All APIs.Events - Ticketing._wix_events_Money",
          "doc": " Total discount amount.\n"
        },
                {
          "name": "discount",
          "type": "All APIs.Events - Ticketing._wix_events_ticketing_DiscountItem_discount",
          "doc": ""
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_ticketing_DiscountItem_discount",
      "displayName": "discount Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "coupon",
          "type": "All APIs.Events - Ticketing._wix_events_ticketing_CouponDiscount",
          "doc": " Coupon discount.\n"
        },
                {
          "name": "paidPlan",
          "type": "All APIs.Events - Ticketing._wix_events_ticketing_PaidPlanDiscount",
          "doc": " Pricing plan discount.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": [],
      "oneOf": true
    },
        {
      "name": "_wix_events_ticketing_CouponDiscount",
      "displayName": "Coupon Discount Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "name",
          "type": "string",
          "doc": " Discount coupon name.\n"
        },
                {
          "name": "code",
          "type": "string",
          "doc": " Discount coupon code.\n"
        },
                {
          "name": "couponId",
          "type": "string",
          "doc": " Discount coupon ID.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_ticketing_PaidPlanDiscount",
      "displayName": "Paid Plan Discount Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "name",
          "type": "string",
          "doc": " Name of pricing plan.\n"
        },
                {
          "name": "discount",
          "type": "All APIs.Events - Ticketing._wix_events_ticketing_PaidPlanDiscount_discount",
          "doc": ""
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_ticketing_PaidPlanDiscount_discount",
      "displayName": "discount Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "percentDiscount",
        "type": "All APIs.Events - Ticketing._wix_events_ticketing_PercentDiscount",
        "doc": " Discount by percentage applied to tickets.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": [],
      "oneOf": true
    },
        {
      "name": "_wix_events_ticketing_PercentDiscount",
      "displayName": "Percent Discount Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "rate",
          "type": "string",
          "doc": " Percent rate.\n"
        },
                {
          "name": "quantityDiscounted",
          "type": "integer",
          "doc": " Number of discounted tickets.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_ticketing_Fee",
      "displayName": "Fee Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "name",
          "type": "All APIs.Events - Ticketing._wix_events_ticketing_FeeName",
          "doc": " Fee identifier.\n"
        },
                {
          "name": "type",
          "type": "All APIs.Events - Ticketing._wix_events_FeeType",
          "doc": " How fee is calculated.\n"
        },
                {
          "name": "rate",
          "type": "string",
          "doc": " Fee rate.\n",
          "readOnly": true
        },
                {
          "name": "amount",
          "type": "All APIs.Events - Ticketing._wix_events_Money",
          "doc": " Total amount of fee charges.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_ticketing_Item",
      "displayName": "Item Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "id",
          "type": "string",
          "doc": " Unique line item ID.\n"
        },
                {
          "name": "quantity",
          "type": "integer",
          "doc": " Line item quantity.\n"
        },
                {
          "name": "name",
          "type": "string",
          "doc": " Line item mame.\n"
        },
                {
          "name": "price",
          "type": "All APIs.Events - Ticketing._wix_events_Money",
          "doc": " Line item price.\n"
        },
                {
          "name": "total",
          "type": "All APIs.Events - Ticketing._wix_events_Money",
          "doc": " Total price for line items. Always equal to price * quantity.\n"
        },
                {
          "name": "discount",
          "type": "All APIs.Events - Ticketing._wix_events_ticketing_Discount",
          "doc": " Discount applied to the line item.\n"
        },
                {
          "name": "tax",
          "type": "All APIs.Events - Ticketing._wix_events_ticketing_Tax",
          "doc": " Tax applied to the item.\n"
        },
                {
          "name": "fees",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Events - Ticketing._wix_events_ticketing_Fee"]
          },
          "doc": " Fees applied to the item.\n",
          "readOnly": true
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_ticketing_Tax",
      "displayName": "Tax Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "type",
          "type": "All APIs.Events - Ticketing._wix_events_TaxType",
          "doc": " Tax type.\n"
        },
                {
          "name": "name",
          "type": "string",
          "doc": " Tax name.\n",
          "readOnly": true
        },
                {
          "name": "rate",
          "type": "string",
          "doc": " Tax rate.\n"
        },
                {
          "name": "taxable",
          "type": "All APIs.Events - Ticketing._wix_events_Money",
          "doc": " Taxable amount.\n"
        },
                {
          "name": "amount",
          "type": "All APIs.Events - Ticketing._wix_events_Money",
          "doc": " Total tax amount.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_ticketing_Invoice",
      "displayName": "Invoice Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "items",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Events - Ticketing._wix_events_ticketing_Item"]
          },
          "doc": ""
        },
                {
          "name": "total",
          "type": "All APIs.Events - Ticketing._wix_events_Money",
          "doc": " Total cart amount.\n",
          "deprecated": true
        },
                {
          "name": "discount",
          "type": "All APIs.Events - Ticketing._wix_events_ticketing_Discount",
          "doc": " Discount applied to cart.\n"
        },
                {
          "name": "tax",
          "type": "All APIs.Events - Ticketing._wix_events_ticketing_Tax",
          "doc": " Tax applied to cart.\n"
        },
                {
          "name": "subTotal",
          "type": "All APIs.Events - Ticketing._wix_events_Money",
          "doc": " Total cart amount before discount, tax, and fees.\n"
        },
                {
          "name": "grandTotal",
          "type": "All APIs.Events - Ticketing._wix_events_Money",
          "doc": " Total amount of cart after discount, tax, and fees.\n Grand total is calculated in the following order:\n   1. Total prices of all items in the cart are calculated.\n   2. Discount is subtracted from the cart (if applicable).\n   3. Tax is added (if applicable).\n   4. Wix service fee is added.\n"
        },
                {
          "name": "fees",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Events - Ticketing._wix_events_ticketing_Fee"]
          },
          "doc": " Fees applied to the cart.\n",
          "readOnly": true
        },
                {
          "name": "revenue",
          "type": "All APIs.Events - Ticketing._wix_events_Money",
          "doc": " Total revenue, excluding fees. (Taxes and payment provider fees are not deducted).\n"
        },
                {
          "name": "previewUrl",
          "type": "string",
          "doc": " URL to invoice preview. Returned only if order is paid.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_ticketing_TicketDetails",
      "displayName": "Ticket Details Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "seatId",
          "type": "string",
          "doc": " Unique seat id in the event venue.\n"
        },
                {
          "name": "sectionLabel",
          "type": "string",
          "doc": " Optional sector label.\n",
          "readOnly": true
        },
                {
          "name": "areaLabel",
          "type": "string",
          "doc": " Area label.\n",
          "readOnly": true
        },
                {
          "name": "tableLabel",
          "type": "string",
          "doc": " Table label.\n",
          "readOnly": true
        },
                {
          "name": "rowLabel",
          "type": "string",
          "doc": " Row label.\n",
          "readOnly": true
        },
                {
          "name": "seatLabel",
          "type": "string",
          "doc": " Seat label in a row or table.\n",
          "readOnly": true
        },
                {
          "name": "capacity",
          "type": "integer",
          "doc": " Number of places in the spot. If not provided - defaults to 1.\n"
        },
                {
          "name": "priceOverride",
          "type": "string",
          "doc": " Custom pricing of ticket.\n"
        },
                {
          "name": "pricingOptionId",
          "type": "string",
          "doc": " Pricing option id.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_ticketing_TicketSalePeriod",
      "displayName": "Ticket Sale Period Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "startDate",
          "type": "string",
          "doc": " Ticket sale start timestamp.\n"
        },
                {
          "name": "endDate",
          "type": "string",
          "doc": " Ticket sale end timestamp.\n"
        },
                {
          "name": "hideNotOnSale",
          "type": "boolean",
          "doc": " Whether to hide this ticket if it's not on sale\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_ticketing_Ticket",
      "displayName": "Ticket Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "ticketNumber",
          "type": "string",
          "doc": " Unique ticket number (issued automatically).\n"
        },
                {
          "name": "orderNumber",
          "type": "string",
          "doc": " Associated order number.\n"
        },
                {
          "name": "ticketDefinitionId",
          "type": "string",
          "doc": " Ticket definition ID.\n"
        },
                {
          "name": "name",
          "type": "string",
          "doc": " Ticket name.\n"
        },
                {
          "name": "price",
          "type": "All APIs.Events - Ticketing._wix_events_Money",
          "doc": " Ticket price.\n"
        },
                {
          "name": "free",
          "type": "boolean",
          "doc": " Whether ticket requires payment.\n",
          "readOnly": true
        },
                {
          "name": "policy",
          "type": "string",
          "doc": " Ticket policy (as displayed in PDF).\n"
        },
                {
          "name": "qrCode",
          "type": "string",
          "doc": " Deprecated, use `check_in_url`.\n",
          "deprecated": true
        },
                {
          "name": "checkIn",
          "type": "All APIs.Events - Ticketing._wix_events_CheckIn",
          "doc": " Ticket check-in.\n"
        },
                {
          "name": "orderStatus",
          "type": "All APIs.Events - Ticketing._wix_events_ticketing_OrderStatus",
          "doc": " Associated order status.\n"
        },
                {
          "name": "orderArchived",
          "type": "boolean",
          "doc": " Whether order and ticket are visible in order list.\n"
        },
                {
          "name": "orderFullName",
          "type": "string",
          "doc": " Buyer full name.\n"
        },
                {
          "name": "guestFullName",
          "type": "string",
          "doc": " Guest full name.\n"
        },
                {
          "name": "guestDetails",
          "type": "All APIs.Events - Ticketing._wix_events_ticketing_GuestDetails",
          "doc": " Guest personal details.\n"
        },
                {
          "name": "archived",
          "type": "boolean",
          "doc": " Whether ticket is visible in guest list.\n"
        },
                {
          "name": "ticketPdf",
          "type": "string",
          "doc": " Deprecated, use `ticket_pdf_url`.\n",
          "deprecated": true
        },
                {
          "name": "memberId",
          "type": "string",
          "doc": " Ticket owner member ID.\n"
        },
                {
          "name": "anonymized",
          "type": "boolean",
          "doc": " Whether ticket was anonymized by GDPR delete.\n Anonymized tickets no longer contain personally identifiable information (PII).\n"
        },
                {
          "name": "checkInUrl",
          "type": "string",
          "doc": " Ticket check-in URL.\n Shown as QR code image in PDF.\n Format: `https://www.wixevents.com/check-in/{ticket number},{event id}`\n Example: `https://www.wixevents.com/check-in/AAAA-AAAA-BB021,00000000-0000-0000-0000-000000000000`\n"
        },
                {
          "name": "ticketPdfUrl",
          "type": "string",
          "doc": " URL for ticket PDF download.\n"
        },
                {
          "name": "channel",
          "type": "All APIs.Events - Ticketing._wix_events_ticketing_ChannelType",
          "doc": " Associated order checkout channel type\n"
        },
                {
          "name": "walletPassUrl",
          "type": "string",
          "doc": " URL to download ticket in .pkpass format for Apple Wallet\n",
          "readOnly": true
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_ticketing_GuestDetails",
      "displayName": "Guest Details Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "guestAssigned",
          "type": "boolean",
          "doc": " Whether ticket belongs to assigned guest.\n"
        },
                {
          "name": "firstName",
          "type": "string",
          "doc": " Guest first name.\n"
        },
                {
          "name": "lastName",
          "type": "string",
          "doc": " Guest last name.\n"
        },
                {
          "name": "email",
          "type": "string",
          "doc": " Guest email.\n"
        },
                {
          "name": "form",
          "type": "All APIs.Events - Ticketing._wix_events_FormResponse",
          "doc": " Full form response.\n"
        },
                {
          "name": "contactId",
          "type": "string",
          "doc": " Contact ID associated with this guest.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_ticketing_Order",
      "displayName": "Order Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "orderNumber",
          "type": "string",
          "doc": " Unique order number.\n"
        },
                {
          "name": "reservationId",
          "type": "string",
          "doc": " Reservation ID.\n"
        },
                {
          "name": "snapshotId",
          "type": "string",
          "doc": " Payment snapshot ID.\n Empty for FREE order.\n",
          "readOnly": true
        },
                {
          "name": "eventId",
          "type": "string",
          "doc": " Event ID.\n"
        },
                {
          "name": "contactId",
          "type": "string",
          "doc": " Contact ID of buyer (resolved using email address).\n"
        },
                {
          "name": "memberId",
          "type": "string",
          "doc": " Member ID of buyer (if relevant).\n"
        },
                {
          "name": "created",
          "type": "string",
          "doc": " RSVP created timestamp.\n",
          "readOnly": true
        },
                {
          "name": "firstName",
          "type": "string",
          "doc": " Guest first name.\n"
        },
                {
          "name": "lastName",
          "type": "string",
          "doc": " Guest last name.\n"
        },
                {
          "name": "email",
          "type": "string",
          "doc": " Guest email.\n"
        },
                {
          "name": "checkoutForm",
          "type": "All APIs.Events - Ticketing._wix_events_FormResponse",
          "doc": " Checkout form response. When each purchased ticket is assigned to a guest, guest forms are returned for each ticket, and buyer info is returned.\n"
        },
                {
          "name": "confirmed",
          "type": "boolean",
          "doc": " Whether the order is confirmed (triggered once payment gateway processes the payment and funds reach the merchant's account).\n"
        },
                {
          "name": "status",
          "type": "All APIs.Events - Ticketing._wix_events_ticketing_OrderStatus",
          "doc": " Order status.\n"
        },
                {
          "name": "method",
          "type": "string",
          "doc": " Payment method used for purchase, e.g., \"payPal\", \"creditCard\", etc.\n"
        },
                {
          "name": "ticketsQuantity",
          "type": "integer",
          "doc": " Tickets ordered.\n"
        },
                {
          "name": "totalPrice",
          "type": "All APIs.Events - Ticketing._wix_events_Money",
          "doc": " Total order price.\n"
        },
                {
          "name": "ticketsPdf",
          "type": "string",
          "doc": " URL to ticket PDF.\n"
        },
                {
          "name": "tickets",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Events - Ticketing._wix_events_ticketing_Ticket"]
          },
          "doc": " Tickets (generated after payment).\n"
        },
                {
          "name": "archived",
          "type": "boolean",
          "doc": " Whether the order is archived.\n"
        },
                {
          "name": "anonymized",
          "type": "boolean",
          "doc": " Whether the order is anonymized by GDPR delete.\n"
        },
                {
          "name": "fullName",
          "type": "string",
          "doc": " Guest full name.\n"
        },
                {
          "name": "invoice",
          "type": "All APIs.Events - Ticketing._wix_events_ticketing_Invoice",
          "doc": " Order invoice.\n"
        },
                {
          "name": "fullyCheckedIn",
          "type": "boolean",
          "doc": " Whether all tickets in order are checked-in.\n"
        },
                {
          "name": "paymentDetails",
          "type": "All APIs.Events - Ticketing._wix_events_ticketing_PaymentDetails",
          "doc": " Internal order payment details\n"
        },
                {
          "name": "channel",
          "type": "All APIs.Events - Ticketing._wix_events_ticketing_ChannelType",
          "doc": " Checkout channel type\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_ticketing_PaymentTransaction",
      "displayName": "Payment Transaction Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "transactionId",
          "type": "string",
          "doc": " Wix Payments transaction id\n",
          "readOnly": true
        },
                {
          "name": "method",
          "type": "string",
          "doc": " Transaction Payment method e.g., \"payPal\", \"creditCard\", etc.\n",
          "readOnly": true
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_ticketing_PaymentDetails",
      "displayName": "Payment Details Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "transaction",
        "type": "All APIs.Events - Ticketing._wix_events_ticketing_PaymentTransaction",
        "doc": " Wix Payments transaction\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_ticketing_WixFeeConfig",
      "displayName": "Wix Fee Config Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "type",
        "type": "All APIs.Events - Ticketing._wix_events_FeeType",
        "doc": " Fee calculation method.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_ticketing_TicketPricing",
      "displayName": "Ticket Pricing Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "price",
        "type": "All APIs.Events - Ticketing._wix_events_ticketing_TicketPricing_price",
        "doc": ""
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_ticketing_TicketPricing_price",
      "displayName": "price Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "fixedPrice",
          "type": "All APIs.Events - Ticketing._wix_events_Money",
          "doc": " Ticket price which is read only.\n"
        },
                {
          "name": "minPrice",
          "type": "All APIs.Events - Ticketing._wix_events_Money",
          "doc": " Min price per ticket, customizable.\n"
        },
                {
          "name": "pricingOptions",
          "type": "All APIs.Events - Ticketing._wix_events_ticketing_PricingOptions",
          "doc": " Ticket pricing options.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": [],
      "oneOf": true
    },
        {
      "name": "_wix_events_ticketing_PricingOptions",
      "displayName": "Pricing Options Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "options",
        "type":         {
          "name": "array",
          "typeParams": ["All APIs.Events - Ticketing._wix_events_ticketing_PricingOption"]
        },
        "doc": " Multiple ticket pricing options.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_ticketing_PricingOption",
      "displayName": "Pricing Option Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "id",
          "type": "string",
          "doc": " Ticket pricing option ID.\n"
        },
                {
          "name": "name",
          "type": "string",
          "doc": " Ticket pricing option name.\n"
        },
                {
          "name": "price",
          "type": "All APIs.Events - Ticketing._wix_events_Money",
          "doc": " Ticket pricing option price.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_ticketing_TicketDefinition_Dashboard",
      "displayName": "Dashboard Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "hidden",
          "type": "boolean",
          "doc": " Whether ticket is hidden and cannot be sold.\n"
        },
                {
          "name": "sold",
          "type": "integer",
          "doc": " Number of tickets sold and reserved.\n",
          "deprecated": true
        },
                {
          "name": "limited",
          "type": "boolean",
          "doc": " Whether the ticket has limited quantity.\n"
        },
                {
          "name": "quantity",
          "type": "integer",
          "doc": " Ticket limit (NULL for unlimited ticket definition).\n"
        },
                {
          "name": "unsold",
          "type": "integer",
          "doc": " Number of unsold tickets (NULL for unlimited ticket definition).\n"
        },
                {
          "name": "ticketsSold",
          "type": "integer",
          "doc": " Number of tickets sold.\n"
        },
                {
          "name": "ticketsReserved",
          "type": "integer",
          "doc": " Number of tickets reserved.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_ticketing_TicketDefinition",
      "displayName": "Ticket Definition Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "id",
          "type": "string",
          "doc": " Ticket definition ID.\n"
        },
                {
          "name": "price",
          "type": "All APIs.Events - Ticketing._wix_events_Money",
          "doc": " Ticket price.\n"
        },
                {
          "name": "free",
          "type": "boolean",
          "doc": " Whether the ticket is free (read only).\n"
        },
                {
          "name": "name",
          "type": "string",
          "doc": " Ticket name.\n"
        },
                {
          "name": "description",
          "type": "string",
          "doc": " Ticket description.\n"
        },
                {
          "name": "limitPerCheckout",
          "type": "integer",
          "doc": " Limit of tickets that can be purchased per checkout.\n Set to 20 for unlimited ticket definition.\n"
        },
                {
          "name": "orderIndex",
          "type": "integer",
          "doc": " Custom sort index.\n"
        },
                {
          "name": "policy",
          "type": "string",
          "doc": " Policy information plain text block, as printed on the ticket.\n"
        },
                {
          "name": "dashboard",
          "type": "All APIs.Events - Ticketing._wix_events_ticketing_TicketDefinition_Dashboard",
          "doc": " Sensitive dashboard data.\n"
        },
                {
          "name": "eventId",
          "type": "string",
          "doc": " Event ID associated with the ticket.\n"
        },
                {
          "name": "wixFeeConfig",
          "type": "All APIs.Events - Ticketing._wix_events_ticketing_WixFeeConfig",
          "doc": " Whether the fixed-rate service fee is applied at checkout to each ticket sold.\n",
          "readOnly": true
        },
                {
          "name": "salePeriod",
          "type": "All APIs.Events - Ticketing._wix_events_ticketing_TicketSalePeriod",
          "doc": " Ticket sale period.\n"
        },
                {
          "name": "saleStatus",
          "type": "All APIs.Events - Ticketing._wix_events_ticketing_TicketSaleStatus",
          "doc": " Ticket sale status.\n",
          "readOnly": true
        },
                {
          "name": "state",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Events - Ticketing._wix_events_ticketing_TicketDefinitionStateEnum_State"]
          },
          "doc": " Ticket state.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_google_protobuf_FieldMask",
      "displayName": "Field Mask Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "paths",
        "type":         {
          "name": "array",
          "typeParams": ["string"]
        },
        "doc": " The set of field mask paths.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_common_Paging",
      "displayName": "Paging Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "limit",
          "type": "integer",
          "doc": " Number of items to load.\n"
        },
                {
          "name": "offset",
          "type": "integer",
          "doc": " Number of items to skip in the current sort order.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_common_CursorPaging",
      "displayName": "Cursor Paging Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "limit",
          "type": "integer",
          "doc": " Number of items to load.\n"
        },
                {
          "name": "cursor",
          "type": "string",
          "doc": "\nPointer to the next or previous page in the list of results.\n\nYou can get the relevant cursor token\nfrom the `pagingMetadata` object in the previous call's response.\nNot relevant for the first request.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_common_PagingMetadataV2",
      "displayName": "Paging Metadata V 2 Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "count",
          "type": "integer",
          "doc": " Number of items returned in the response.\n"
        },
                {
          "name": "offset",
          "type": "integer",
          "doc": " Offset that was requested.\n"
        },
                {
          "name": "total",
          "type": "integer",
          "doc": " Total number of items that match the query. Returned if offset paging is used and the `tooManyToCount` flag is not set.\n"
        },
                {
          "name": "tooManyToCount",
          "type": "boolean",
          "doc": " Flag that indicates the server failed to calculate the `total` field.\n"
        },
                {
          "name": "cursors",
          "type": "All APIs.Events - Ticketing._wix_common_Cursors",
          "doc": " Cursors to navigate through the result pages using `next` and `prev`. Returned if cursor paging is used.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_common_Cursors",
      "displayName": "Cursors Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "next",
          "type": "string",
          "doc": " Cursor pointing to next page in the list of results.\n"
        },
                {
          "name": "prev",
          "type": "string",
          "doc": " Cursor pointing to previous page in the list of results.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_common_Sorting",
      "displayName": "Sorting Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "fieldName",
          "type": "string",
          "doc": " Name of the field to sort by.\n"
        },
                {
          "name": "order",
          "type": "All APIs.Events - Ticketing._wix_common_SortOrder",
          "doc": " Sort order.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_common_QueryV2",
      "displayName": "Query V 2 Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "filter",
          "type": "struct",
          "doc": "Filter object in the following format:  \n`\"filter\" : {  \n              \"fieldName1\": \"value1\",  \n              \"fieldName2\":{\"$operator\":\"value2\"}  \n  }`  \nExample of operators: `$eq`, `$ne`, `$lt`, `$lte`, `$gt`, `$gte`, `$in`, `$hasSome`, `$hasAll`, `$startsWith`, `$contains`\n"
        },
                {
          "name": "sort",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Events - Ticketing._wix_common_Sorting"]
          },
          "doc": "Sort object in the following format:  \n`[{\"fieldName\":\"sortField1\",\"order\":\"ASC\"},{\"fieldName\":\"sortField2\",\"order\":\"DESC\"}]`\n"
        },
                {
          "name": "fields",
          "type":           {
            "name": "array",
            "typeParams": ["string"]
          },
          "doc": "Array of projected fields. A list of specific field names to return. If `fieldsets` are also specified, the union of `fieldsets` and `fields` is returned.\n"
        },
                {
          "name": "fieldsets",
          "type":           {
            "name": "array",
            "typeParams": ["string"]
          },
          "doc": "Array of named, predefined sets of projected fields. A array of predefined named sets of fields to be returned. Specifying multiple `fieldsets` will return the union of fields from all sets. If `fields` are also specified, the union of `fieldsets` and `fields` is returned.\n"
        },
                {
          "name": "pagingMethod",
          "type": "All APIs.Events - Ticketing._wix_common_QueryV2_pagingMethod",
          "doc": ""
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_common_QueryV2_pagingMethod",
      "displayName": "paging Method Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "paging",
          "type": "All APIs.Events - Ticketing._wix_common_Paging",
          "doc": "Paging options to limit and skip the number of items.\n"
        },
                {
          "name": "cursorPaging",
          "type": "All APIs.Events - Ticketing._wix_common_CursorPaging",
          "doc": "Cursor token pointing to a page of results. Not used in the first request. Following requests use the cursor token and not `filter` or `sort`.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": [],
      "oneOf": true
    },
        {
      "name": "_wix_events_ticketing_QueryTicketDefinitionsRequest",
      "displayName": "Query Ticket Definitions Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "offset",
          "type": "integer",
          "doc": " Offset. See [Pagination](https://dev.wix.com/api/rest/getting-started/pagination).\n"
        },
                {
          "name": "limit",
          "type": "integer",
          "doc": " Limit. See [Pagination](https://dev.wix.com/api/rest/getting-started/pagination).\n"
        },
                {
          "name": "fieldset",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Events - Ticketing._wix_events_ticketing_TicketDefinitionFieldset"]
          },
          "doc": " Control which data is returned in the response. See [fieldsets](https://dev.wix.com/api/rest/wix-events/wix-events/fieldset#wix-events_wix-events_fieldset_ticket-definition-fieldset).\n"
        },
                {
          "name": "filter",
          "type": "struct",
          "doc": " Filter. See [supported fields and operators](https://dev.wix.com/api/rest/wix-events/wix-events/filter-and-sort#wix-events_wix-events_filter-and-sort_query-ticket-definitions).\n"
        },
                {
          "name": "sort",
          "type": "string",
          "doc": " Sort order. Defaults to: \"created:asc\".\n See [supported fields](https://dev.wix.com/api/rest/wix-events/wix-events/filter-and-sort#wix-events_wix-events_filter-and-sort_query-ticket-definitions).\n"
        },
                {
          "name": "facet",
          "type":           {
            "name": "array",
            "typeParams": ["string"]
          },
          "doc": " Filter facets to include in the response.\n See [supported facets](https://dev.wix.com/api/rest/wix-events/wix-events/filter-and-sort#wix-events_wix-events_filter-and-sort_query-ticket-definitions).\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "facetsMapEntry",
      "displayName": "facets Map Entry Object",
      "locations": [],
      "docs":       {
        "summary": "Set of key-value pairs. Filter facets.\n",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "key:value",
        "type": "All APIs.Events - Ticketing._wix_events_FacetCounts",
        "doc": "`key` of type string, `value` of type object"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_ticketing_QueryTicketDefinitionsResponse",
      "displayName": "Query Ticket Definitions Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "total",
          "type": "integer",
          "doc": " Total ticket definitions matching the given filters.\n"
        },
                {
          "name": "offset",
          "type": "integer",
          "doc": " Offset.\n"
        },
                {
          "name": "limit",
          "type": "integer",
          "doc": " Limit.\n"
        },
                {
          "name": "definitions",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Events - Ticketing._wix_events_ticketing_TicketDefinition"]
          },
          "doc": " Ticket definitions.\n"
        },
                {
          "name": "facets",
          "type": "All APIs.Events - Ticketing.facetsMapEntry",
          "doc": "Set of key-value pairs. Filter facets.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_ticketing_QueryTicketDefinitionsRequestV2",
      "displayName": "Query Ticket Definitions Request V 2 Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "query",
        "type": "All APIs.Events - Ticketing._wix_common_QueryV2",
        "doc": " Query request object.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_ticketing_QueryTicketDefinitionsResponseV2",
      "displayName": "Query Ticket Definitions Response V 2 Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "definitions",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Events - Ticketing._wix_events_ticketing_TicketDefinition"]
          },
          "doc": " Ticket definitions.\n"
        },
                {
          "name": "metadata",
          "type": "All APIs.Events - Ticketing._wix_common_PagingMetadataV2",
          "doc": " Paging metadata definitions.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_ticketing_ListTicketDefinitionsRequest",
      "displayName": "List Ticket Definitions Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "eventId",
          "type":           {
            "name": "array",
            "typeParams": ["string"]
          },
          "doc": " Event ID.\n"
        },
                {
          "name": "offset",
          "type": "integer",
          "doc": " Offset. See [Pagination](https://dev.wix.com/api/rest/getting-started/pagination).\n"
        },
                {
          "name": "limit",
          "type": "integer",
          "doc": " Limit. See [Pagination](https://dev.wix.com/api/rest/getting-started/pagination).\n"
        },
                {
          "name": "fieldset",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Events - Ticketing._wix_events_ticketing_TicketDefinitionFieldset"]
          },
          "doc": " Controls which data is returned in the response. See [Fieldsets](https://dev.wix.com/api/rest/wix-events/wix-events/fieldset#wix-events_wix-events_fieldset_ticket-definition-fieldset)\n"
        },
                {
          "name": "eventCreatorId",
          "type":           {
            "name": "array",
            "typeParams": ["string"]
          },
          "doc": " Event creator id filter, by default any.\n"
        },
                {
          "name": "state",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Events - Ticketing._wix_events_ticketing_ListTicketDefinitionsRequest_State"]
          },
          "doc": " Filters by ticket definition state.\n"
        },
                {
          "name": "sort",
          "type": "string",
          "doc": " Sort order. Defaults to: \"created:asc\".\n See [supported fields](https://dev.wix.com/api/rest/wix-events/wix-events/filter-and-sort#wix-events_wix-events_filter-and-sort_list-ticket-definitions).\n"
        },
                {
          "name": "saleStatus",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Events - Ticketing._wix_events_ticketing_TicketSaleStatus"]
          },
          "doc": " Ticket sale status.\n"
        },
                {
          "name": "facet",
          "type":           {
            "name": "array",
            "typeParams": ["string"]
          },
          "doc": " Filter facets to include in the response.\n See [supported facets](https://dev.wix.com/api/rest/wix-events/wix-events/filter-and-sort#wix-events_wix-events_filter-and-sort_list-ticket-definitions).\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "facetsMapEntry",
      "displayName": "facets Map Entry Object",
      "locations": [],
      "docs":       {
        "summary": "Set of key-value pairs. Filter facets.\n",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "key:value",
        "type": "All APIs.Events - Ticketing._wix_events_FacetCounts",
        "doc": "`key` of type string, `value` of type object"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_ticketing_ListTicketDefinitionsResponse",
      "displayName": "List Ticket Definitions Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "metaData",
          "type": "All APIs.Events - Ticketing._wix_events_ResponseMetaData",
          "doc": " Meta data.\n"
        },
                {
          "name": "definitions",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Events - Ticketing._wix_events_ticketing_TicketDefinition"]
          },
          "doc": " Ticket definitions.\n"
        },
                {
          "name": "facets",
          "type": "All APIs.Events - Ticketing.facetsMapEntry",
          "doc": "Set of key-value pairs. Filter facets.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_ticketing_TicketDefinitionData",
      "displayName": "Ticket Definition Data Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "name",
          "type": "string",
          "doc": " Ticket name.\n"
        },
                {
          "name": "price",
          "type": "All APIs.Events - Ticketing._wix_events_Money",
          "doc": " Ticket price.\n"
        },
                {
          "name": "description",
          "type": "string",
          "doc": " Ticket description.\n"
        },
                {
          "name": "limited",
          "type": "boolean",
          "doc": " Whether this ticket type is limited in quantity.\n"
        },
                {
          "name": "quantity",
          "type": "integer",
          "doc": " Limit of tickets available for this type.\n NULL = unlimited.\n"
        },
                {
          "name": "orderIndex",
          "type": "integer",
          "doc": " Custom sort index for manual tickets ordering implementation.\n"
        },
                {
          "name": "policy",
          "type": "string",
          "doc": " Policy information in plain text (as listed on the ticket).\n"
        },
                {
          "name": "hidden",
          "type": "boolean",
          "doc": " Ticket is not visible to customers and cannot be purchased.\n"
        },
                {
          "name": "wixFeeConfig",
          "type": "All APIs.Events - Ticketing._wix_events_ticketing_WixFeeConfig",
          "doc": " Configuration of the fixed-rate Wix service fee that is applied to each ticket sold.\n Defaults to: FEE_ADDED_AT_CHECKOUT.\n"
        },
                {
          "name": "salePeriod",
          "type": "All APIs.Events - Ticketing._wix_events_ticketing_TicketSalePeriod",
          "doc": " Ticket sale period.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_ticketing_GetTicketDefinitionRequest",
      "displayName": "Get Ticket Definition Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "definitionId",
          "type": "string",
          "doc": " Ticket definition ID.\n"
        },
                {
          "name": "fieldset",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Events - Ticketing._wix_events_ticketing_TicketDefinitionFieldset"]
          },
          "doc": " Control which data is returned in the response. See [Fieldsets](https://dev.wix.com/api/rest/wix-events/wix-events/fieldset#wix-events_wix-events_fieldset_ticket-definition-fieldset)\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_ticketing_GetTicketDefinitionResponse",
      "displayName": "Get Ticket Definition Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "definition",
        "type": "All APIs.Events - Ticketing._wix_events_ticketing_TicketDefinition",
        "doc": " Ticket definition.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_ticketing_CreateTicketDefinitionRequest",
      "displayName": "Create Ticket Definition Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "eventId",
          "type": "string",
          "doc": " Event ID.\n"
        },
                {
          "name": "definition",
          "type": "All APIs.Events - Ticketing._wix_events_ticketing_TicketDefinitionData",
          "doc": "Ticket definition data.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_ticketing_CreateTicketDefinitionResponse",
      "displayName": "Create Ticket Definition Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "definition",
        "type": "All APIs.Events - Ticketing._wix_events_ticketing_TicketDefinition",
        "doc": " Created ticket definition.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_ticketing_UpdateTicketDefinitionRequest",
      "displayName": "Update Ticket Definition Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "eventId",
          "type": "string",
          "doc": " Event ID.\n"
        },
                {
          "name": "definitionId",
          "type": "string",
          "doc": " Ticket definition ID.\n"
        },
                {
          "name": "definition",
          "type": "All APIs.Events - Ticketing._wix_events_ticketing_TicketDefinitionData",
          "doc": "Ticket definition data.\n"
        },
                {
          "name": "fields",
          "type": "All APIs.Events - Ticketing._google_protobuf_FieldMask",
          "doc": " Set of field paths, specifying which parts of ticket definition to update.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_ticketing_UpdateTicketDefinitionResponse",
      "displayName": "Update Ticket Definition Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "definition",
        "type": "All APIs.Events - Ticketing._wix_events_ticketing_TicketDefinition",
        "doc": " Updated ticket definition.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_ticketing_DeleteTicketDefinitionRequest_ById",
      "displayName": "By Id Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "definitionId",
        "type":         {
          "name": "array",
          "typeParams": ["string"]
        },
        "doc": " Ticket definition IDs.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_ticketing_DeleteTicketDefinitionRequest",
      "displayName": "Delete Ticket Definition Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "eventId",
          "type": "string",
          "doc": " Event ID.\n"
        },
                {
          "name": "delete",
          "type": "All APIs.Events - Ticketing._wix_events_ticketing_DeleteTicketDefinitionRequest_delete",
          "doc": ""
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_ticketing_DeleteTicketDefinitionRequest_delete",
      "displayName": "delete Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "byId",
          "type": "All APIs.Events - Ticketing._wix_events_ticketing_DeleteTicketDefinitionRequest_ById",
          "doc": " Delete definitions by ID.\n"
        },
                {
          "name": "all",
          "type": "boolean",
          "doc": " Whether to delete all event tickets.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": [],
      "oneOf": true
    },
        {
      "name": "_wix_events_ticketing_DeleteTicketDefinitionResponse",
      "displayName": "Delete Ticket Definition Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_ticketing_ChangeCurrencyRequest",
      "displayName": "Change Currency Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "eventId",
          "type": "string",
          "doc": " Event ID.\n"
        },
                {
          "name": "currency",
          "type": "string",
          "doc": " Event currency.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_ticketing_ChangeCurrencyResponse",
      "displayName": "Change Currency Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_ticketing_GetCheckoutOptionsRequest",
      "displayName": "Get Checkout Options Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_ticketing_GetCheckoutOptionsResponse",
      "displayName": "Get Checkout Options Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "paymentMethodConfigured",
          "type": "boolean",
          "doc": " Whether any payment method is configured and available for payment.\n"
        },
                {
          "name": "acceptCoupons",
          "type": "boolean",
          "doc": " Whether coupons are accepted at checkout.\n"
        },
                {
          "name": "premiumServices",
          "type": "boolean",
          "doc": " Whether premium services are enabled. Enabled for free if site does not sell any paid tickets. Selling tickets for a fee requires a premium feature \"events_sell_tickets\".\n"
        },
                {
          "name": "paidTickets",
          "type": "boolean",
          "doc": " Whether there are any paid tickets available for sale.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_ticketing_ListAvailableTicketsRequest",
      "displayName": "List Available Tickets Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "eventId",
          "type": "string",
          "doc": " Event ID. If not provided, available tickets for all events in the site will be returned.\n"
        },
                {
          "name": "offset",
          "type": "integer",
          "doc": " Offset.\n"
        },
                {
          "name": "limit",
          "type": "integer",
          "doc": " Limit.\n"
        },
                {
          "name": "sort",
          "type": "string",
          "doc": " Sort order, defaults to \"created:asc\".\n See [supported fields](https://dev.wix.com/api/rest/wix-events/wix-events/filter-and-sort#wix-events_wix-events_filter-and-sort_list-query-available-tickets).\n"
        },
                {
          "name": "state",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Events - Ticketing._wix_events_ticketing_TicketDefinitionStateEnum_State"]
          },
          "doc": ""
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_ticketing_ListAvailableTicketsResponse",
      "displayName": "List Available Tickets Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "metaData",
          "type": "All APIs.Events - Ticketing._wix_events_ResponseMetaData",
          "doc": " Ticket definitions meta data.\n"
        },
                {
          "name": "definitions",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Events - Ticketing._wix_events_ticketing_TicketDefinition"]
          },
          "doc": " Ticket definitions.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_ticketing_QueryAvailableTicketsRequest",
      "displayName": "Query Available Tickets Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "offset",
          "type": "integer",
          "doc": " Offset.\n"
        },
                {
          "name": "limit",
          "type": "integer",
          "doc": " Limit.\n"
        },
                {
          "name": "filter",
          "type": "struct",
          "doc": " Ticket definition.\n See [supported fields and operators](https://dev.wix.com/api/rest/wix-events/wix-events/filter-and-sort#wix-events_wix-events_filter-and-sort_list-query-available-tickets).\n"
        },
                {
          "name": "fieldset",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Events - Ticketing._wix_events_ticketing_TicketDefinitionFieldset"]
          },
          "doc": ""
        },
                {
          "name": "sort",
          "type": "string",
          "doc": " Sort order, defaults to \"created:asc\".\n See [supported fields](https://dev.wix.com/api/rest/wix-events/wix-events/filter-and-sort#wix-events_wix-events_filter-and-sort_list-query-available-tickets).\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_ticketing_QueryAvailableTicketsResponse",
      "displayName": "Query Available Tickets Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "metaData",
          "type": "All APIs.Events - Ticketing._wix_events_ResponseMetaData",
          "doc": " Ticket definitions meta data.\n"
        },
                {
          "name": "definitions",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Events - Ticketing._wix_events_ticketing_TicketDefinition"]
          },
          "doc": " Ticket definitions.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_ticketing_TicketReservationQuantity",
      "displayName": "Ticket Reservation Quantity Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "ticketDefinitionId",
          "type": "string",
          "doc": " Ticket definition ID.\n"
        },
                {
          "name": "quantity",
          "type": "integer",
          "doc": " Quantity of tickets to reserve.\n"
        },
                {
          "name": "priceOverride",
          "type": "string",
          "doc": " Ticket price to charge - overriding the ticket price.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_ticketing_CreateReservationRequest",
      "displayName": "Create Reservation Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "eventId",
          "type": "string",
          "doc": " Event ID.\n"
        },
                {
          "name": "ticketQuantities",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Events - Ticketing._wix_events_ticketing_TicketReservationQuantity"]
          },
          "doc": " Tickets to reserve.\n"
        },
                {
          "name": "ignoreLimits",
          "type": "boolean",
          "doc": " Whether to ignore the available ticket limits upon reservation.\n"
        },
                {
          "name": "allowHiddenTickets",
          "type": "boolean",
          "doc": " Whether to allow reservation for hidden tickets.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_ticketing_TicketReservation",
      "displayName": "Ticket Reservation Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "quantity",
          "type": "integer",
          "doc": " Quantity of reserved tickets.\n"
        },
                {
          "name": "ticket",
          "type": "All APIs.Events - Ticketing._wix_events_ticketing_TicketDefinition",
          "doc": ""
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_ticketing_CreateReservationResponse",
      "displayName": "Create Reservation Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "id",
          "type": "string",
          "doc": " Reservation ID.\n"
        },
                {
          "name": "expires",
          "type": "string",
          "doc": " Reservation expiration timestamp.\n"
        },
                {
          "name": "reservations",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Events - Ticketing._wix_events_ticketing_TicketReservation"]
          },
          "doc": " Ticket reservations.\n"
        },
                {
          "name": "invoice",
          "type": "All APIs.Events - Ticketing._wix_events_ticketing_Invoice",
          "doc": " Reservation invoice.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_ticketing_CancelReservationRequest",
      "displayName": "Cancel Reservation Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "eventId",
          "type": "string",
          "doc": " Event ID.\n"
        },
                {
          "name": "id",
          "type": "string",
          "doc": " Reservation ID.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_ticketing_CancelReservationResponse",
      "displayName": "Cancel Reservation Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_ticketing_DiscountRequest",
      "displayName": "Discount Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "couponCode",
        "type": "string",
        "doc": " Discount coupon code.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_ticketing_DiscountErrors_Error",
      "displayName": "Error Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "code",
        "type": "string",
        "doc": ""
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_ticketing_DiscountErrors",
      "displayName": "Discount Errors Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "error",
        "type":         {
          "name": "array",
          "typeParams": ["All APIs.Events - Ticketing._wix_events_ticketing_DiscountErrors_Error"]
        },
        "doc": " Error.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_ticketing_GetInvoiceRequest",
      "displayName": "Get Invoice Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "eventId",
          "type": "string",
          "doc": " Event ID.\n"
        },
                {
          "name": "reservationId",
          "type": "string",
          "doc": " Reservation ID.\n"
        },
                {
          "name": "withDiscount",
          "type": "All APIs.Events - Ticketing._wix_events_ticketing_DiscountRequest",
          "doc": " Optional discount to be applied on the returned invoice.\n"
        },
                {
          "name": "paidPlanBenefit",
          "type": "All APIs.Events - Ticketing._wix_events_ticketing_PaidPlanBenefit",
          "doc": " Optional benefit granted by the pricing plan to be applied on the returned invoice.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_ticketing_GetInvoiceResponse",
      "displayName": "Get Invoice Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "invoice",
          "type": "All APIs.Events - Ticketing._wix_events_ticketing_Invoice",
          "doc": " Invoice with applied discount.\n"
        },
                {
          "name": "discountErrors",
          "type": "All APIs.Events - Ticketing._wix_events_ticketing_DiscountErrors",
          "doc": " Discount errors, if relevant.\n"
        },
                {
          "name": "expires",
          "type": "string",
          "doc": " Time when the reservation expires.\n"
        },
                {
          "name": "reservationStatus",
          "type": "All APIs.Events - Ticketing._wix_events_ticketing_ReservationStatus",
          "doc": " Reservation status.\n"
        },
                {
          "name": "reservationOccupied",
          "type": "boolean",
          "doc": " Whether this reservation is already used in checkout.\n"
        },
                {
          "name": "reservations",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Events - Ticketing._wix_events_ticketing_TicketReservation"]
          },
          "doc": " Ticket reservations.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_ticketing_Buyer",
      "displayName": "Buyer Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "firstName",
          "type": "string",
          "doc": " Buyer first name.\n"
        },
                {
          "name": "lastName",
          "type": "string",
          "doc": " Buyer last name.\n"
        },
                {
          "name": "email",
          "type": "string",
          "doc": " Buyer email.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_ticketing_Guest",
      "displayName": "Guest Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "form",
        "type": "All APIs.Events - Ticketing._wix_events_FormResponse",
        "doc": " Specific guest info.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_ticketing_PaidPlanBenefit",
      "displayName": "Paid Plan Benefit Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "planOrderId",
          "type": "string",
          "doc": " Pricing plan ID.\n"
        },
                {
          "name": "benefitId",
          "type": "string",
          "doc": " Pricing plan benefit ID.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_ticketing_CheckoutRequest",
      "displayName": "Checkout Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "eventId",
          "type": "string",
          "doc": " Event ID.\n"
        },
                {
          "name": "reservationId",
          "type": "string",
          "doc": " Ticket reservation ID.\n"
        },
                {
          "name": "memberId",
          "type": "string",
          "doc": " Member ID (if empty - no site member is associated to this order).\n"
        },
                {
          "name": "discount",
          "type": "All APIs.Events - Ticketing._wix_events_ticketing_DiscountRequest",
          "doc": " Discount to apply on the invoice.\n"
        },
                {
          "name": "buyer",
          "type": "All APIs.Events - Ticketing._wix_events_ticketing_Buyer",
          "doc": " Buyer details.\n"
        },
                {
          "name": "guests",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Events - Ticketing._wix_events_ticketing_Guest"]
          },
          "doc": " Guest details.\n"
        },
                {
          "name": "paidPlanBenefit",
          "type": "All APIs.Events - Ticketing._wix_events_ticketing_PaidPlanBenefit",
          "doc": " Benefit granted by the pricing plan.\n"
        },
                {
          "name": "options",
          "type": "All APIs.Events - Ticketing._wix_events_ticketing_CheckoutOptions",
          "doc": " Options controlling the checkout process.\n"
        },
                {
          "name": "policyAgreementToken",
          "type": "string",
          "doc": " Policy agreement token. Required when the event has one or more policies.\n Token must match with the token from [GetTokens](https://dev.wix.com/api/rest/wix-events/wix-events/policy/get-tokens) response.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_ticketing_CheckoutOptions",
      "displayName": "Checkout Options Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "silent",
          "type": "boolean",
          "doc": " Whether to ignore settings to notify contacts or users.\n"
        },
                {
          "name": "payInPerson",
          "type": "boolean",
          "doc": " Whether the payment is to be done in person between the buyer and the merchant. When true, the completed order is created with status OFFLINE_PENDING and inPerson payment method.\n"
        },
                {
          "name": "ignoreFormValidation",
          "type": "boolean",
          "doc": " Whether to ignore form validation.\n"
        },
                {
          "name": "ignorePoliciesAgreement",
          "type": "boolean",
          "doc": " Whether to ignore the policies agreement.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_ticketing_CheckoutResponse",
      "displayName": "Checkout Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "order",
          "type": "All APIs.Events - Ticketing._wix_events_ticketing_Order",
          "doc": " Created order.\n"
        },
                {
          "name": "expires",
          "type": "string",
          "doc": " Time when the order expires, applies to orders with status = INITIATED.\n"
        },
                {
          "name": "reservations",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Events - Ticketing._wix_events_ticketing_TicketReservation"]
          },
          "doc": " Ticket reservations.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_ticketing_UpdateCheckoutRequest",
      "displayName": "Update Checkout Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "eventId",
          "type": "string",
          "doc": " Event ID.\n"
        },
                {
          "name": "orderNumber",
          "type": "string",
          "doc": " Unique order number.\n"
        },
                {
          "name": "buyer",
          "type": "All APIs.Events - Ticketing._wix_events_ticketing_Buyer",
          "doc": " Buyer details.\n"
        },
                {
          "name": "guests",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Events - Ticketing._wix_events_ticketing_Guest"]
          },
          "doc": " Guest details.\n"
        },
                {
          "name": "memberId",
          "type": "string",
          "doc": " Member ID (if empty - no site member is associated to this order).\n"
        },
                {
          "name": "discount",
          "type": "All APIs.Events - Ticketing._wix_events_ticketing_DiscountRequest",
          "doc": " Discount to apply on the invoice.\n"
        },
                {
          "name": "paidPlanBenefit",
          "type": "All APIs.Events - Ticketing._wix_events_ticketing_PaidPlanBenefit",
          "doc": " Benefit granted by the pricing plan.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_ticketing_UpdateCheckoutResponse",
      "displayName": "Update Checkout Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "order",
        "type": "All APIs.Events - Ticketing._wix_events_ticketing_Order",
        "doc": " Updated order.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_ticketing_PosCheckoutRequest",
      "displayName": "Pos Checkout Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "eventId",
          "type": "string",
          "doc": " Event ID.\n"
        },
                {
          "name": "reservationId",
          "type": "string",
          "doc": " Ticket reservation ID.\n"
        },
                {
          "name": "paymentDetailsId",
          "type": "string",
          "doc": " Payment details ID.\n Not required if reservation total is 0. In this case the order will be created with status Free and no payment.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_ticketing_PosCheckoutResponse",
      "displayName": "Pos Checkout Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "order",
          "type": "All APIs.Events - Ticketing._wix_events_ticketing_Order",
          "doc": " Created order.\n"
        },
                {
          "name": "expires",
          "type": "string",
          "doc": " Time when the order expires, applies to orders with status = INITIATED.\n"
        },
                {
          "name": "reservations",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Events - Ticketing._wix_events_ticketing_TicketReservation"]
          },
          "doc": " Ticket reservations.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_CalendarLinks",
      "displayName": "Calendar Links Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "google",
          "type": "string",
          "doc": " \"Add to Google calendar\" URL.\n"
        },
                {
          "name": "ics",
          "type": "string",
          "doc": " \"Download ICS calendar file\" URL.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "headersMapEntry",
      "displayName": "headers Map Entry Object",
      "locations": [],
      "docs":       {
        "summary": "Set of key-value pairs.",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "key:value",
        "type": "string",
        "doc": "`key` of type string, `value` of type string"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_rest_RawHttpResponse",
      "displayName": "Raw Http Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "body",
          "type": "string",
          "doc": ""
        },
                {
          "name": "statusCode",
          "type": "integer",
          "doc": ""
        },
                {
          "name": "headers",
          "type": "All APIs.Events - Ticketing.headersMapEntry",
          "doc": "Set of key-value pairs."
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_ticketing_ListOrdersRequest",
      "displayName": "List Orders Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "offset",
          "type": "integer",
          "doc": " Offset.\n"
        },
                {
          "name": "limit",
          "type": "integer",
          "doc": " Limit.\n"
        },
                {
          "name": "fieldset",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Events - Ticketing._wix_events_ticketing_OrderFieldset"]
          },
          "doc": " Controls which data is returned. See [Fieldset](https://dev.wix.com/api/rest/wix-events/wix-events/fieldset#wix-events_wix-events_fieldset_order-fieldset).\n"
        },
                {
          "name": "status",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Events - Ticketing._wix_events_ticketing_OrderStatus"]
          },
          "doc": " Status.\n"
        },
                {
          "name": "eventId",
          "type":           {
            "name": "array",
            "typeParams": ["string"]
          },
          "doc": " Event ID.\n"
        },
                {
          "name": "orderNumber",
          "type":           {
            "name": "array",
            "typeParams": ["string"]
          },
          "doc": " Order number.\n"
        },
                {
          "name": "memberId",
          "type":           {
            "name": "array",
            "typeParams": ["string"]
          },
          "doc": " Site member ID.\n"
        },
                {
          "name": "facet",
          "type":           {
            "name": "array",
            "typeParams": ["string"]
          },
          "doc": " Field facets.\n See [supported facets](https://dev.wix.com/api/rest/wix-events/wix-events/filter-and-sort#wix-events_wix-events_filter-and-sort_list-orders).\n"
        },
                {
          "name": "searchPhrase",
          "type": "string",
          "doc": " Textual search filter - search is performed on \"full_name\", \"email\" and \"order_number\".\n"
        },
                {
          "name": "eventCreatorId",
          "type":           {
            "name": "array",
            "typeParams": ["string"]
          },
          "doc": " Event creator ID.\n"
        },
                {
          "name": "sort",
          "type": "string",
          "doc": " Sort order. Defaults to \"created:asc\".\n See [supported fields](https://dev.wix.com/api/rest/wix-events/wix-events/filter-and-sort#wix-events_wix-events_filter-and-sort_list-orders).\n"
        },
                {
          "name": "tag",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Events - Ticketing._wix_events_ticketing_OrderTag"]
          },
          "doc": " Order tag.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_ticketing_OrderFacetCounts_Counts",
      "displayName": "Counts Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "count",
          "type": "integer",
          "doc": " Number or orders\n"
        },
                {
          "name": "tickets",
          "type": "integer",
          "doc": " Number of tickets within orders\n"
        },
                {
          "name": "ticketsCheckIn",
          "type": "integer",
          "doc": " Number of tickets with check-in\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "countsMapEntry",
      "displayName": "counts Map Entry Object",
      "locations": [],
      "docs":       {
        "summary": "Set of key-value pairs. Facet counts aggregated per value\n",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "key:value",
        "type": "All APIs.Events - Ticketing._wix_events_ticketing_OrderFacetCounts_Counts",
        "doc": "`key` of type string, `value` of type object"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_ticketing_OrderFacetCounts",
      "displayName": "Order Facet Counts Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "counts",
        "type": "All APIs.Events - Ticketing.countsMapEntry",
        "doc": "Set of key-value pairs. Facet counts aggregated per value\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "facetsMapEntry",
      "displayName": "facets Map Entry Object",
      "locations": [],
      "docs":       {
        "summary": "Set of key-value pairs. Filter facets.\n",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "key:value",
        "type": "All APIs.Events - Ticketing._wix_events_ticketing_OrderFacetCounts",
        "doc": "`key` of type string, `value` of type object"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_ticketing_OrderFacets",
      "displayName": "Order Facets Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "facets",
        "type": "All APIs.Events - Ticketing.facetsMapEntry",
        "doc": "Set of key-value pairs. Filter facets.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "facetsMapEntry",
      "displayName": "facets Map Entry Object",
      "locations": [],
      "docs":       {
        "summary": "Set of key-value pairs. Filter facets.\n",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "key:value",
        "type": "All APIs.Events - Ticketing._wix_events_FacetCounts",
        "doc": "`key` of type string, `value` of type object"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_ticketing_ListOrdersResponse",
      "displayName": "List Orders Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "total",
          "type": "integer",
          "doc": " Total orders matching the given filters.\n"
        },
                {
          "name": "offset",
          "type": "integer",
          "doc": " Offset.\n"
        },
                {
          "name": "limit",
          "type": "integer",
          "doc": " Limit.\n"
        },
                {
          "name": "orders",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Events - Ticketing._wix_events_ticketing_Order"]
          },
          "doc": " Orders.\n"
        },
                {
          "name": "facets",
          "type": "All APIs.Events - Ticketing.facetsMapEntry",
          "doc": "Set of key-value pairs. Filter facets.\n"
        },
                {
          "name": "searchMetaData",
          "type": "All APIs.Events - Ticketing._wix_events_SearchMetaData",
          "doc": " Meta data of search results.\n"
        },
                {
          "name": "orderFacets",
          "type": "All APIs.Events - Ticketing._wix_events_ticketing_OrderFacets",
          "doc": " Order data enriched facets.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_ticketing_GetOrderRequest",
      "displayName": "Get Order Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "eventId",
          "type": "string",
          "doc": " Event ID.\n"
        },
                {
          "name": "orderNumber",
          "type": "string",
          "doc": " Unique order number.\n"
        },
                {
          "name": "fieldset",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Events - Ticketing._wix_events_ticketing_OrderFieldset"]
          },
          "doc": " Controls which data is returned. See [Fieldset](https://dev.wix.com/api/rest/wix-events/wix-events/fieldset#wix-events_wix-events_fieldset_order-fieldset).\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_ticketing_GetOrderResponse",
      "displayName": "Get Order Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "order",
          "type": "All APIs.Events - Ticketing._wix_events_ticketing_Order",
          "doc": " Requested order.\n"
        },
                {
          "name": "calendarLinks",
          "type": "All APIs.Events - Ticketing._wix_events_CalendarLinks",
          "doc": " \"Add to calendar\" links.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_ticketing_UpdateOrderRequest",
      "displayName": "Update Order Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "eventId",
          "type": "string",
          "doc": " Event ID.\n"
        },
                {
          "name": "orderNumber",
          "type": "string",
          "doc": " Unique order number.\n"
        },
                {
          "name": "fields",
          "type": "All APIs.Events - Ticketing._google_protobuf_FieldMask",
          "doc": " Set of field paths to update.\n"
        },
                {
          "name": "checkoutForm",
          "type": "All APIs.Events - Ticketing._wix_events_FormResponse",
          "doc": " Checkout form.\n"
        },
                {
          "name": "archived",
          "type": "boolean",
          "doc": " Whether order is archived.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_ticketing_UpdateOrderResponse",
      "displayName": "Update Order Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "order",
        "type": "All APIs.Events - Ticketing._wix_events_ticketing_Order",
        "doc": " Updated order.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_ticketing_BulkUpdateOrdersRequest",
      "displayName": "Bulk Update Orders Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "eventId",
          "type": "string",
          "doc": " Event ID.\n"
        },
                {
          "name": "orderNumber",
          "type":           {
            "name": "array",
            "typeParams": ["string"]
          },
          "doc": ""
        },
                {
          "name": "fields",
          "type": "All APIs.Events - Ticketing._google_protobuf_FieldMask",
          "doc": " Set of fields to update.\n"
        },
                {
          "name": "archived",
          "type": "boolean",
          "doc": " Whether to archive the order.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_ticketing_BulkUpdateOrdersResponse",
      "displayName": "Bulk Update Orders Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "orders",
        "type":         {
          "name": "array",
          "typeParams": ["All APIs.Events - Ticketing._wix_events_ticketing_Order"]
        },
        "doc": " Updated orders.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_ticketing_ConfirmOrderRequest",
      "displayName": "Confirm Order Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "eventId",
          "type": "string",
          "doc": " Event ID.\n"
        },
                {
          "name": "orderNumber",
          "type":           {
            "name": "array",
            "typeParams": ["string"]
          },
          "doc": " Order numbers.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_ticketing_ConfirmOrderResponse",
      "displayName": "Confirm Order Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "orders",
        "type":         {
          "name": "array",
          "typeParams": ["All APIs.Events - Ticketing._wix_events_ticketing_Order"]
        },
        "doc": " Confirmed orders.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_ticketing_GetSummaryRequest",
      "displayName": "Get Summary Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "eventId",
        "type": "string",
        "doc": " Event ID.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_ticketing_GetSummaryResponse",
      "displayName": "Get Summary Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "sales",
        "type":         {
          "name": "array",
          "typeParams": ["All APIs.Events - Ticketing._wix_events_ticketing_TicketSales"]
        },
        "doc": " Ticket sales grouped by currency.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_ticketing_TicketSales",
      "displayName": "Ticket Sales Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "total",
          "type": "All APIs.Events - Ticketing._wix_events_Money",
          "doc": " Total balance of confirmed transactions.\n"
        },
                {
          "name": "totalOrders",
          "type": "integer",
          "doc": " Total number of confirmed orders.\n"
        },
                {
          "name": "totalTickets",
          "type": "integer",
          "doc": " Total number of tickets purchased.\n"
        },
                {
          "name": "revenue",
          "type": "All APIs.Events - Ticketing._wix_events_Money",
          "doc": " Total revenue, excluding fees (taxes and payment provider fees are not deducted).\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_ticketing_GetInvoicePreviewRequest",
      "displayName": "Get Invoice Preview Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "eventId",
          "type": "string",
          "doc": " Event ID.\n"
        },
                {
          "name": "orderNumber",
          "type": "string",
          "doc": " Order number.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_ticketing_GetPaymentInfoRequest",
      "displayName": "Get Payment Info Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "eventId",
          "type": "string",
          "doc": " Event ID.\n"
        },
                {
          "name": "orderNumber",
          "type": "string",
          "doc": " Order number.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_ticketing_GetPaymentInfoResponse",
      "displayName": "Get Payment Info Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "transactions",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Events - Ticketing._wix_events_ticketing_PaymentTransactionSummary"]
          },
          "doc": ""
        },
                {
          "name": "status",
          "type": "string",
          "doc": ""
        },
                {
          "name": "transactionId",
          "type": "string",
          "doc": "",
          "readOnly": true
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_ticketing_PaymentTransactionSummary",
      "displayName": "Payment Transaction Summary Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "transactionId",
          "type": "string",
          "doc": " Wix Payments transaction id\n",
          "readOnly": true
        },
                {
          "name": "finalTransactionStatus",
          "type": "string",
          "doc": " Final transaction status\n",
          "readOnly": true
        },
                {
          "name": "events",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Events - Ticketing._wix_events_ticketing_PaymentTransactionEvent"]
          },
          "doc": " Transaction events\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_ticketing_PaymentTransactionEvent",
      "displayName": "Payment Transaction Event Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "snapshotId",
          "type": "string",
          "doc": " Order snapshot id\n",
          "readOnly": true
        },
                {
          "name": "transactionStatus",
          "type": "string",
          "doc": " Transaction status\n",
          "readOnly": true
        },
                {
          "name": "paymentMethod",
          "type": "string",
          "doc": " Transaction Payment method e.g., \"payPal\", \"creditCard\", etc.\n",
          "readOnly": true
        },
                {
          "name": "paymentAmount",
          "type": "All APIs.Events - Ticketing._wix_events_Money",
          "doc": " Transaction payment amount\n",
          "readOnly": true
        },
                {
          "name": "createdDate",
          "type": "string",
          "doc": " Crated date\n",
          "readOnly": true
        },
                {
          "name": "reasonCode",
          "type": "string",
          "doc": " Reason code\n",
          "readOnly": true
        },
                {
          "name": "refundedAmount",
          "type": "All APIs.Events - Ticketing._wix_events_Money",
          "doc": " Refunded amount\n",
          "readOnly": true
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_ticketing_ListTicketsRequest",
      "displayName": "List Tickets Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "eventId",
          "type":           {
            "name": "array",
            "typeParams": ["string"]
          },
          "doc": " Event ID.\n"
        },
                {
          "name": "offset",
          "type": "integer",
          "doc": " Offset. See [Pagination](https://dev.wix.com/api/rest/getting-started/pagination).\n"
        },
                {
          "name": "limit",
          "type": "integer",
          "doc": " Number of items to load per page. See [Pagination](https://dev.wix.com/api/rest/getting-started/pagination).\n"
        },
                {
          "name": "orderNumber",
          "type":           {
            "name": "array",
            "typeParams": ["string"]
          },
          "doc": " Order numbers.\n"
        },
                {
          "name": "ticketNumber",
          "type":           {
            "name": "array",
            "typeParams": ["string"]
          },
          "doc": " Ticket numbers.\n"
        },
                {
          "name": "searchPhrase",
          "type": "string",
          "doc": " Textual search filter - search is performed on \"orderFullName\", \"guestFullName\", and \"ticketNumber\".\n"
        },
                {
          "name": "orderStatus",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Events - Ticketing._wix_events_ticketing_OrderStatus"]
          },
          "doc": " Order status.\n"
        },
                {
          "name": "fieldset",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Events - Ticketing._wix_events_ticketing_TicketFieldset"]
          },
          "doc": " Control which data is returned in response. See [Fieldsets](https://dev.wix.com/api/rest/wix-events/wix-events/fieldset#wix-events_wix-events_fieldset_ticket-fieldset).\n"
        },
                {
          "name": "state",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Events - Ticketing._wix_events_ticketing_ListTicketsRequest_State"]
          },
          "doc": " Ticket state.\n"
        },
                {
          "name": "memberId",
          "type":           {
            "name": "array",
            "typeParams": ["string"]
          },
          "doc": " Site member ID.\n"
        },
                {
          "name": "facet",
          "type":           {
            "name": "array",
            "typeParams": ["string"]
          },
          "doc": " Filter facets.\n See [supported facets](https://dev.wix.com/api/rest/wix-events/wix-events/filter-and-sort#wix-events_wix-events_filter-and-sort_list-tickets).\n"
        },
                {
          "name": "sort",
          "type": "string",
          "doc": " Sort order. Defaults to \"ticket_number:asc\".\n See [supported fields](https://dev.wix.com/api/rest/wix-events/wix-events/filter-and-sort#wix-events_wix-events_filter-and-sort_list-tickets).\n"
        },
                {
          "name": "contactId",
          "type":           {
            "name": "array",
            "typeParams": ["string"]
          },
          "doc": " Guest contact ID.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "facetsMapEntry",
      "displayName": "facets Map Entry Object",
      "locations": [],
      "docs":       {
        "summary": "Set of key-value pairs. Facets.\n",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "key:value",
        "type": "All APIs.Events - Ticketing._wix_events_FacetCounts",
        "doc": "`key` of type string, `value` of type object"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_ticketing_ListTicketsResponse",
      "displayName": "List Tickets Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "total",
          "type": "integer",
          "doc": " Total tickets matching the given filters.\n"
        },
                {
          "name": "offset",
          "type": "integer",
          "doc": " Offset.\n"
        },
                {
          "name": "limit",
          "type": "integer",
          "doc": " Limit.\n"
        },
                {
          "name": "tickets",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Events - Ticketing._wix_events_ticketing_Ticket"]
          },
          "doc": " Tickets.\n"
        },
                {
          "name": "facets",
          "type": "All APIs.Events - Ticketing.facetsMapEntry",
          "doc": "Set of key-value pairs. Facets.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_ticketing_GetTicketRequest",
      "displayName": "Get Ticket Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "eventId",
          "type": "string",
          "doc": " Event ID.\n"
        },
                {
          "name": "ticketNumber",
          "type": "string",
          "doc": " Unique ticket number.\n"
        },
                {
          "name": "fieldset",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Events - Ticketing._wix_events_ticketing_TicketFieldset"]
          },
          "doc": " Control which data is returned in response. See [Fieldsets](https://dev.wix.com/api/rest/wix-events/wix-events/fieldset#wix-events_wix-events_fieldset_ticket-fieldset).\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_ticketing_GetTicketResponse",
      "displayName": "Get Ticket Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "ticket",
        "type": "All APIs.Events - Ticketing._wix_events_ticketing_Ticket",
        "doc": " Ticket.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_ticketing_CheckInTicketRequest",
      "displayName": "Check In Ticket Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "eventId",
          "type": "string",
          "doc": " Event ID.\n"
        },
                {
          "name": "ticketNumber",
          "type":           {
            "name": "array",
            "typeParams": ["string"]
          },
          "doc": " Tickets to check-in.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_ticketing_CheckInTicketResponse",
      "displayName": "Check In Ticket Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "tickets",
        "type":         {
          "name": "array",
          "typeParams": ["All APIs.Events - Ticketing._wix_events_ticketing_Ticket"]
        },
        "doc": " Updated tickets.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_ticketing_DeleteTicketCheckInRequest",
      "displayName": "Delete Ticket Check In Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "eventId",
          "type": "string",
          "doc": " Event ID.\n"
        },
                {
          "name": "ticketNumber",
          "type":           {
            "name": "array",
            "typeParams": ["string"]
          },
          "doc": " Tickets to to delete check-in.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_ticketing_DeleteTicketCheckInResponse",
      "displayName": "Delete Ticket Check In Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "tickets",
        "type":         {
          "name": "array",
          "typeParams": ["All APIs.Events - Ticketing._wix_events_ticketing_Ticket"]
        },
        "doc": " Updated tickets.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_ticketing_UpdateTicketRequest_GuestDetailsUpdate",
      "displayName": "Guest Details Update Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "form",
        "type": "All APIs.Events - Ticketing._wix_events_FormResponse",
        "doc": " Assigned guest form.\n To update non-assigned guest form, use [Update Order](https://dev.wix.com/api/rest/wix-events/wix-events/order/update-order).\n\n Does not support partial updates - entire form object will be replaced when `guestDetails.form` is masked.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_ticketing_UpdateTicketRequest",
      "displayName": "Update Ticket Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "eventId",
          "type": "string",
          "doc": " Event ID.\n"
        },
                {
          "name": "ticketNumber",
          "type": "string",
          "doc": " Unique ticket number.\n"
        },
                {
          "name": "fields",
          "type": "All APIs.Events - Ticketing._google_protobuf_FieldMask",
          "doc": " Set of field paths, specifying which parts of this resource to update.\n When fields are empty, request is interpreted as full update.\n Behavior follows [google.protobuf.FieldMask](https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#google.protobuf.FieldMask) semantics.\n"
        },
                {
          "name": "archived",
          "type": "boolean",
          "doc": " Whether ticket is archived.\n"
        },
                {
          "name": "guestDetails",
          "type": "All APIs.Events - Ticketing._wix_events_ticketing_UpdateTicketRequest_GuestDetailsUpdate",
          "doc": " Assigned guest details.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_ticketing_UpdateTicketResponse",
      "displayName": "Update Ticket Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "ticket",
        "type": "All APIs.Events - Ticketing._wix_events_ticketing_Ticket",
        "doc": " Updated ticket.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_ticketing_BulkUpdateTicketsRequest",
      "displayName": "Bulk Update Tickets Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "eventId",
          "type": "string",
          "doc": " Event ID.\n"
        },
                {
          "name": "ticketNumber",
          "type":           {
            "name": "array",
            "typeParams": ["string"]
          },
          "doc": " Unique ticket numbers.\n"
        },
                {
          "name": "archived",
          "type": "boolean",
          "doc": " Whether tickets are archived.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_ticketing_BulkUpdateTicketsResponse",
      "displayName": "Bulk Update Tickets Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "tickets",
        "type":         {
          "name": "array",
          "typeParams": ["All APIs.Events - Ticketing._wix_events_ticketing_Ticket"]
        },
        "doc": " Updated tickets.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_ticketing_GetDemoTicketRequest",
      "displayName": "Get Demo Ticket Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "definitionId",
        "type": "string",
        "doc": " Ticket definition ID.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_ticketing_GetDemoTicketResponse",
      "displayName": "Get Demo Ticket Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "ticket",
        "type": "All APIs.Events - Ticketing._wix_events_ticketing_Ticket",
        "doc": " Ticket.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_ticketing_events_Ticket",
      "displayName": "Ticket Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "ticketNumber",
          "type": "string",
          "doc": " Unique issued ticket number.\n"
        },
                {
          "name": "ticketDefinitionId",
          "type": "string",
          "doc": " Ticket definition ID.\n"
        },
                {
          "name": "checkIn",
          "type": "All APIs.Events - Ticketing._wix_events_CheckIn",
          "doc": " Ticket check-in.\n"
        },
                {
          "name": "price",
          "type": "All APIs.Events - Ticketing._wix_events_Money",
          "doc": " Ticket price.\n"
        },
                {
          "name": "archived",
          "type": "boolean",
          "doc": " Whether ticket is archived.\n"
        },
                {
          "name": "firstName",
          "type": "string",
          "doc": " Guest first name.\n"
        },
                {
          "name": "lastName",
          "type": "string",
          "doc": " Guest last name.\n"
        },
                {
          "name": "email",
          "type": "string",
          "doc": " Guest email.\n"
        },
                {
          "name": "contactId",
          "type": "string",
          "doc": " Contact ID associated with this ticket.\n"
        },
                {
          "name": "confirmed",
          "type": "boolean",
          "doc": " Whether ticket is confirmed\n"
        },
                {
          "name": "memberId",
          "type": "string",
          "doc": " Member ID associated with this ticket.\n"
        },
                {
          "name": "form",
          "type": "All APIs.Events - Ticketing._wix_events_FormResponse",
          "doc": " Ticket form response (only assigned tickets contain separate forms).\n"
        },
                {
          "name": "anonymized",
          "type": "boolean",
          "doc": " Anonymized tickets no longer contain personally identifiable information (PII).\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_ticketing_events_OrderConfirmed",
      "displayName": "Order Confirmed Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": [        {
          "title": "",
          "body": ["{\n  \"timestamp\" : \"2020-04-28T12:23:57.154Z\",\n  \"eventId\" : \"566e7be9-1410-4095-ae7a-349a4ac95c6b\",\n  \"orderNumber\" : \"FMXC-BZG3-OT\",\n  \"contactId\" : \"eea3ac0f-f9e6-4ed3-a135-99743c8e90b8\",\n  \"memberId\" : \"b272b0bb-d013-415a-8461-e8a175fe8dc6\",\n  \"created\" : \"2020-04-28T12:23:51.523Z\",\n  \"firstName\" : \"John\",\n  \"lastName\" : \"Doe\",\n  \"email\" : \"john.doe@somedomain.com\",\n  \"status\" : \"PAID\",\n  \"method\" : \"payPal\",\n  \"checkoutForm\" : {\n    \"inputValues\" : [ {\n      \"inputName\" : \"firstName\",\n      \"value\" : \"John\"\n    }, {\n      \"inputName\" : \"lastName\",\n      \"value\" : \"Doe\"\n    }, {\n      \"inputName\" : \"email\",\n      \"value\" : \"john.doe@somedomain.com\"\n    } ]\n  },\n  \"tickets\" : [ {\n    \"ticketNumber\" : \"FMXC-BZG3-OT021\",\n    \"ticketDefinitionId\" : \"d72874cb-012a-4ad2-afbb-57fe8cf1e308\",\n    \"price\" : {\n      \"amount\" : \"123.00\",\n      \"currency\" : \"USD\"\n    },\n    \"firstName\" : \"John\",\n    \"lastName\" : \"Doe\",\n    \"email\" : \"john.doe@somedomain.com\",\n    \"contactId\" : \"eea3ac0f-f9e6-4ed3-a135-99743c8e90b8\",\n    \"memberId\" : \"b272b0bb-d013-415a-8461-e8a175fe8dc6\",\n    \"confirmed\" : true,\n    \"form\" : {\n      \"inputValues\" : [ {\n        \"inputName\" : \"custom\",\n        \"value\" : \"Another comment\"\n      }, {\n        \"inputName\" : \"email\",\n        \"value\" : \"john.doe@somedomain.com\"\n      }, {\n        \"inputName\" : \"lastName\",\n        \"value\" : \"Doe\"\n      }, {\n        \"inputName\" : \"firstName\",\n        \"value\" : \"John\"\n      }, {\n        \"inputName\" : \"date\",\n        \"value\" : \"2020-04-28\"\n      }, {\n        \"inputName\" : \"comment\",\n        \"value\" : \"Comment\"\n      }, {\n        \"inputName\" : \"address\",\n        \"values\" : [ \"Wix Playground, 100 Gansevoort St\", \"New York City\", \"New York\", \"USA\", \"NY 10014\" ]\n      }, {\n        \"inputName\" : \"phone\",\n        \"value\" : \"(555) 555-1234\"\n      } ]\n    }\n  }, {\n    \"ticketNumber\" : \"FMXC-BZG3-OT041\",\n    \"ticketDefinitionId\" : \"9c3dc432-f1a6-408f-82d8-4f64c7ff581b\",\n    \"price\" : {\n      \"amount\" : \"0.00\",\n      \"currency\" : \"USD\"\n    },\n    \"firstName\" : \"Jane\",\n    \"lastName\" : \"Doe\",\n    \"email\" : \"jane.doe@somedomain.com\",\n    \"contactId\" : \"e11af3d4-c205-4d3a-b687-58d4dda78a6c\",\n    \"memberId\" : \"62bc4004-548c-46ad-a699-55ef307273e3\",\n    \"confirmed\" : true,\n    \"form\" : {\n      \"inputValues\" : [ {\n        \"inputName\" : \"custom\",\n        \"value\" : \"Another comment\"\n      }, {\n        \"inputName\" : \"email\",\n        \"value\" : \"jane.doe@somedomain.com\"\n      }, {\n        \"inputName\" : \"lastName\",\n        \"value\" : \"Doe\"\n      }, {\n        \"inputName\" : \"firstName\",\n        \"value\" : \"Jane\"\n      }, {\n        \"inputName\" : \"date\",\n        \"value\" : \"2020-04-28\"\n      }, {\n        \"inputName\" : \"comment\",\n        \"value\" : \"Comment\"\n      }, {\n        \"inputName\" : \"address\",\n        \"values\" : [ \"Wix Playground, 100 Gansevoort St\", \"New York City\", \"New York\", \"USA\", \"NY 10014\" ]\n      }, {\n        \"inputName\" : \"phone\",\n        \"value\" : \"(555) 555-1234\"\n      } ]\n    }\n  } ],\n  \"invoice\" : {\n    \"items\" : [ {\n      \"id\" : \"d72874cb-012a-4ad2-afbb-57fe8cf1e308\",\n      \"quantity\" : 1,\n      \"name\" : \"VIP\",\n      \"price\" : {\n        \"amount\" : \"123.00\",\n        \"currency\" : \"USD\"\n      },\n      \"total\" : {\n        \"amount\" : \"123.00\",\n        \"currency\" : \"USD\"\n      },\n      \"fees\" : [ {\n        \"type\" : \"FEE_INCLUDED\",\n        \"rate\" : \"2.5\",\n        \"amount\" : {\n          \"amount\" : \"3.08\",\n          \"currency\" : \"USD\"\n        }\n      } ]\n    }, {\n      \"id\" : \"9c3dc432-f1a6-408f-82d8-4f64c7ff581b\",\n      \"quantity\" : 1,\n      \"name\" : \"Free\",\n      \"price\" : {\n        \"amount\" : \"0.00\",\n        \"currency\" : \"USD\"\n      },\n      \"total\" : {\n        \"amount\" : \"0.00\",\n        \"currency\" : \"USD\"\n      },\n      \"fees\" : [ {\n        \"rate\" : \"2.5\",\n        \"amount\" : {\n          \"amount\" : \"0.00\",\n          \"currency\" : \"USD\"\n        }\n      } ]\n    } ],\n    \"fees\" : [ {\n      \"rate\" : \"2.5\",\n      \"amount\" : {\n        \"amount\" : \"0.00\",\n        \"currency\" : \"USD\"\n      }\n    }, {\n      \"type\" : \"FEE_INCLUDED\",\n      \"rate\" : \"2.5\",\n      \"amount\" : {\n        \"amount\" : \"3.08\",\n        \"currency\" : \"USD\"\n      }\n    } ],\n    \"subTotal\" : {\n      \"amount\" : \"123.00\",\n      \"currency\" : \"USD\"\n    },\n    \"grandTotal\" : {\n      \"amount\" : \"123.00\",\n      \"currency\" : \"USD\"\n    },\n    \"revenue\" : {\n      \"amount\" : \"119.92\",\n      \"currency\" : \"USD\"\n    }\n  }\n} "],
          "type": "json",
          "extra": {}
        }]
      },
      "members":       [
                {
          "name": "timestamp",
          "type": "string",
          "doc": " Order confirmation timestamp in ISO UTC.\n"
        },
                {
          "name": "eventId",
          "type": "string",
          "doc": " Event ID.\n"
        },
                {
          "name": "orderNumber",
          "type": "string",
          "doc": " Unique order number.\n"
        },
                {
          "name": "contactId",
          "type": "string",
          "doc": " Contact ID associated with this order.\n"
        },
                {
          "name": "memberId",
          "type": "string",
          "doc": " Member ID associated with this order.\n"
        },
                {
          "name": "created",
          "type": "string",
          "doc": " Order created timestamp\n",
          "readOnly": true
        },
                {
          "name": "firstName",
          "type": "string",
          "doc": " Buyer first name.\n"
        },
                {
          "name": "lastName",
          "type": "string",
          "doc": " Buyer last name.\n"
        },
                {
          "name": "email",
          "type": "string",
          "doc": " Buyer email address.\n"
        },
                {
          "name": "checkoutForm",
          "type": "All APIs.Events - Ticketing._wix_events_FormResponse",
          "doc": " Checkout form response.\n"
        },
                {
          "name": "status",
          "type": "All APIs.Events - Ticketing._wix_events_ticketing_OrderStatus",
          "doc": " Order status.\n"
        },
                {
          "name": "method",
          "type": "string",
          "doc": " Payment method used for paid tickets purchase, i.e. \"payPal\", \"creditCard\", etc.\n"
        },
                {
          "name": "tickets",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Events - Ticketing._wix_events_ticketing_events_Ticket"]
          },
          "doc": " Tickets (generated after payment).\n"
        },
                {
          "name": "invoice",
          "type": "All APIs.Events - Ticketing._wix_events_ticketing_Invoice",
          "doc": " Invoice.\n"
        },
                {
          "name": "reservationId",
          "type": "string",
          "doc": " Reservation ID associated with this order.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_ticketing_events_OrderDeleted",
      "displayName": "Order Deleted Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": [        {
          "title": "",
          "body": ["{\n  \"timestamp\" : \"2020-04-28T12:24:29.768Z\",\n  \"eventId\" : \"566e7be9-1410-4095-ae7a-349a4ac95c6b\",\n  \"orderNumber\" : \"FMXC-BZG3-OT\",\n  \"contactId\" : \"eea3ac0f-f9e6-4ed3-a135-99743c8e90b8\",\n  \"memberId\" : \"b272b0bb-d013-415a-8461-e8a175fe8dc6\",\n  \"anonymized\" : true,\n  \"orderType\" : \"ASSIGNED_TICKETS\"\n} "],
          "type": "json",
          "extra": {}
        }]
      },
      "members":       [
                {
          "name": "timestamp",
          "type": "string",
          "doc": " Order deleted timestamp in ISO UTC format.\n"
        },
                {
          "name": "eventId",
          "type": "string",
          "doc": " Event ID.\n"
        },
                {
          "name": "orderNumber",
          "type": "string",
          "doc": " Unique order number.\n"
        },
                {
          "name": "contactId",
          "type": "string",
          "doc": " Contact ID associated with this order\n"
        },
                {
          "name": "memberId",
          "type": "string",
          "doc": " Member ID associated with this order.\n"
        },
                {
          "name": "anonymized",
          "type": "boolean",
          "doc": " Whether order was anonymized by GDPR delete.\n"
        },
                {
          "name": "orderType",
          "type": "All APIs.Events - Ticketing._wix_events_ticketing_events_OrderType",
          "doc": " Order type.\n"
        },
                {
          "name": "triggeredByAnonymizeRequest",
          "type": "boolean",
          "doc": " Whether event was triggered by GDPR delete request.\n"
        },
                {
          "name": "tickets",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Events - Ticketing._wix_events_ticketing_events_Ticket"]
          },
          "doc": " Tickets generated after payment.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_ticketing_events_OrderInitiated",
      "displayName": "Order Initiated Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": [        {
          "title": "",
          "body": ["{\n  \"timestamp\" : \"2020-04-28T12:23:51.523Z\",\n  \"eventId\" : \"566e7be9-1410-4095-ae7a-349a4ac95c6b\",\n  \"orderNumber\" : \"FMXC-BZG3-OT\",\n  \"firstName\" : \"John\",\n  \"lastName\" : \"Doe\",\n  \"email\" : \"john.doe@somedomain.com\",\n  \"status\" : \"INITIATED\",\n  \"checkoutForm\" : {\n    \"inputValues\" : [ {\n      \"inputName\" : \"firstName\",\n      \"value\" : \"John\"\n    }, {\n      \"inputName\" : \"lastName\",\n      \"value\" : \"Doe\"\n    }, {\n      \"inputName\" : \"email\",\n      \"value\" : \"john.doe@somedomain.com\"\n    } ]\n  },\n  \"invoice\" : {\n    \"items\" : [ {\n      \"id\" : \"d72874cb-012a-4ad2-afbb-57fe8cf1e308\",\n      \"quantity\" : 1,\n      \"name\" : \"VIP\",\n      \"price\" : {\n        \"amount\" : \"123.00\",\n        \"currency\" : \"USD\"\n      },\n      \"total\" : {\n        \"amount\" : \"123.00\",\n        \"currency\" : \"USD\"\n      },\n      \"fees\" : [ {\n        \"type\" : \"FEE_INCLUDED\",\n        \"rate\" : \"2.5\",\n        \"amount\" : {\n          \"amount\" : \"3.08\",\n          \"currency\" : \"USD\"\n        }\n      } ]\n    }, {\n      \"id\" : \"9c3dc432-f1a6-408f-82d8-4f64c7ff581b\",\n      \"quantity\" : 1,\n      \"name\" : \"Free\",\n      \"price\" : {\n        \"amount\" : \"0.00\",\n        \"currency\" : \"USD\"\n      },\n      \"total\" : {\n        \"amount\" : \"0.00\",\n        \"currency\" : \"USD\"\n      },\n      \"fees\" : [ {\n        \"rate\" : \"2.5\",\n        \"amount\" : {\n          \"amount\" : \"0.00\",\n          \"currency\" : \"USD\"\n        }\n      } ]\n    } ],\n    \"fees\" : [ {\n      \"rate\" : \"2.5\",\n      \"amount\" : {\n        \"amount\" : \"0.00\",\n        \"currency\" : \"USD\"\n      }\n    }, {\n      \"type\" : \"FEE_INCLUDED\",\n      \"rate\" : \"2.5\",\n      \"amount\" : {\n        \"amount\" : \"3.08\",\n        \"currency\" : \"USD\"\n      }\n    } ],\n    \"subTotal\" : {\n      \"amount\" : \"123.00\",\n      \"currency\" : \"USD\"\n    },\n    \"grandTotal\" : {\n      \"amount\" : \"123.00\",\n      \"currency\" : \"USD\"\n    },\n    \"revenue\" : {\n      \"amount\" : \"119.92\",\n      \"currency\" : \"USD\"\n    }\n  }\n} "],
          "type": "json",
          "extra": {}
        }]
      },
      "members":       [
                {
          "name": "timestamp",
          "type": "string",
          "doc": " Order initiated timestamp in ISO UTC format.\n"
        },
                {
          "name": "eventId",
          "type": "string",
          "doc": " Event ID.\n"
        },
                {
          "name": "orderNumber",
          "type": "string",
          "doc": " Unique order number.\n"
        },
                {
          "name": "contactId",
          "type": "string",
          "doc": " Contact ID associated with this order.\n"
        },
                {
          "name": "memberId",
          "type": "string",
          "doc": " Member ID associated with this order.\n"
        },
                {
          "name": "firstName",
          "type": "string",
          "doc": " Guest first name.\n"
        },
                {
          "name": "lastName",
          "type": "string",
          "doc": " Guest last name.\n"
        },
                {
          "name": "email",
          "type": "string",
          "doc": " Guest email address.\n"
        },
                {
          "name": "checkoutForm",
          "type": "All APIs.Events - Ticketing._wix_events_FormResponse",
          "doc": " Checkout form response.\n"
        },
                {
          "name": "status",
          "type": "All APIs.Events - Ticketing._wix_events_ticketing_OrderStatus",
          "doc": " Order status.\n"
        },
                {
          "name": "invoice",
          "type": "All APIs.Events - Ticketing._wix_events_ticketing_Invoice",
          "doc": " Invoice.\n"
        },
                {
          "name": "reservationId",
          "type": "string",
          "doc": " Reservation ID associated with this order.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_ticketing_events_OrderPaid",
      "displayName": "Order Paid Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": [        {
          "title": "",
          "body": ["{\n  \"timestamp\" : \"2020-04-28T12:24:29.768Z\",\n  \"eventId\" : \"566e7be9-1410-4095-ae7a-349a4ac95c6b\",\n  \"orderNumber\" : \"FMXC-BZG3-OT\"\n} "],
          "type": "json",
          "extra": {}
        }]
      },
      "members":       [
                {
          "name": "timestamp",
          "type": "string",
          "doc": " Order paid timestamp in ISO UTC.\n"
        },
                {
          "name": "eventId",
          "type": "string",
          "doc": " Event ID.\n"
        },
                {
          "name": "orderNumber",
          "type": "string",
          "doc": " Unique order number.\n"
        },
                {
          "name": "reservationId",
          "type": "string",
          "doc": " Reservation ID associated with this order.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_ticketing_events_OrderUpdated",
      "displayName": "Order Updated Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": [        {
          "title": "",
          "body": ["{\n  \"timestamp\" : \"2020-04-28T12:24:29.768Z\",\n  \"eventId\" : \"566e7be9-1410-4095-ae7a-349a4ac95c6b\",\n  \"orderNumber\" : \"FMXC-BZG3-OT\",\n  \"contactId\" : \"eea3ac0f-f9e6-4ed3-a135-99743c8e90b8\",\n  \"memberId\" : \"b272b0bb-d013-415a-8461-e8a175fe8dc6\",\n  \"created\" : \"2020-04-28T12:23:51.523Z\",\n  \"firstName\" : \"John\",\n  \"lastName\" : \"Doe\",\n  \"email\" : \"john.doe@somedomain.com\",\n  \"confirmed\" : true,\n  \"status\" : \"PAID\",\n  \"method\" : \"payPal\",\n  \"archived\" : false,\n  \"checkoutForm\" : {\n    \"inputValues\" : [ {\n      \"inputName\" : \"firstName\",\n      \"value\" : \"John\"\n    }, {\n      \"inputName\" : \"lastName\",\n      \"value\" : \"Doe\"\n    }, {\n      \"inputName\" : \"email\",\n      \"value\" : \"john.doe@somedomain.com\"\n    } ]\n  },\n  \"tickets\" : [ {\n    \"ticketNumber\" : \"FMXC-BZG3-OT021\",\n    \"ticketDefinitionId\" : \"d72874cb-012a-4ad2-afbb-57fe8cf1e308\",\n    \"checkIn\" : {\n      \"created\" : \"2020-04-28T12:24:20.102Z\"\n    },\n    \"price\" : {\n      \"amount\" : \"123.00\",\n      \"currency\" : \"USD\"\n    },\n    \"archived\" : false,\n    \"firstName\" : \"John\",\n    \"lastName\" : \"Doe\",\n    \"email\" : \"john.doe@somedomain.com\",\n    \"contactId\" : \"eea3ac0f-f9e6-4ed3-a135-99743c8e90b8\",\n    \"memberId\" : \"b272b0bb-d013-415a-8461-e8a175fe8dc6\",\n    \"confirmed\" : true,\n    \"form\" : {\n      \"inputValues\" : [ {\n        \"inputName\" : \"custom\",\n        \"value\" : \"Another comment\"\n      }, {\n        \"inputName\" : \"email\",\n        \"value\" : \"john.doe@somedomain.com\"\n      }, {\n        \"inputName\" : \"lastName\",\n        \"value\" : \"Doe\"\n      }, {\n        \"inputName\" : \"firstName\",\n        \"value\" : \"John\"\n      }, {\n        \"inputName\" : \"date\",\n        \"value\" : \"2020-04-28\"\n      }, {\n        \"inputName\" : \"comment\",\n        \"value\" : \"Comment\"\n      }, {\n        \"inputName\" : \"address\",\n        \"values\" : [ \"Wix Playground, 100 Gansevoort St\", \"New York City\", \"New York\", \"USA\", \"NY 10014\" ]\n      }, {\n        \"inputName\" : \"phone\",\n        \"value\" : \"(555) 555-1234\"\n      } ]\n    }\n  }, {\n    \"ticketNumber\" : \"FMXC-BZG3-OT041\",\n    \"ticketDefinitionId\" : \"9c3dc432-f1a6-408f-82d8-4f64c7ff581b\",\n    \"price\" : {\n      \"amount\" : \"0.00\",\n      \"currency\" : \"USD\"\n    },\n    \"archived\" : false,\n    \"firstName\" : \"Jane\",\n    \"lastName\" : \"Doe\",\n    \"email\" : \"jane.doe@somedomain.com\",\n    \"contactId\" : \"e11af3d4-c205-4d3a-b687-58d4dda78a6c\",\n    \"memberId\" : \"62bc4004-548c-46ad-a699-55ef307273e3\",\n    \"confirmed\" : true,\n    \"form\" : {\n      \"inputValues\" : [ {\n        \"inputName\" : \"custom\",\n        \"value\" : \"Another comment\"\n      }, {\n        \"inputName\" : \"email\",\n        \"value\" : \"jane.doe@somedomain.com\"\n      }, {\n        \"inputName\" : \"lastName\",\n        \"value\" : \"Doe\"\n      }, {\n        \"inputName\" : \"firstName\",\n        \"value\" : \"Jane\"\n      }, {\n        \"inputName\" : \"date\",\n        \"value\" : \"2020-04-28\"\n      }, {\n        \"inputName\" : \"comment\",\n        \"value\" : \"Comment\"\n      }, {\n        \"inputName\" : \"address\",\n        \"values\" : [ \"Wix Playground, 100 Gansevoort St\", \"New York City\", \"New York\", \"USA\", \"NY 10014\" ]\n      }, {\n        \"inputName\" : \"phone\",\n        \"value\" : \"(555) 555-1234\"\n      } ]\n    }\n  } ]\n} "],
          "type": "json",
          "extra": {}
        }]
      },
      "members":       [
                {
          "name": "timestamp",
          "type": "string",
          "doc": " Order updated timestamp in ISO UTC format.\n"
        },
                {
          "name": "eventId",
          "type": "string",
          "doc": " Event ID.\n"
        },
                {
          "name": "orderNumber",
          "type": "string",
          "doc": " Unique order number.\n"
        },
                {
          "name": "contactId",
          "type": "string",
          "doc": " Contact ID associated with this order.\n"
        },
                {
          "name": "memberId",
          "type": "string",
          "doc": " Member ID associated with this order.\n"
        },
                {
          "name": "created",
          "type": "string",
          "doc": " Order created timestamp.\n",
          "readOnly": true
        },
                {
          "name": "firstName",
          "type": "string",
          "doc": " Buyer first name.\n"
        },
                {
          "name": "lastName",
          "type": "string",
          "doc": " Buyer last name.\n"
        },
                {
          "name": "email",
          "type": "string",
          "doc": " Buyer email.\n"
        },
                {
          "name": "checkoutForm",
          "type": "All APIs.Events - Ticketing._wix_events_FormResponse",
          "doc": " Checkout form response.\n"
        },
                {
          "name": "confirmed",
          "type": "boolean",
          "doc": " Whether order is confirmed - occurs once payment gateway processes the payment and funds reach merchant's account.\n"
        },
                {
          "name": "status",
          "type": "All APIs.Events - Ticketing._wix_events_ticketing_OrderStatus",
          "doc": " Order status.\n"
        },
                {
          "name": "method",
          "type": "string",
          "doc": " Payment method used for paid tickets purchase, i.e. \"payPal\", \"creditCard\", etc.\n"
        },
                {
          "name": "tickets",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Events - Ticketing._wix_events_ticketing_events_Ticket"]
          },
          "doc": " Tickets generated after payment.\n"
        },
                {
          "name": "archived",
          "type": "boolean",
          "doc": " Whether order was archived and excluded from results.\n"
        },
                {
          "name": "triggeredByAnonymizeRequest",
          "type": "boolean",
          "doc": " Whether event was triggered by GDPR delete request.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_ticketing_events_ReservationCreated",
      "displayName": "Reservation Created Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": [        {
          "title": "",
          "body": ["{\n  \"timestamp\" : \"2020-04-26T13:00:00.000Z\",\n  \"eventId\" : \"46dc2337-d725-4f7e-a0ae-a94a9a1f0c0b\",\n  \"reservationId\" : \"d72874cb-012a-4ad2-afbb-57fe8cf1e308\",\n  \"expires\" : \"2020-04-26T13:20:00.000Z\",\n  \"status\" : \"RESERVATION_PENDING\"\n} "],
          "type": "json",
          "extra": {}
        }]
      },
      "members":       [
                {
          "name": "timestamp",
          "type": "string",
          "doc": " Reservation created timestamp in ISO UTC format.\n"
        },
                {
          "name": "eventId",
          "type": "string",
          "doc": " Event ID.\n"
        },
                {
          "name": "reservationId",
          "type": "string",
          "doc": " Reservation ID.\n Can be used to retrieve a reservation invoice.\n"
        },
                {
          "name": "expires",
          "type": "string",
          "doc": " Reservation expiration timestamp.\n"
        },
                {
          "name": "status",
          "type": "All APIs.Events - Ticketing._wix_events_ticketing_ReservationStatus",
          "doc": " Reservation status.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_ticketing_events_ReservationUpdated",
      "displayName": "Reservation Updated Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": [        {
          "title": "",
          "body": ["{\n  \"timestamp\" : \"2020-04-26T13:00:00.000Z\",\n  \"eventId\" : \"46dc2337-d725-4f7e-a0ae-a94a9a1f0c0b\",\n  \"reservationId\" : \"d72874cb-012a-4ad2-afbb-57fe8cf1e308\",\n  \"status\" : \"RESERVATION_CONFIRMED\"\n} "],
          "type": "json",
          "extra": {}
        }]
      },
      "members":       [
                {
          "name": "timestamp",
          "type": "string",
          "doc": " Reservation updated timestamp.\n"
        },
                {
          "name": "eventId",
          "type": "string",
          "doc": " Event ID.\n"
        },
                {
          "name": "reservationId",
          "type": "string",
          "doc": " Reservation ID.\n Can be used to retrieve a reservation invoice.\n"
        },
                {
          "name": "status",
          "type": "All APIs.Events - Ticketing._wix_events_ticketing_ReservationStatus",
          "doc": " Reservation status.\n"
        },
                {
          "name": "expires",
          "type": "string",
          "doc": " Reservation expiration timestamp.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_ticketing_events_TicketDefinitionCreated",
      "displayName": "Ticket Definition Created Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": [        {
          "title": "",
          "body": ["{\n  \"timestamp\" : \"2020-04-26T13:57:50.699Z\",\n  \"eventId\" : \"46dc2337-d725-4f7e-a0ae-a94a9a1f0c0b\",\n  \"ticketDefinitionId\" : \"d72874cb-012a-4ad2-afbb-57fe8cf1e308\"\n} "],
          "type": "json",
          "extra": {}
        }]
      },
      "members":       [
                {
          "name": "timestamp",
          "type": "string",
          "doc": " Ticket Definition created timestamp in ISO UTC format.\n"
        },
                {
          "name": "ticketDefinitionId",
          "type": "string",
          "doc": " Ticket Definition ID.\n"
        },
                {
          "name": "eventId",
          "type": "string",
          "doc": " Event ID.\n"
        },
                {
          "name": "originatedFrom",
          "type": "All APIs.Events - Ticketing._wix_events_OriginatedFrom",
          "doc": " Originated from.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_ticketing_events_TicketDefinitionDeleted",
      "displayName": "Ticket Definition Deleted Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": [        {
          "title": "",
          "body": ["{\n  \"timestamp\" : \"2020-04-26T13:57:50.699Z\",\n  \"eventId\" : \"46dc2337-d725-4f7e-a0ae-a94a9a1f0c0b\",\n  \"ticketDefinitionId\" : \"d72874cb-012a-4ad2-afbb-57fe8cf1e308\"\n} "],
          "type": "json",
          "extra": {}
        }]
      },
      "members":       [
                {
          "name": "timestamp",
          "type": "string",
          "doc": " Ticket definition deleted timestamp in ISO UTC format.\n"
        },
                {
          "name": "ticketDefinitionId",
          "type": "string",
          "doc": " Ticket definition ID.\n"
        },
                {
          "name": "eventId",
          "type": "string",
          "doc": " Event ID.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_ticketing_events_TicketDefinitionUpdated",
      "displayName": "Ticket Definition Updated Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": [        {
          "title": "",
          "body": ["{\n  \"timestamp\" : \"2020-04-26T13:57:50.699Z\",\n  \"eventId\" : \"46dc2337-d725-4f7e-a0ae-a94a9a1f0c0b\",\n  \"ticketDefinitionId\" : \"d72874cb-012a-4ad2-afbb-57fe8cf1e308\"\n} "],
          "type": "json",
          "extra": {}
        }]
      },
      "members":       [
                {
          "name": "timestamp",
          "type": "string",
          "doc": " Ticket definition updated timestamp in ISO UTC format.\n"
        },
                {
          "name": "ticketDefinitionId",
          "type": "string",
          "doc": " Ticket definition ID.\n"
        },
                {
          "name": "eventId",
          "type": "string",
          "doc": " Event ID.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_ticketing_ChannelType",
      "displayName": "Channel Type Object",
      "locations": [],
      "docs":       {
        "summary": " \n Possible values are: <li><code> ONLINE -  Buyer created order via one of the online channels (website, mobile app, etc.)\n <\/code><\/li><li><code> OFFLINE_POS -  Order created and money collected by the sales person\n <\/code><\/li>",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum":       [
        "ONLINE",
        "OFFLINE_POS"
      ],
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_TaxType",
      "displayName": "Tax Type Object",
      "locations": [],
      "docs":       {
        "summary": " \n Possible values are: <li><code> INCLUDED -  Tax is included in the ticket price\n <\/code><\/li><li><code> ADDED -  Tax is added to the order at the checkout\n <\/code><\/li><li><code> ADDED_AT_CHECKOUT -  Tax is added to the final total at the checkout\n <\/code><\/li>",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum":       [
        "INCLUDED",
        "ADDED",
        "ADDED_AT_CHECKOUT"
      ],
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_FeeType",
      "displayName": "Fee Type Object",
      "locations": [],
      "docs":       {
        "summary": " \n Possible values are: <li><code> FEE_ADDED -  Fee is added to the ticket price at checkout\n <\/code><\/li><li><code> FEE_INCLUDED -  Seller absorbs the fee. It is deducted from the ticket price\n <\/code><\/li><li><code> FEE_ADDED_AT_CHECKOUT -  Fee is added to the ticket price at checkout\n <\/code><\/li>",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum":       [
        "FEE_ADDED",
        "FEE_INCLUDED",
        "FEE_ADDED_AT_CHECKOUT"
      ],
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_common_Subdivision_SubdivisionType",
      "displayName": "Subdivision Type Object",
      "locations": [],
      "docs":       {
        "summary": " \n Possible values are: <li><code> UNKNOWN_SUBDIVISION_TYPE <\/code><\/li><li><code> ADMINISTRATIVE_AREA_LEVEL_1 -  State\n <\/code><\/li><li><code> ADMINISTRATIVE_AREA_LEVEL_2 -  County\n <\/code><\/li><li><code> ADMINISTRATIVE_AREA_LEVEL_3 -  City/town\n <\/code><\/li><li><code> ADMINISTRATIVE_AREA_LEVEL_4 -  Neighborhood/quarter\n <\/code><\/li><li><code> ADMINISTRATIVE_AREA_LEVEL_5 -  Street/block\n <\/code><\/li><li><code> COUNTRY -  ADMINISTRATIVE_AREA_LEVEL_0. Indicates the national political entity, and is typically the highest order type returned by the Geocoder.\n <\/code><\/li>",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum":       [
        "UNKNOWN_SUBDIVISION_TYPE",
        "ADMINISTRATIVE_AREA_LEVEL_1",
        "ADMINISTRATIVE_AREA_LEVEL_2",
        "ADMINISTRATIVE_AREA_LEVEL_3",
        "ADMINISTRATIVE_AREA_LEVEL_4",
        "ADMINISTRATIVE_AREA_LEVEL_5",
        "COUNTRY"
      ],
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_ticketing_FeeName",
      "displayName": "Fee Name Object",
      "locations": [],
      "docs":       {
        "summary": " \n Possible values are: <li><code> WIX_FEE -  Wix service fee charges applied to the line item.\n <\/code><\/li>",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum": ["WIX_FEE"],
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_ticketing_OrderStatus",
      "displayName": "Order Status Object",
      "locations": [],
      "docs":       {
        "summary": " \n Possible values are: <li><code> NA_ORDER_STATUS -  Order status not available for this request fieldset\n <\/code><\/li><li><code> FREE -  Order is confirmed, no payment required\n <\/code><\/li><li><code> PENDING -  Order was paid but payment gateway suspended the payment. Eventually changes to PAID\n <\/code><\/li><li><code> PAID -  Order paid via payment gateway\n <\/code><\/li><li><code> OFFLINE_PENDING -  Order confirmed but has to be paid via offline payment and status manually updated to PAID\n <\/code><\/li><li><code> INITIATED -  Order is awaiting for payment in Cashier\n <\/code><\/li><li><code> CANCELED -  Order was canceled\n <\/code><\/li><li><code> DECLINED -  Order payment was declined\n <\/code><\/li>",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum":       [
        "NA_ORDER_STATUS",
        "FREE",
        "PENDING",
        "PAID",
        "OFFLINE_PENDING",
        "INITIATED",
        "CANCELED",
        "DECLINED"
      ],
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_ticketing_TicketSaleStatus",
      "displayName": "Ticket Sale Status Object",
      "locations": [],
      "docs":       {
        "summary": " \n Possible values are: <li><code> SALE_SCHEDULED -  Ticket sale is scheduled to start\n <\/code><\/li><li><code> SALE_STARTED -  Ticket sale has started\n <\/code><\/li><li><code> SALE_ENDED -  Ticket sale has ended\n <\/code><\/li>",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum":       [
        "SALE_SCHEDULED",
        "SALE_STARTED",
        "SALE_ENDED"
      ],
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_ticketing_ReservationStatus",
      "displayName": "Reservation Status Object",
      "locations": [],
      "docs":       {
        "summary": " \n Possible values are: <li><code> RESERVATION_PENDING -  Reservation is pending confirmation.\n The reservation will expire after the expiration due time.\n <\/code><\/li><li><code> RESERVATION_CONFIRMED -  The reservation was confirmed and will not expire.\n <\/code><\/li><li><code> RESERVATION_CANCELED -  The reservation was canceled because of non payment.\n <\/code><\/li><li><code> RESERVATION_CANCELED_MANUALLY -  The reservation was canceled manually by the buyer.\n <\/code><\/li><li><code> RESERVATION_EXPIRED -  The reservation has expired.\n <\/code><\/li>",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum":       [
        "RESERVATION_PENDING",
        "RESERVATION_CONFIRMED",
        "RESERVATION_CANCELED",
        "RESERVATION_CANCELED_MANUALLY",
        "RESERVATION_EXPIRED"
      ],
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_ticketing_PricingTypeEnum_Type",
      "displayName": "Type Object",
      "locations": [],
      "docs":       {
        "summary": " \n Possible values are: <li><code> STANDARD <\/code><\/li><li><code> DONATION <\/code><\/li>",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum":       [
        "STANDARD",
        "DONATION"
      ],
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_ticketing_TicketDefinitionStateEnum_State",
      "displayName": "State Object",
      "locations": [],
      "docs":       {
        "summary": " \n Possible values are: <li><code> INCLUDE_HIDDEN_NOT_ON_SALE <\/code><\/li>",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum": ["INCLUDE_HIDDEN_NOT_ON_SALE"],
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_common_SortOrder",
      "displayName": "Sort Order Object",
      "locations": [],
      "docs":       {
        "summary": " \n Possible values are: <li><code> ASC <\/code><\/li><li><code> DESC <\/code><\/li>",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum":       [
        "ASC",
        "DESC"
      ],
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_ticketing_TicketDefinitionFieldset",
      "displayName": "Ticket Definition Fieldset Object",
      "locations": [],
      "docs":       {
        "summary": " \n Possible values are: <li><code> POLICY -  Include policy in the response.\n <\/code><\/li><li><code> DASHBOARD -  Include dashboard in the response.\n <\/code><\/li>",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum":       [
        "POLICY",
        "DASHBOARD"
      ],
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_ticketing_ListTicketDefinitionsRequest_State",
      "displayName": "State Object",
      "locations": [],
      "docs":       {
        "summary": " \n Possible values are: <li><code> VISIBLE -  Ticket is available for purchase.\n <\/code><\/li><li><code> HIDDEN -  Opposite to VISIBLE.\n <\/code><\/li><li><code> FREE -  Ticket price is 0.\n <\/code><\/li><li><code> PAID -  Ticket price is greater than 0.\n <\/code><\/li>",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum":       [
        "VISIBLE",
        "HIDDEN",
        "FREE",
        "PAID"
      ],
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_ticketing_OrderTag",
      "displayName": "Order Tag Object",
      "locations": [],
      "docs":       {
        "summary": " \n Possible values are: <li><code> CONFIRMED -  Return only confirmed orders\n <\/code><\/li><li><code> UNCONFIRMED -  Return only unconfirmed orders\n <\/code><\/li><li><code> MEMBER -  Return only member orders\n <\/code><\/li><li><code> ARCHIVED -  Return only archived orders\n <\/code><\/li><li><code> NON_ARCHIVED -  Return only non archived orders\n <\/code><\/li><li><code> FULLY_CHECKED_IN -  Return only orders with all guests checked-in\n <\/code><\/li><li><code> NOT_FULLY_CHECKED_IN -  Return only orders with no guests checked-in\n <\/code><\/li>",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum":       [
        "CONFIRMED",
        "UNCONFIRMED",
        "MEMBER",
        "ARCHIVED",
        "NON_ARCHIVED",
        "FULLY_CHECKED_IN",
        "NOT_FULLY_CHECKED_IN"
      ],
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_ticketing_OrderFieldset",
      "displayName": "Order Fieldset Object",
      "locations": [],
      "docs":       {
        "summary": " \n Possible values are: <li><code> TICKETS -  Include tickets in response\n <\/code><\/li><li><code> DETAILS -  Include order details: status, first_name, last_name, email, created, etc.\n <\/code><\/li><li><code> FORM -  Include checkout_form\n <\/code><\/li><li><code> INVOICE -  Include invoice\n <\/code><\/li>",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum":       [
        "TICKETS",
        "DETAILS",
        "FORM",
        "INVOICE"
      ],
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_ticketing_TicketFieldset",
      "displayName": "Ticket Fieldset Object",
      "locations": [],
      "docs":       {
        "summary": " \n Possible values are: <li><code> GUEST_DETAILS -  Include guest details in ticket response\n <\/code><\/li><li><code> TICKET_DETAILS -  Include ticket details in ticket response\n <\/code><\/li><li><code> GUEST_FORM -  Include individual guest form in ticket response\n <\/code><\/li>",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum":       [
        "GUEST_DETAILS",
        "TICKET_DETAILS",
        "GUEST_FORM"
      ],
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_ticketing_ListTicketsRequest_State",
      "displayName": "State Object",
      "locations": [],
      "docs":       {
        "summary": " \n Possible values are: <li><code> ORDER_ARCHIVED -  Returns only archived orders' tickets\n <\/code><\/li><li><code> ORDER_ACTIVE -  Returns only non-archived orders' tickets\n <\/code><\/li><li><code> TICKET_ARCHIVED -  Returns only archived tickets\n <\/code><\/li><li><code> TICKET_ACTIVE -  Returns only non-archived tickets\n <\/code><\/li><li><code> CHECKED_IN -  Returns only checked-in tickets\n <\/code><\/li><li><code> NON_CHECKED_IN -  Returns only non-checked-in tickets\n <\/code><\/li><li><code> FREE -  Returns only free tickets\n <\/code><\/li><li><code> PAID -  Returns only paid tickets\n <\/code><\/li><li><code> MEMBER -  Returns only member tickets\n <\/code><\/li>",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum":       [
        "ORDER_ARCHIVED",
        "ORDER_ACTIVE",
        "TICKET_ARCHIVED",
        "TICKET_ACTIVE",
        "CHECKED_IN",
        "NON_CHECKED_IN",
        "FREE",
        "PAID",
        "MEMBER"
      ],
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_ticketing_events_OrderType",
      "displayName": "Order Type Object",
      "locations": [],
      "docs":       {
        "summary": " \n Possible values are: <li><code> UNASSIGNED_TICKETS -  Buyer form is used for all tickets\n <\/code><\/li><li><code> ASSIGNED_TICKETS -  Each order ticket has its own form\n <\/code><\/li>",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum":       [
        "UNASSIGNED_TICKETS",
        "ASSIGNED_TICKETS"
      ],
      "extra": {},
      "labels": []
    }
  ],
  "extra": {"artifactId": "com.wixpress.wix-events-web"}
}