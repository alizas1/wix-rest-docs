{
  "name": "Point of Sale Integration",
  "client_id": "https://github.com/wix-private/restaurants-bazel/tree/master/restaurants-pos-spi-host#public",
  "memberOf": "All APIs",
  "category": "core",
  "mixes": [],
  "labels": [],
  "docs":   {
    "summary": "Describes the Point of Sale (POS) integration to be called by Wix and received by the POS provider third-party. This integration is used to synchronize menus (catalogs) between Wix and the third-party and to create orders originally generated with Wix in the third-party system. Here we describe the SPI and API endpoints you need to implement in your app.",
    "description": []
  },
  "properties": [],
  "tags":   [
        {
      "name": "Internal APIs",
      "entity": null
    },
        {
      "name": "POS Connectivity API",
      "entity": null
    },
        {
      "name": "POS Integration SPI",
      "entity": null
    }
  ],
  "relatedGuides":   [
        {
      "path": "../guides/point-of-sale-integration/docs/GetStarted.md",
      "name": "Introduction"
    },
        {
      "path": "../guides/point-of-sale-integration/docs/Terms.md",
      "name": "Terminology"
    },
        {
      "path": "../guides/point-of-sale-integration/docs/BestPractices.md",
      "name": "Best Practices"
    },
        {
      "path": "../guides/point-of-sale-integration/docs/Flow.md",
      "name": "Flows"
    }
  ],
  "operations":   [
        {
      "name": "Create Order",
      "methodName": "CreateOrder",
      "serviceName": "RestaurantsPOSProvider",
      "tag": "POS Integration SPI",
      "permissions": [],
      "events": [],
      "labels": [],
      "nameParams": [],
      "requiredFields":       [
        "accountId",
        "configurationId"
      ],
      "params":       [
                {
          "in": "BODY",
          "name": "accountId",
          "type": "string",
          "doc": " Merchant's account ID with the POS system.\n",
          "required": true
        },
                {
          "in": "BODY",
          "name": "configurationId",
          "type": "string",
          "doc": " Unique identifier of the merchant's Wix location configuration.\n",
          "required": true
        },
                {
          "in": "BODY",
          "name": "order",
          "type": "All APIs.Point of Sale Integration._com_wixpress_restaurants_posspihost_spi_v1_WixOrder",
          "doc": " Details of the order being created on the Wix site.\n",
          "required": false
        },
                {
          "in": "BODY",
          "name": "paidByPosGateway",
          "type": "boolean",
          "doc": " Whether the order is being paid by the same payment gateway as the POS.\n",
          "required": false
        }
      ],
      "ret":       {
        "type":         {
          "name": "CreateOrder",
          "statusCode": "200",
          "typeParams": ["All APIs.Point of Sale Integration._com_wixpress_restaurants_posspihost_spi_v1_CreateOrderResponse"]
        },
        "doc": ""
      },
      "locations": [],
      "docs":       {
        "summary": " This endpoint creates a new order in the POS service provider's system based on an \n order created on a Wix site.\n\n Wix calls this endpoint when a customer's submits an order and the order is accepted by the site owner.\n \n > You cannot try out this endpoint because it has to be implemented by \n > an app and can have an arbitrary URL. So please ignore the **Authorization** \n > and **POST** sections below as well as the **Try It Out** button.\n \n",
        "description": [],
        "request": "POST",
        "url": "https://www.wixapis.com/restaurants/create-order",
        "links": [],
        "examples": [        {
          "title": "Create order - decoded JWT",
          "body": ["curl -X POST https://provider.example.com/create-order \\\n    -H 'user-agent: Wix' \\\n    -H 'accept-encoding: gzip, deflate' \\\n    -H 'content-type: text/plain; charset=utf-8' \\\n    -d '{\n      \"data\": {\n        \"request\": {\n          \"accountId\": \"accountId\",\n          \"configurationId\": \"23cj812n-18jq-ja81-j211-bf8131nd8ako\"\n          \"order\": {\n            \"payments\": [\n            {\n              \"type\": \"CREDIT\",\n              \"amount\": \"5\"\n            }\n            ],\n            \"lineItems\": [\n            {\n              \"quantity\": 1,\n              \"price\": \"5\",\n              \"comment\": \"an item comment\",\n              \"dishOptions\": []\n            }\n            ],\n            \"id\": \"23c80412-4398-4bbd-a355-bf4875dfac83\",\n            \"comment\": \"order comment\",\n            \"customer\": {\n              \"visitorId\": \"ja81723b-81jd-na81-731j-j818fnsz93j8\",\n              \"email\": \"john@doe.com\",\n              \"lastName\": \"Doe\",\n              \"firstName\": \"John\",\n              \"phone\": \"+119283123\"\n            },\n            \"discounts\": [],\n            \"currency\": \"USD\",\n            \"totals\": {\n              \"subtotal\": \"5\",\n              \"total\": \"5\",\n              \"quantity\": 1\n            }\n          },\n          \"paidByPosGateway\": false\n        },\n        \"metadata\": {\n          \"requestId\": \"1660049071.0775256270934210145\",\n          \"instanceId\": \"49c3c523-0c54-4a63-b488-b9367e65f341\"\n        }\n      },\n        \"aud\": \"e08d593d-3d06-4549-81b5-ef15a34d9bc8\",\n        \"iss\": \"wix.com\",\n        \"iat\": 1660049071,\n        \"exp\": 1663649071\n    }'"],
          "response": ["{\n  \"posOrderId\": \"a_pos_order_id\",\n  \"posLocationId\": \"a_pos_location_id\"\n} "],
          "type": "curl",
          "extra": {"description": "The data payload will include the following object as an encoded JWT. For the purposes of this example, we show the request and response objects decoded."}
        }],
        "extra": {}
      },
      "extra":       {
        "hasRest": true,
        "rpcRequestName": "CreateOrderRequest",
        "rpcResponseName": "CreateOrderResponse"
      },
      "customLabels": [{"id": "maturity-alpha"}]
    },
        {
      "name": "Disconnect Account",
      "methodName": "DisconnectAccount",
      "serviceName": "RestaurantsPosTpaApi",
      "tag": "POS Connectivity API",
      "permissions": [],
      "events": [],
      "labels": [],
      "nameParams": [],
      "requiredFields": ["accountId"],
      "params":       [
                {
          "in": "PATH",
          "name": "accountId",
          "type": "string",
          "doc": " The ID for the account between the merchant and the POS service provider.\n",
          "required": true
        },
                {
          "in": "BODY",
          "name": "appDefId",
          "type": "string",
          "doc": " The app's definition ID.\n",
          "required": false
        }
      ],
      "ret":       {
        "type":         {
          "name": "DisconnectAccount",
          "statusCode": "200",
          "typeParams": ["All APIs.Point of Sale Integration._com_wixpress_restaurants_postpaapi_DisconnectAccountResponse"]
        },
        "doc": ""
      },
      "locations": [],
      "docs":       {
        "summary": " This endpoint disconnects the account between the merchant and the POS service provider. \n\n The account is not deleted. You can reconnect to the account using the POS integration settings in the Dashboard.\n \n Call the [List Account IDs](https://dev.wix.com/api/rest/wix-restaurants/point-of-sale-integration/pos-connectivity-spi/list-account-ids) SPI endpoint to retrieve a list of existing account IDs.\n \n",
        "description": [],
        "request": "POST",
        "url": "https://www.wixapis.com/restaurants/v1/pos-integration/accounts/{accountId}/disconnect",
        "links": [],
        "examples": [        {
          "title": "Disconnect configuration",
          "body": ["curl -X POST https://www.wixapis.com/restaurants/v1/pos-integration/configurations/m81o38zk-3813-4jjq-j355-i38154jeeu11/disconnect \\\n  -H 'Authorization: access_token'"],
          "response": ["{} "],
          "type": "curl",
          "extra": {"description": "Disconnect (toggle off) a specific POS configuration"}
        }],
        "extra": {}
      },
      "extra":       {
        "hasRest": true,
        "rpcRequestName": "DisconnectAccountRequest",
        "rpcResponseName": "DisconnectAccountResponse"
      },
      "customLabels": [{"id": "maturity-alpha"}]
    },
        {
      "name": "Disconnect Configuration",
      "methodName": "DisconnectConfiguration",
      "serviceName": "RestaurantsPosTpaApi",
      "tag": "POS Connectivity API",
      "permissions": [],
      "events": [],
      "labels": [],
      "nameParams": [],
      "requiredFields": ["configurationId"],
      "params": [      {
        "in": "PATH",
        "name": "configurationId",
        "type": "string",
        "doc": " The ID of the merchant's location configuration on Wix.\n",
        "required": true
      }],
      "ret":       {
        "type":         {
          "name": "DisconnectConfiguration",
          "statusCode": "200",
          "typeParams": ["All APIs.Point of Sale Integration._com_wixpress_restaurants_postpaapi_DisconnectConfigurationResponse"]
        },
        "doc": ""
      },
      "locations": [],
      "docs":       {
        "summary": " This endpoint disconnects the Wix location configuration from a POS service provider's location. \n\n The configuration is not deleted. You can reconnect to the configuration using the POS integration settings in the Dashboard.\n \n Call the [List Configurations](https://dev.wix.com/api/rest/wix-restaurants/point-of-sale-integration/pos-connectivity-api/list-configurations) SPI endpoint to retrieve a list of existing configuration IDs.\n \n",
        "description": [],
        "request": "POST",
        "url": "https://www.wixapis.com/restaurants/v1/pos-integration/configurations/{configurationId}/disconnect",
        "links": [],
        "examples": [        {
          "title": "Disconnect configuration",
          "body": ["curl -X POST https://www.wixapis.com/restaurants/v1/pos-integration/accounts/106b5b47-8bc8-456c-9728-9071873848be/disconnect \\\n  -H 'Authorization: access_token' \\\n  -H 'Content-Type: application/json' \\\n  -d '{\n    \"appDefId\": \"d40d4c63-d7f6-4079-b120-d996852892e0\",\n    \"accountId\": \"2adb8c3a-ad8e-4d66-b562-01bfa2459dbf\"\n  }'"],
          "response": ["{} "],
          "type": "curl",
          "extra": {"description": "Disconnect (toggle off) a specific POS configuration"}
        }],
        "extra": {}
      },
      "extra":       {
        "hasRest": true,
        "rpcRequestName": "DisconnectConfigurationRequest",
        "rpcResponseName": "DisconnectConfigurationResponse"
      },
      "customLabels": [{"id": "maturity-alpha"}]
    },
        {
      "name": "Get Catalog Sync Status",
      "methodName": "GetCatalogSyncStatus",
      "serviceName": "RestaurantsPOSProvider",
      "tag": "POS Integration SPI",
      "permissions": [],
      "events": [],
      "labels": [],
      "nameParams": [],
      "requiredFields":       [
        "accountId",
        "configurationId"
      ],
      "params":       [
                {
          "in": "BODY",
          "name": "accountId",
          "type": "string",
          "doc": " Merchant's account ID with the POS system.\n",
          "required": true
        },
                {
          "in": "BODY",
          "name": "configurationId",
          "type": "string",
          "doc": " Unique identifier of the merchant's Wix location configuration.\n",
          "required": true
        }
      ],
      "ret":       {
        "type":         {
          "name": "GetCatalogSyncStatus",
          "statusCode": "200",
          "typeParams": ["All APIs.Point of Sale Integration._com_wixpress_restaurants_posspihost_spi_v1_GetCatalogSyncStatusResponse"]
        },
        "doc": ""
      },
      "locations": [],
      "docs":       {
        "summary": " This endpoint gets the status of the last synchronization between a Wix catalog (menu)\n and the POS service provider's menu.\n\n Wix calls this endpoint, for example, when a customer navigates to a menu's page on the Wix\n site.\n \n > You cannot try out this endpoint because it has to be implemented by \n > an app and can have an arbitrary URL. So please ignore the **Authorization** \n > and **POST** sections below as well as the **Try It Out** button.\n \n",
        "description": [],
        "request": "POST",
        "url": "https://www.wixapis.com/restaurants/get-catalog-sync-status",
        "links": [],
        "examples": [        {
          "title": "Get catalog sync status - decoded JWT",
          "body": ["curl -X POST https://provider.example.com/get-catalog-sync-status \\\n    -H 'user-agent: Wix' \\\n    -H 'accept-encoding: gzip, deflate' \\\n    -H 'content-type: text/plain; charset=utf-8' \\\n    -d '{\n      \"data\": {\n        \"request\": {\n          \"accountId\": \"accountId\",\n          \"configurationId\": \"23cj812n-18jq-ja81-j211-bf8131nd8ako\"\n        },\n          \"metadata\": {\n            \"requestId\": \"1660047943.9775232519261425318\",\n            \"instanceId\": \"8183jadh-0184-jak8-b488-b9367e65f341\"\n          }\n      },\n      \"aud\": \"e08d593d-3d06-4549-81b5-ef15a34d9bc8\",\n      \"iss\": \"wix.com\",\n      \"iat\": 1660047944,\n      \"exp\": 1663647944\n    }'"],
          "response": ["{\"status\": \"SYNCED\"} "],
          "type": "curl",
          "extra": {"description": "The data payload will include the following object as an encoded JWT. For the purposes of this example, we show the request and response objects decoded."}
        }],
        "extra": {}
      },
      "extra":       {
        "hasRest": true,
        "rpcRequestName": "GetCatalogSyncStatusRequest",
        "rpcResponseName": "GetCatalogSyncStatusResponse"
      },
      "customLabels": [{"id": "maturity-alpha"}]
    },
        {
      "name": "Get Configuration",
      "methodName": "GetConfiguration",
      "serviceName": "RestaurantsPosTpaApi",
      "tag": "POS Connectivity API",
      "permissions": [],
      "events": [],
      "labels": [],
      "nameParams": [],
      "requiredFields": ["id"],
      "params": [      {
        "in": "PATH",
        "name": "id",
        "type": "string",
        "doc": " Configuration ID.\n",
        "required": true
      }],
      "ret":       {
        "type":         {
          "name": "GetConfiguration",
          "statusCode": "200",
          "typeParams": ["All APIs.Point of Sale Integration._com_wixpress_restaurants_postpaapi_GetConfigurationResponse"]
        },
        "doc": ""
      },
      "locations": [],
      "docs":       {
        "summary": " This endpoint gets a location configuration by ID on the Wix site.\n \n",
        "description": [],
        "request": "GET",
        "url": "https://www.wixapis.com/restaurants/v1/pos-integration/configurations/{id}",
        "links": [],
        "examples": [        {
          "title": "Get configuration",
          "body": ["curl https://www.wixapis.com/restaurants/v1/pos-integration/configurations/m81o38zk-3813-4jjq-j355-i38154jeeu11 \\\n  -H 'Authorization: access_token'"],
          "response": ["{\"configuration\": {\n  \"id\": \"m81o38zk-3813-4jjq-j355-i38154jeeu11\",\n  \"location\": {\"name\": \"Carrer de l'Hospital\"},\n  \"catalogId\": \"d96b93c8-bd2a-4914-a560-b876990195ab\",\n  \"archived\": false,\n  \"enabled\": false\n}} "],
          "type": "curl",
          "extra": {"description": "Get a specific POS configuration by id"}
        }],
        "extra": {}
      },
      "extra":       {
        "hasRest": true,
        "rpcRequestName": "GetConfigurationRequest",
        "rpcResponseName": "GetConfigurationResponse"
      },
      "customLabels": [{"id": "maturity-alpha"}]
    },
        {
      "name": "Get Configuration Status",
      "methodName": "GetConfigurationStatus",
      "serviceName": "RestaurantsPOSProvider",
      "tag": "POS Integration SPI",
      "permissions": [],
      "events": [],
      "labels": [],
      "nameParams": [],
      "requiredFields":       [
        "accountId",
        "configurationId"
      ],
      "params":       [
                {
          "in": "BODY",
          "name": "accountId",
          "type": "string",
          "doc": " Merchant's account ID with the POS system.\n",
          "required": true
        },
                {
          "in": "BODY",
          "name": "configurationId",
          "type": "string",
          "doc": " Unique identifier of the merchant's Wix location configuration.\n",
          "required": true
        }
      ],
      "ret":       {
        "type":         {
          "name": "GetConfigurationStatus",
          "statusCode": "200",
          "typeParams": ["All APIs.Point of Sale Integration._com_wixpress_restaurants_posspihost_spi_v1_GetConfigurationStatusResponse"]
        },
        "doc": ""
      },
      "locations": [],
      "docs":       {
        "summary": " This endpoint gets the status of a Wix location configuration with the POS \n service provider from your app. The status determines if point of sale operations are allowed\n for the Wix configuration, such as creating an order.\n\n Wix calls this endpoint, for example, when a site owner checks the status of a Wix configuration \n location’s integration with the POS system.\n \n > You cannot try out this endpoint because it has to be implemented by \n > an app and can have an arbitrary URL. So please ignore the **Authorization** \n > and **POST** sections below as well as the **Try It Out** button.\n \n",
        "description": [],
        "request": "POST",
        "url": "https://www.wixapis.com/restaurants/get-configuration-status",
        "links": [],
        "examples": [        {
          "title": "Get configuration status - decoded JWT",
          "body": ["curl -X POST https://provider.example.com/get-configuration-status \\\n    -H 'user-agent: Wix' \\\n    -H 'accept-encoding: gzip, deflate' \\\n    -H 'content-type: text/plain; charset=utf-8' \\\n    -d '{\n      \"data\": {\n        \"request\": {\n          \"accountId\": \"accountId\",\n          \"configurationId\": \"23cj812n-18jq-ja81-j211-bf8131nd8ako\"\n        },\n          \"metadata\": {\n            \"requestId\": \"1660047943.9775232519261425318\",\n            \"instanceId\": \"8183jadh-0184-jak8-b488-b9367e65f341\"\n          }\n      },\n      \"aud\": \"e08d593d-3d06-4549-81b5-ef15a34d9bc8\",\n      \"iss\": \"wix.com\",\n      \"iat\": 1660047944,\n      \"exp\": 1663647944\n    }'"],
          "response": ["{\"status\": \"READY\"} "],
          "type": "curl",
          "extra": {"description": "The data payload will include the following object as an encoded JWT. For the purposes of this example, we show the request and response objects decoded."}
        }],
        "extra": {}
      },
      "extra":       {
        "hasRest": true,
        "rpcRequestName": "GetConfigurationStatusRequest",
        "rpcResponseName": "GetConfigurationStatusResponse"
      },
      "customLabels": [{"id": "maturity-alpha"}]
    },
        {
      "name": "List Account Ids",
      "methodName": "ListAccountIds",
      "serviceName": "RestaurantsPOSProvider",
      "tag": "POS Integration SPI",
      "permissions": [],
      "events": [],
      "labels": [],
      "nameParams": [],
      "params": [],
      "ret":       {
        "type":         {
          "name": "ListAccountIds",
          "statusCode": "200",
          "typeParams": ["All APIs.Point of Sale Integration._com_wixpress_restaurants_posspihost_spi_v1_ListAccountIdsResponse"]
        },
        "doc": ""
      },
      "locations": [],
      "docs":       {
        "summary": " This endpoint retrieves a list of account IDs for a merchant's restaurant\n (instance) using your app.\n\n Wix calls this endpoint, for example, when a site owner checks the status of a Wix configuration \n location’s integration with the POS system.\n \n Each account ID in the response represents an account between the restaurant (instance) \n and the POS serice provider.\n\n These IDs can be used, for example, to create an order using the `Create Order` endpoint.\n\n > You cannot try out this endpoint because it has to be implemented by \n > an app and can have an arbitrary URL. So please ignore the **Authorization** \n > and **POST** sections below as well as the **Try It Out** button.\n \n",
        "description": [],
        "request": "POST",
        "url": "https://www.wixapis.com/restaurants/account-ids",
        "links": [],
        "examples": [        {
          "title": "List account ids - decoded JWT",
          "body": ["curl -X POST https://provider.example.com/account-ids \\\n    -H 'user-agent: Wix' \\\n    -H 'accept-encoding: gzip, deflate' \\\n    -H 'content-type: text/plain; charset=utf-8' \\\n    -d '{\n      \"data\": {\n        \"request\": {},\n          \"metadata\": {\n            \"requestId\": \"1668182838.18239182739842623481\",\n            \"instanceId\": \"a8e8sc8z-qf2a-aj2k-z81n-a8qhnfj284nf\"\n          }\n      },\n      \"aud\": \"al4kdjb3-j83n-qj31-n9zj-zz81j3n49faq\",\n      \"iss\": \"wix.com\",\n      \"iat\": 1660082713,\n      \"exp\": 1663681723\n    }'"],
          "response": ["{\"accountIds\": [\"accountId\"]} "],
          "type": "curl",
          "extra": {"description": "The data payload will include the following object as an encoded JWT. For the purposes of this example, we show the request and response objects decoded."}
        }],
        "extra": {}
      },
      "extra":       {
        "hasRest": true,
        "rpcRequestName": "ListAccountIdsRequest",
        "rpcResponseName": "ListAccountIdsResponse"
      },
      "customLabels": [{"id": "maturity-alpha"}]
    },
        {
      "name": "List Configurations",
      "methodName": "ListConfigurations",
      "serviceName": "RestaurantsPosTpaApi",
      "tag": "POS Connectivity API",
      "permissions": [],
      "events": [],
      "labels": [],
      "nameParams": [],
      "params": [],
      "ret":       {
        "type":         {
          "name": "ListConfigurations",
          "statusCode": "200",
          "typeParams": ["All APIs.Point of Sale Integration._com_wixpress_restaurants_postpaapi_ListConfigurationsResponse"]
        },
        "doc": ""
      },
      "locations": [],
      "docs":       {
        "summary": " This endpoint retrieves a list of location configurations on the Wix site. \n \n",
        "description": [],
        "request": "GET",
        "url": "https://www.wixapis.com/restaurants/v1/pos-integration/configurations",
        "links": [],
        "examples": [        {
          "title": "List configurations",
          "body": ["curl https://www.wixapis.com/restaurants/v1/pos-integration/configurations \\\n  -H 'Authorization: access_token'"],
          "response": ["{\"configurations\": [{\n  \"id\": \"m81o38zk-3813-4jjq-j355-i38154jeeu11\",\n  \"location\": {\"name\": \"Carrer de l'Hospital\"},\n  \"catalogId\": \"z93i13c4-ad2g-1934-p560-h876990195ab\",\n  \"archived\": false,\n  \"enabled\": false\n}]} "],
          "type": "curl",
          "extra": {"description": "List all POS configurations on the metasite"}
        }],
        "extra": {}
      },
      "extra":       {
        "hasRest": true,
        "rpcRequestName": "ListConfigurationsRequest",
        "rpcResponseName": "ListConfigurationsResponse"
      },
      "customLabels": [{"id": "maturity-alpha"}]
    },
        {
      "name": "Sync Catalog",
      "methodName": "SyncCatalog",
      "serviceName": "RestaurantsPOSProvider",
      "tag": "POS Integration SPI",
      "permissions": [],
      "events": [],
      "labels": [],
      "nameParams": [],
      "requiredFields":       [
        "accountId",
        "configurationId"
      ],
      "params":       [
                {
          "in": "BODY",
          "name": "accountId",
          "type": "string",
          "doc": " Merchant's account ID with the POS system.\n",
          "required": true
        },
                {
          "in": "BODY",
          "name": "configurationId",
          "type": "string",
          "doc": " Unique identifier of the merchant's Wix location configuration.\n",
          "required": true
        }
      ],
      "ret":       {
        "type":         {
          "name": "SyncCatalog",
          "statusCode": "200",
          "typeParams": ["All APIs.Point of Sale Integration._com_wixpress_restaurants_posspihost_spi_v1_SyncCatalogResponse"]
        },
        "doc": ""
      },
      "locations": [],
      "docs":       {
        "summary": " This endpoint initiates the synchronization of a catalog as an asynchronous process. The \n synchronization between a Wix catalog and the POS service provider's catalog starts.\n\n Wix calls this endpoint, for example, when a customer first activates the POS integration\n by looking at a catalog (menu) on the Wix site or when a \n site owner synchronizes the catalog.\n \n > You cannot try out this endpoint because it has to be implemented by \n > an app and can have an arbitrary URL. So please ignore the **Authorization** \n > and **POST** sections below as well as the **Try It Out** button.\n \n",
        "description": [],
        "request": "POST",
        "url": "https://www.wixapis.com/restaurants/sync-catalog",
        "links": [],
        "examples": [        {
          "title": "Sync catalog - decoded JWT",
          "body": ["curl -X POST https://provider.example.com/sync-catalog \\\n    -H 'user-agent: Wix' \\\n    -H 'accept-encoding: gzip, deflate' \\\n    -H 'content-type: text/plain; charset=utf-8' \\\n    -d '{\n      \"data\": {\n        \"request\": {\n          \"accountId\": \"accountId\",\n          \"configurationId\": \"23cj812n-18jq-ja81-j211-bf8131nd8ako\"\n        },\n          \"metadata\": {\n            \"requestId\": \"1660047943.9775232519261425318\",\n            \"instanceId\": \"8183jadh-0184-jak8-b488-b9367e65f341\"\n          }\n      },\n      \"aud\": \"e08d593d-3d06-4549-81b5-ef15a34d9bc8\",\n      \"iss\": \"wix.com\",\n      \"iat\": 1660048578,\n      \"exp\": 1663648578\n    }'"],
          "response": ["{} "],
          "type": "curl",
          "extra": {"description": "The data payload will include the following object as an encoded JWT. For the purposes of this example, we show the request and response objects decoded."}
        }],
        "extra": {}
      },
      "extra":       {
        "hasRest": true,
        "rpcRequestName": "SyncCatalogRequest",
        "rpcResponseName": "SyncCatalogResponse"
      },
      "customLabels": [{"id": "maturity-alpha"}]
    },
        {
      "name": "Validate Order",
      "methodName": "ValidateOrder",
      "serviceName": "RestaurantsPOSProvider",
      "tag": "POS Integration SPI",
      "permissions": [],
      "events": [],
      "labels": [],
      "nameParams": [],
      "requiredFields":       [
        "accountId",
        "configurationId"
      ],
      "params":       [
                {
          "in": "BODY",
          "name": "accountId",
          "type": "string",
          "doc": " Merchant's account ID with the POS system.\n",
          "required": true
        },
                {
          "in": "BODY",
          "name": "configurationId",
          "type": "string",
          "doc": " Unique identifier of the merchant's Wix location configuration.\n",
          "required": true
        },
                {
          "in": "BODY",
          "name": "order",
          "type": "All APIs.Point of Sale Integration._com_wixpress_restaurants_posspihost_spi_v1_WixOrder",
          "doc": " Details of the order created on the Wix site.\n",
          "required": false
        }
      ],
      "ret":       {
        "type":         {
          "name": "ValidateOrder",
          "statusCode": "200",
          "typeParams": ["All APIs.Point of Sale Integration._com_wixpress_restaurants_posspihost_spi_v1_ValidateOrderResponse"]
        },
        "doc": ""
      },
      "locations": [],
      "docs":       {
        "summary": " This endpoint validates an order in the POS service provider's system.\n\n Wix can call this endpoint before a customer's order is created on the POS service\n provider's system. This is done to make sure orders can be submitted without errors.\n \n > You cannot try out this endpoint because it has to be implemented by \n > an app and can have an arbitrary URL. So please ignore the **Authorization** \n > and **POST** sections below as well as the **Try It Out** button.\n \n",
        "description": [],
        "request": "POST",
        "url": "https://www.wixapis.com/restaurants/validate-order",
        "links": [],
        "examples": [        {
          "title": "Validate order - decoded JWT",
          "body": ["curl -X POST https://provider.example.com/validate-order \\\n    -H 'user-agent: Wix' \\\n    -H 'accept-encoding: gzip, deflate' \\\n    -H 'content-type: text/plain; charset=utf-8' \\\n    -d '{\n      \"data\": {\n        \"request\": {\n          \"accountId\": \"accountId\",\n          \"configurationId\": \"23cj812n-18jq-ja81-j211-bf8131nd8ako\"\n          \"order\": {\n            \"payments\": [\n            {\n              \"type\": \"CREDIT\",\n              \"amount\": \"5\"\n            }\n            ],\n            \"lineItems\": [\n            {\n              \"quantity\": 1,\n              \"price\": \"5\",\n              \"comment\": \"an item comment\",\n              \"dishOptions\": []\n            }\n            ],\n            \"id\": \"23c80412-4398-4bbd-a355-bf4875dfac83\",\n            \"comment\": \"order comment\",\n            \"customer\": {\n              \"visitorId\": \"ja81723b-81jd-na81-731j-j818fnsz93j8\",\n              \"email\": \"john@doe.com\",\n              \"lastName\": \"Doe\",\n              \"firstName\": \"John\",\n              \"phone\": \"+119283123\"\n            },\n            \"discounts\": [],\n            \"currency\": \"USD\",\n            \"totals\": {\n              \"subtotal\": \"5\",\n              \"total\": \"5\",\n              \"quantity\": 1\n            }\n          },\n          \"paidByPosGateway\": false\n        },\n        \"metadata\": {\n          \"requestId\": \"1660049071.0775256270934210145\",\n          \"instanceId\": \"49c3c523-0c54-4a63-b488-b9367e65f341\"\n        }\n      },\n        \"aud\": \"e08d593d-3d06-4549-81b5-ef15a34d9bc8\",\n        \"iss\": \"wix.com\",\n        \"iat\": 1660049071,\n        \"exp\": 1663649071\n    }'"],
          "response": ["{\"posOrderStatus\": \"accepted\"} "],
          "type": "curl",
          "extra": {"description": "The data payload will include the following object as an encoded JWT. For the purposes of this example, we show the request and response objects decoded."}
        }],
        "extra": {}
      },
      "extra":       {
        "hasRest": true,
        "rpcRequestName": "ValidateOrderRequest",
        "rpcResponseName": "ValidateOrderResponse"
      },
      "customLabels": [{"id": "maturity-alpha"}]
    }
  ],
  "events": [],
  "callbacks": [],
  "messages":   [
        {
      "name": "_com_wixpress_restaurants_posspihost_ConfigurationCreatedDomainEvent",
      "displayName": "Configuration Created Domain Event Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "id",
          "type": "string",
          "doc": "Unique event ID."
        },
                {
          "name": "entityFqdn",
          "type": "string",
          "doc": "Expected `wix.restaurants.posspihost.v1.configuration`.\nFully Qualified Domain Name."
        },
                {
          "name": "slug",
          "type": "string",
          "doc": "Expected `created`.\nEvent name."
        },
                {
          "name": "createdEvent",
          "type": "All APIs.Point of Sale Integration._com_wixpress_restaurants_posspihost_ConfigurationEntityCreatedEvent",
          "doc": "Event Info"
        },
                {
          "name": "entityId",
          "type": "string",
          "doc": "Configuration ID associated with this event."
        },
                {
          "name": "eventTime",
          "type": "string",
          "doc": "Event timestamp."
        },
                {
          "name": "triggeredByAnonymizeRequest",
          "type": "boolean",
          "doc": "Whether this event was triggered as a result of a privacy regulation application (e.g., GDPR)."
        },
                {
          "name": "originatedFrom",
          "type": "string",
          "doc": "If present, indicates the action that triggered the event."
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_restaurants_posspihost_ConfigurationEntityCreatedEvent",
      "displayName": "Configuration Entity Created Event Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "entityAsJson",
        "type": "All APIs.Point of Sale Integration._com_wixpress_restaurants_posspihost_Configuration",
        "doc": "Event body as a stringified JSON"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_restaurants_posspihost_Configuration",
      "displayName": "Configuration Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "id",
          "type": "string",
          "doc": " Configuration ID.\n"
        },
                {
          "name": "locationId",
          "type": "string",
          "doc": " Location ID.\n"
        },
                {
          "name": "metaSiteId",
          "type": "string",
          "doc": " Metasite ID.\n"
        },
                {
          "name": "appDefId",
          "type": "string",
          "doc": " Application definition ID.\n"
        },
                {
          "name": "enabled",
          "type": "boolean",
          "doc": " Whether a location configuration is enabled.\n"
        },
                {
          "name": "archived",
          "type": "boolean",
          "doc": " Whether a location configuration is archived.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_restaurants_orders_v3_LineItem_CatalogReference",
      "displayName": "Catalog Reference Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "catalogItemId",
          "type": "string",
          "doc": " Line item ID as defined in the catalog.\n"
        },
                {
          "name": "catalogItemName",
          "type": "string",
          "doc": " Line item name as defined in the catalog.\n",
          "readOnly": true
        },
                {
          "name": "catalogItemDescription",
          "type": "string",
          "doc": " Item description as defined in the catalog.\n",
          "readOnly": true
        },
                {
          "name": "catalogItemMedia",
          "type": "string",
          "doc": " Item media url as defined in the catalog.\n",
          "readOnly": true
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_restaurants_orders_v3_LineItem",
      "displayName": "Line Item Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "quantity",
          "type": "integer",
          "doc": " Line item quantity.\n"
        },
                {
          "name": "price",
          "type": "string",
          "doc": " Line item price.\n"
        },
                {
          "name": "comment",
          "type": "string",
          "doc": " Comment about the line item added by the customer.\n"
        },
                {
          "name": "dishOptions",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Point of Sale Integration._com_wixpress_restaurants_orders_v3_LineItemOption"]
          },
          "doc": " List of all dish options available for the line item.\n"
        },
                {
          "name": "catalogReference",
          "type": "All APIs.Point of Sale Integration._com_wixpress_restaurants_orders_v3_LineItem_CatalogReference",
          "doc": " References to the line item’s origin catalog.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_restaurants_orders_v3_LineItemOption",
      "displayName": "Line Item Option Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "name",
          "type": "string",
          "doc": " Line item option name.\n"
        },
                {
          "name": "selectedChoices",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Point of Sale Integration._com_wixpress_restaurants_orders_v3_LineItem"]
          },
          "doc": " List of all dish options selected by the customer.\n"
        },
                {
          "name": "minChoices",
          "type": "integer",
          "doc": " Minimum number of dish options the customer is required to choose.\n"
        },
                {
          "name": "maxChoices",
          "type": "integer",
          "doc": " Maximum number of dish options the customer is allowed to choose.\n"
        },
                {
          "name": "type",
          "type": "All APIs.Point of Sale Integration._com_wixpress_restaurants_orders_v3_LineItemOption_DisplayType",
          "doc": " Dish option type.\n"
        },
                {
          "name": "availableChoices",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Point of Sale Integration._com_wixpress_restaurants_orders_v3_LineItemOptionItem"]
          },
          "doc": " List of all available choices for the dish option.\n"
        },
                {
          "name": "defaultChoices",
          "type":           {
            "name": "array",
            "typeParams": ["string"]
          },
          "doc": " List of dish option IDs selected by default.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_restaurants_orders_v3_LineItemOptionItem",
      "displayName": "Line Item Option Item Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "itemId",
          "type": "string",
          "doc": " Line item ID as defined in the catalog.\n"
        },
                {
          "name": "price",
          "type": "string",
          "doc": " Line item price.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_restaurants_orders_v3_Discount",
      "displayName": "Discount Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "catalogDiscountId",
          "type": "string",
          "doc": " Discount ID as defined in the catalog.\n"
        },
                {
          "name": "appliedAmount",
          "type": "string",
          "doc": " Amount saved.\n"
        },
                {
          "name": "catalogDiscountType",
          "type": "All APIs.Point of Sale Integration._com_wixpress_restaurants_orders_v3_Discount_DiscountType",
          "doc": " Discount type.\n"
        },
                {
          "name": "catalogDiscountName",
          "type": "string",
          "doc": " Discount name as defined in the catalog.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_restaurants_orders_v3_Payment",
      "displayName": "Payment Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "type",
          "type": "All APIs.Point of Sale Integration._com_wixpress_restaurants_orders_v3_Payment_Type",
          "doc": " Payment type.\n"
        },
                {
          "name": "amount",
          "type": "string",
          "doc": " Amount paid using this payment type. Only differs from total amount paid in case of split payments.\n"
        },
                {
          "name": "method",
          "type": "string",
          "doc": " Payment method.\n"
        },
                {
          "name": "providerTransactionId",
          "type": "string",
          "doc": " Transaction ID.\n See [Cashier API](https://dev.wix.com/api/rest/wix-cashier/payments/transaction) for more details.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_restaurants_orders_v3_Fulfillment",
      "displayName": "Fulfillment Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "type",
          "type": "All APIs.Point of Sale Integration._com_wixpress_restaurants_orders_v3_Fulfillment_Type",
          "doc": " Fulfillment type.\n"
        },
                {
          "name": "promisedTime",
          "type": "string",
          "doc": " Latest delivery time promised by the restaurant.\n"
        },
                {
          "name": "asap",
          "type": "boolean",
          "doc": " Whether the order should be fulfilled as soon as possible. Defaults to `true`.\n"
        },
                {
          "name": "details",
          "type": "All APIs.Point of Sale Integration._com_wixpress_restaurants_orders_v3_Fulfillment_details",
          "doc": ""
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_restaurants_orders_v3_Fulfillment_details",
      "displayName": "details Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "deliveryDetails",
          "type": "All APIs.Point of Sale Integration._com_wixpress_restaurants_orders_v3_DeliveryDetails",
          "doc": " Delivery details.\n"
        },
                {
          "name": "pickupDetails",
          "type": "All APIs.Point of Sale Integration._com_wixpress_restaurants_orders_v3_PickupDetails",
          "doc": " Pickup details.\n"
        },
                {
          "name": "dineInDetails",
          "type": "All APIs.Point of Sale Integration._com_wixpress_restaurants_orders_v3_DineInDetails",
          "doc": " Dine-in details\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": [],
      "oneOf": true
    },
        {
      "name": "_com_wixpress_restaurants_orders_v3_DeliveryDetails_Restaurant",
      "displayName": "Restaurant Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "fee",
        "type": "string",
        "doc": " Delivery fee.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_restaurants_orders_v3_DeliveryDetails_ExternalProvider",
      "displayName": "External Provider Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "id",
          "type": "string",
          "doc": " ID of the external delivery provider.\n"
        },
                {
          "name": "name",
          "type": "string",
          "doc": " Name of the external delivery provider.\n",
          "readOnly": true
        },
                {
          "name": "customerFee",
          "type": "string",
          "doc": " Delivery fee charged to the customer.\n"
        },
                {
          "name": "commission",
          "type": "string",
          "doc": " Fee paid by the restaurant to the external delivery provider.\n",
          "readOnly": true
        },
                {
          "name": "pickupTime",
          "type": "string",
          "doc": " Order pickup time.\n"
        },
                {
          "name": "dropOffTime",
          "type": "string",
          "doc": " Order drop off time.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_restaurants_orders_v3_DeliveryDetails_PickupInfo",
      "displayName": "Pickup Info Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "windowStartTime",
          "type": "string",
          "doc": " When a delivery is ready to be picked up. This is the start time of the pickup window.\n"
        },
                {
          "name": "windowEndTime",
          "type": "string",
          "doc": " When a delivery must be picked up by. This is the end time of the pickup window.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_restaurants_orders_v3_DeliveryDetails_DropOffInfo",
      "displayName": "Drop Off Info Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "contactless",
        "type": "boolean",
        "doc": " Whether the order is delivered contactless.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_restaurants_orders_v3_DeliveryDetails",
      "displayName": "Delivery Details Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "address",
          "type": "All APIs.Point of Sale Integration._com_wixpress_restaurants_orders_v3_DeliveryAddress",
          "doc": " Delivery address.\n"
        },
                {
          "name": "provider",
          "type": "All APIs.Point of Sale Integration._com_wixpress_restaurants_orders_v3_DeliveryDetails_provider",
          "doc": ""
        },
                {
          "name": "pickupInfo",
          "type": "All APIs.Point of Sale Integration._com_wixpress_restaurants_orders_v3_DeliveryDetails_PickupInfo",
          "doc": " Information about the delivery pickup.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_restaurants_orders_v3_DeliveryDetails_provider",
      "displayName": "provider Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "restaurant",
          "type": "All APIs.Point of Sale Integration._com_wixpress_restaurants_orders_v3_DeliveryDetails_Restaurant",
          "doc": " Delivery through the restaurant.\n"
        },
                {
          "name": "externalProvider",
          "type": "All APIs.Point of Sale Integration._com_wixpress_restaurants_orders_v3_DeliveryDetails_ExternalProvider",
          "doc": " Delivery through an external provider.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": [],
      "oneOf": true
    },
        {
      "name": "_com_wixpress_restaurants_orders_v3_PickupDetails_Curbside",
      "displayName": "Curbside Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "info",
        "type": "string",
        "doc": " Additional information for curbside pickup.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_restaurants_orders_v3_PickupDetails",
      "displayName": "Pickup Details Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "fee",
          "type": "string",
          "doc": " Pickup fee charged to the customer.\n"
        },
                {
          "name": "curbside",
          "type": "All APIs.Point of Sale Integration._com_wixpress_restaurants_orders_v3_PickupDetails_Curbside",
          "doc": "Curbside pickup method\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_restaurants_orders_v3_DineInDetails",
      "displayName": "Dine In Details Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "label",
          "type": "string",
          "doc": " Label of dine-in information added by the restaurant, e.g. `table` or `booth`.\n"
        },
                {
          "name": "value",
          "type": "string",
          "doc": " Value of dine-in information added by the restaurant, e.g. `#6`.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_restaurants_orders_v3_DeliveryAddress",
      "displayName": "Delivery Address Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "formatted",
          "type": "string",
          "doc": " Formatted delivery address.\n"
        },
                {
          "name": "country",
          "type": "string",
          "doc": " Country.\n"
        },
                {
          "name": "city",
          "type": "string",
          "doc": " City name.\n"
        },
                {
          "name": "street",
          "type": "string",
          "doc": " Street name.\n"
        },
                {
          "name": "streetNumber",
          "type": "string",
          "doc": " Street number.\n"
        },
                {
          "name": "apt",
          "type": "string",
          "doc": " Apartment number.\n"
        },
                {
          "name": "floor",
          "type": "string",
          "doc": " Floor.\n"
        },
                {
          "name": "entrance",
          "type": "string",
          "doc": " Entrance.\n"
        },
                {
          "name": "zipCode",
          "type": "string",
          "doc": " ZIP/postal code.\n"
        },
                {
          "name": "countryCode",
          "type": "string",
          "doc": " Country code in [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) format.\n"
        },
                {
          "name": "onArrival",
          "type": "All APIs.Point of Sale Integration._com_wixpress_restaurants_orders_v3_DeliveryAddress_OnArrival",
          "doc": " Special delivery instructions upon arrival to the address.\n"
        },
                {
          "name": "approximate",
          "type": "boolean",
          "doc": " Whether an approximate address is used. Defaults to `false`. In case of `false` a house number is required.\n"
        },
                {
          "name": "comment",
          "type": "string",
          "doc": " Delivery Instructions added by the customer.\n"
        },
                {
          "name": "location",
          "type": "All APIs.Point of Sale Integration._com_wixpress_restaurants_orders_v3_DeliveryAddressLocation",
          "doc": " Geo coordinates of the address.\n"
        },
                {
          "name": "addressLine2",
          "type": "string",
          "doc": " Address Line 2.\n"
        },
                {
          "name": "subdivision",
          "type": "string",
          "doc": " Subdivision. Usually a state, region, prefecture, or province code, according to [ISO 3166-2](https://en.wikipedia.org/wiki/ISO_3166-2).\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_restaurants_orders_v3_DeliveryAddressLocation",
      "displayName": "Delivery Address Location Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "latitude",
          "type": "number",
          "doc": " Address latitude.\n"
        },
                {
          "name": "longitude",
          "type": "number",
          "doc": " Address longitude.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_restaurants_orders_v3_Customer",
      "displayName": "Customer Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "firstName",
          "type": "string",
          "doc": " First name.\n"
        },
                {
          "name": "lastName",
          "type": "string",
          "doc": " Last name.\n"
        },
                {
          "name": "phone",
          "type": "string",
          "doc": " Phone number.\n"
        },
                {
          "name": "email",
          "type": "string",
          "doc": " Email address.\n"
        },
                {
          "name": "contactId",
          "type": "string",
          "doc": " Customer's contact ID.\n See [Contacts API](https://dev.wix.com/api/rest/contacts/contacts/contacts-v4) for more details.\n"
        },
                {
          "name": "id",
          "type": "All APIs.Point of Sale Integration._com_wixpress_restaurants_orders_v3_Customer_id",
          "doc": " Customer's visitor or member ID.\n See [Members API](https://https://dev.wix.com/api/rest/members/members) for more details.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_restaurants_orders_v3_Customer_id",
      "displayName": "id Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "memberId",
          "type": "string",
          "doc": " Member ID.\n"
        },
                {
          "name": "visitorId",
          "type": "string",
          "doc": " Visitor ID.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": [],
      "oneOf": true
    },
        {
      "name": "_com_wixpress_restaurants_orders_v3_Totals",
      "displayName": "Totals Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "subtotal",
          "type": "string",
          "doc": " Order subtotal. Calculated by substracting delivery fee, tax and discount from order total.\n"
        },
                {
          "name": "total",
          "type": "string",
          "doc": " Total order price.\n"
        },
                {
          "name": "delivery",
          "type": "string",
          "doc": " Total delivery fees charged to the customer.\n"
        },
                {
          "name": "tax",
          "type": "string",
          "doc": " Total tax.\n"
        },
                {
          "name": "discount",
          "type": "string",
          "doc": " Total discount amount.\n"
        },
                {
          "name": "loyaltySavings",
          "type": "string",
          "doc": " Total amount saved through the Wix Loyalty program.\n"
        },
                {
          "name": "quantity",
          "type": "integer",
          "doc": " Total number of line items.\n",
          "readOnly": true
        },
                {
          "name": "tip",
          "type": "string",
          "doc": " Total tip.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_restaurants_posspihost_spi_v1_CatalogSyncConfiguration",
      "displayName": "Catalog Sync Configuration Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "entityAvailabilityUpdated",
          "type": "All APIs.Point of Sale Integration._com_wixpress_restaurants_posspihost_spi_v1_CatalogSyncConfiguration_Default",
          "doc": " Whether Menu/Section/Dish availability will be updated on the POS side or on Wix Menus.\n"
        },
                {
          "name": "fulfillmentMethodsDefinition",
          "type": "All APIs.Point of Sale Integration._com_wixpress_restaurants_posspihost_spi_v1_CatalogSyncConfiguration_Default",
          "doc": " Whether fulfillment method will be defined on the POS side or on Wix menus.\n"
        },
                {
          "name": "dishImagesUpdated",
          "type": "All APIs.Point of Sale Integration._com_wixpress_restaurants_posspihost_spi_v1_CatalogSyncConfiguration_Default",
          "doc": " Whether Dish images will be updated on the POS side or on Wix Menus.\n"
        },
                {
          "name": "entitySortingControl",
          "type": "All APIs.Point of Sale Integration._com_wixpress_restaurants_posspihost_spi_v1_CatalogSyncConfiguration_Default",
          "doc": " Whether sorting (Menu/Category/Dish/Options) will be done on the POS side (API order) or on Wix Menus.\n"
        },
                {
          "name": "dishLabelsUpdated",
          "type": "All APIs.Point of Sale Integration._com_wixpress_restaurants_posspihost_spi_v1_CatalogSyncConfiguration_Default",
          "doc": " Whether Labels will be updated on the POS side or on Wix Menus.\n"
        },
                {
          "name": "dishOptionsMinMaxUpdated",
          "type": "All APIs.Point of Sale Integration._com_wixpress_restaurants_posspihost_spi_v1_CatalogSyncConfiguration_Default",
          "doc": " whether min/max amount of choices to be set on the POS side or on Wix Menus.\n"
        },
                {
          "name": "dishInStockUpdated",
          "type": "All APIs.Point of Sale Integration._com_wixpress_restaurants_posspihost_spi_v1_CatalogSyncConfiguration_Default",
          "doc": " Whether Dish in/out of stock will be updated on Wix Menus or retrieved from POS.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_restaurants_site_properties_syncer_RestaurantLocationsUpdatedEvent_SpecialEvent",
      "displayName": "Special Event Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "type",
          "type": "All APIs.Point of Sale Integration._com_wixpress_restaurants_site_properties_syncer_RestaurantLocationsUpdatedEvent_SpecialEvent_Type",
          "doc": ""
        },
                {
          "name": "locationId",
          "type": "string",
          "doc": ""
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_restaurants_site_properties_syncer_RestaurantLocationsUpdatedEvent_RestaurantLocationProperties",
      "displayName": "Restaurant Location Properties Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "locationId",
          "type": "string",
          "doc": ""
        },
                {
          "name": "defaultLocation",
          "type": "boolean",
          "doc": ""
        },
                {
          "name": "archived",
          "type": "boolean",
          "doc": ""
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_restaurants_site_properties_syncer_RestaurantLocationsUpdatedEvent",
      "displayName": "Restaurant Locations Updated Event Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "metaSiteId",
          "type": "string",
          "doc": ""
        },
                {
          "name": "triggerBy",
          "type": "All APIs.Point of Sale Integration._com_wixpress_restaurants_site_properties_syncer_SyncLocationsSource",
          "doc": ""
        },
                {
          "name": "prevLocationsProperties",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Point of Sale Integration._com_wixpress_restaurants_site_properties_syncer_RestaurantLocationsUpdatedEvent_RestaurantLocationProperties"]
          },
          "doc": ""
        },
                {
          "name": "updatedLocationsProperties",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Point of Sale Integration._com_wixpress_restaurants_site_properties_syncer_RestaurantLocationsUpdatedEvent_RestaurantLocationProperties"]
          },
          "doc": ""
        },
                {
          "name": "specialEvent",
          "type": "All APIs.Point of Sale Integration._com_wixpress_restaurants_site_properties_syncer_RestaurantLocationsUpdatedEvent_SpecialEvent",
          "doc": ""
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_google_protobuf_Empty",
      "displayName": "Empty Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_common_domainevents_EntityCreatedEvent",
      "displayName": "Entity Created Event Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "entityAsJson",
        "type": "string",
        "doc": ""
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_common_domainevents_EntityUpdatedEvent",
      "displayName": "Entity Updated Event Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "currentEntityAsJson",
        "type": "string",
        "doc": " Since platformized APIs only expose PATCH and not PUT we can't assume that the fields sent from the client are the actual diff.\n This means that to generate a list of changed fields (as opposed to sent fields) one needs to traverse both objects.\n We don't want to impose this on all developers and so we leave this traversal to the notification recipients which need it.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_common_domainevents_EntityDeletedEvent",
      "displayName": "Entity Deleted Event Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_common_domainevents_ActionEvent",
      "displayName": "Action Event Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "bodyAsJson",
        "type": "string",
        "doc": ""
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_common_domainevents_ExtendedFieldsUpdatedEvent",
      "displayName": "Extended Fields Updated Event Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "currentEntityAsJson",
        "type": "string",
        "doc": ""
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_common_domainevents_DomainEvent",
      "displayName": "Domain Event Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "id",
          "type": "string",
          "doc": " random GUID so clients can tell if event was already handled\n"
        },
                {
          "name": "entityFqdn",
          "type": "string",
          "doc": " Assumes actions are also always typed to an entity_type\n Example: wix.stores.catalog.product, wix.bookings.session, wix.payments.transaction\n"
        },
                {
          "name": "slug",
          "type": "string",
          "doc": " This is top level to ease client code dipatching of messages (switch on entity_fqdn+slug)\n This is although the created/updated/deleted notion is duplication of the oneof types\n Example: created/updated/deleted/started/completed/email_opened\n"
        },
                {
          "name": "entityId",
          "type": "string",
          "doc": " Assuming that all messages including Actions have id\n Example: The id of the specific order, the id of a specific campaign\n"
        },
                {
          "name": "body",
          "type": "All APIs.Point of Sale Integration._wix_common_domainevents_DomainEvent_body",
          "doc": ""
        },
                {
          "name": "eventTime",
          "type": "string",
          "doc": " The time of the event. Useful if there was a delay in dipatching\n"
        },
                {
          "name": "triggeredByAnonymizeRequest",
          "type": "boolean",
          "doc": " A field that should be set if this event was triggered by an anonymize request.\n For example you must set it to true when sending an event as a result of a GDPR right to be forgotten request.\n NOTE: This field is not relevant for `EntityCreatedEvent` but is located here for better ergonomics of consumers.\n"
        },
                {
          "name": "originatedFrom",
          "type": "string",
          "doc": " If present, indicates the action that triggered the event.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_common_domainevents_DomainEvent_body",
      "displayName": "body Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "createdEvent",
          "type": "All APIs.Point of Sale Integration._wix_common_domainevents_EntityCreatedEvent",
          "doc": ""
        },
                {
          "name": "updatedEvent",
          "type": "All APIs.Point of Sale Integration._wix_common_domainevents_EntityUpdatedEvent",
          "doc": ""
        },
                {
          "name": "deletedEvent",
          "type": "All APIs.Point of Sale Integration._wix_common_domainevents_EntityDeletedEvent",
          "doc": ""
        },
                {
          "name": "actionEvent",
          "type": "All APIs.Point of Sale Integration._wix_common_domainevents_ActionEvent",
          "doc": ""
        },
                {
          "name": "extendedFieldsUpdatedEvent",
          "type": "All APIs.Point of Sale Integration._wix_common_domainevents_ExtendedFieldsUpdatedEvent",
          "doc": ""
        }
      ],
      "enum": null,
      "extra": {},
      "labels": [],
      "oneOf": true
    },
        {
      "name": "_com_wixpress_metasite_event_api_Asset",
      "displayName": "Asset Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "appDefId",
          "type": "string",
          "doc": ""
        },
                {
          "name": "instanceId",
          "type": "string",
          "doc": ""
        },
                {
          "name": "state",
          "type": "All APIs.Point of Sale Integration._com_wixpress_metasite_event_api_Asset_State",
          "doc": ""
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_metasite_event_api_DeleteContext",
      "displayName": "Delete Context Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "dateDeleted",
          "type": "string",
          "doc": ""
        },
                {
          "name": "deleteStatus",
          "type": "All APIs.Point of Sale Integration._com_wixpress_metasite_event_api_DeleteContext_DeleteStatus",
          "doc": ""
        },
                {
          "name": "deleteOrigin",
          "type": "string",
          "doc": ""
        },
                {
          "name": "initiatorId",
          "type": "string",
          "doc": ""
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_metasite_event_api_SiteCreated",
      "displayName": "Site Created Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "originTemplateId",
          "type": "string",
          "doc": ""
        },
                {
          "name": "ownerId",
          "type": "string",
          "doc": ""
        },
                {
          "name": "context",
          "type": "All APIs.Point of Sale Integration._com_wixpress_metasite_event_api_SiteCreatedContext",
          "doc": ""
        },
                {
          "name": "originMetaSiteId",
          "type": "string",
          "doc": "\nA meta site id from which this site was created.\n\nIn case of a creation from a template it's a template id.\nIn case of a site duplication (\"Save As\" in dashboard or duplicate in UM) it's an id of a source site.\n"
        },
                {
          "name": "siteName",
          "type": "string",
          "doc": ""
        },
                {
          "name": "namespace",
          "type": "All APIs.Point of Sale Integration._com_wixpress_metasite_event_api_MetaSite_Namespace",
          "doc": ""
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_metasite_event_api_SiteHardDeleted",
      "displayName": "Site Hard Deleted Object",
      "locations": [],
      "docs":       {
        "summary": "\nHard deletion of the meta site.\n\nCould not be restored. Therefore it's desirable to cleanup data.\n",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "deleteContext",
        "type": "All APIs.Point of Sale Integration._com_wixpress_metasite_event_api_DeleteContext",
        "doc": ""
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_metasite_event_api_SiteDeleted",
      "displayName": "Site Deleted Object",
      "locations": [],
      "docs":       {
        "summary": " Soft deletion of the meta site. Could be restored.\n",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "deleteContext",
        "type": "All APIs.Point of Sale Integration._com_wixpress_metasite_event_api_DeleteContext",
        "doc": ""
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_metasite_event_api_SiteUndeleted",
      "displayName": "Site Undeleted Object",
      "locations": [],
      "docs":       {
        "summary": " Restoration of the meta site.\n",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_metasite_event_api_SitePublished",
      "displayName": "Site Published Object",
      "locations": [],
      "docs":       {
        "summary": " First publish of a meta site. Or subsequent publish after unpublish.\n",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_metasite_event_api_SiteUnpublished",
      "displayName": "Site Unpublished Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "urls",
        "type":         {
          "name": "array",
          "typeParams": ["string"]
        },
        "doc": ""
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_metasite_event_api_SiteTransferred",
      "displayName": "Site Transferred Object",
      "locations": [],
      "docs":       {
        "summary": " Site transferred to another user.\n",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "oldOwnerId",
          "type": "string",
          "doc": " A previous owner id (user that transfers meta site).\n"
        },
                {
          "name": "newOwnerId",
          "type": "string",
          "doc": " A new owner id (user that accepts meta site).\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_metasite_event_api_SiteMarkedAsTemplate",
      "displayName": "Site Marked As Template Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_metasite_event_api_SiteMarkedAsWixSite",
      "displayName": "Site Marked As Wix Site Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_metasite_event_api_ServiceProvisioned",
      "displayName": "Service Provisioned Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "appDefId",
          "type": "string",
          "doc": " Either UUID or EmbeddedServiceType.\n"
        },
                {
          "name": "instanceId",
          "type": "string",
          "doc": " Not only UUID. Something here could be something weird.\n"
        },
                {
          "name": "originInstanceId",
          "type": "string",
          "doc": ""
        },
                {
          "name": "version",
          "type": "string",
          "doc": ""
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_metasite_event_api_ServiceRemoved",
      "displayName": "Service Removed Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "appDefId",
          "type": "string",
          "doc": ""
        },
                {
          "name": "instanceId",
          "type": "string",
          "doc": ""
        },
                {
          "name": "version",
          "type": "string",
          "doc": ""
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_metasite_event_api_SiteRenamed",
      "displayName": "Site Renamed Object",
      "locations": [],
      "docs":       {
        "summary": " Rename of the site. Meaning, free public url has been changed as well. ",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "newSiteName",
          "type": "string",
          "doc": ""
        },
                {
          "name": "oldSiteName",
          "type": "string",
          "doc": ""
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_metasite_event_api_NamespaceChanged",
      "displayName": "Namespace Changed Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "oldNamespace",
          "type": "All APIs.Point of Sale Integration._com_wixpress_metasite_event_api_MetaSite_Namespace",
          "doc": ""
        },
                {
          "name": "newNamespace",
          "type": "All APIs.Point of Sale Integration._com_wixpress_metasite_event_api_MetaSite_Namespace",
          "doc": ""
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_metasite_event_api_MetaSiteSpecialEvent",
      "displayName": "Meta Site Special Event Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "metaSiteId",
          "type": "string",
          "doc": ""
        },
                {
          "name": "version",
          "type": "string",
          "doc": ""
        },
                {
          "name": "timestamp",
          "type": "string",
          "doc": ""
        },
                {
          "name": "assets",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Point of Sale Integration._com_wixpress_metasite_event_api_Asset"]
          },
          "doc": ""
        },
                {
          "name": "payload",
          "type": "All APIs.Point of Sale Integration._com_wixpress_metasite_event_api_MetaSiteSpecialEvent_payload",
          "doc": ""
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_metasite_event_api_MetaSiteSpecialEvent_payload",
      "displayName": "payload Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "siteCreated",
          "type": "All APIs.Point of Sale Integration._com_wixpress_metasite_event_api_SiteCreated",
          "doc": ""
        },
                {
          "name": "siteTransferred",
          "type": "All APIs.Point of Sale Integration._com_wixpress_metasite_event_api_SiteTransferred",
          "doc": ""
        },
                {
          "name": "siteDeleted",
          "type": "All APIs.Point of Sale Integration._com_wixpress_metasite_event_api_SiteDeleted",
          "doc": ""
        },
                {
          "name": "siteUndeleted",
          "type": "All APIs.Point of Sale Integration._com_wixpress_metasite_event_api_SiteUndeleted",
          "doc": ""
        },
                {
          "name": "sitePublished",
          "type": "All APIs.Point of Sale Integration._com_wixpress_metasite_event_api_SitePublished",
          "doc": ""
        },
                {
          "name": "siteUnpublished",
          "type": "All APIs.Point of Sale Integration._com_wixpress_metasite_event_api_SiteUnpublished",
          "doc": ""
        },
                {
          "name": "siteMarkedAsTemplate",
          "type": "All APIs.Point of Sale Integration._com_wixpress_metasite_event_api_SiteMarkedAsTemplate",
          "doc": ""
        },
                {
          "name": "siteMarkedAsWixSite",
          "type": "All APIs.Point of Sale Integration._com_wixpress_metasite_event_api_SiteMarkedAsWixSite",
          "doc": ""
        },
                {
          "name": "serviceProvisioned",
          "type": "All APIs.Point of Sale Integration._com_wixpress_metasite_event_api_ServiceProvisioned",
          "doc": ""
        },
                {
          "name": "serviceRemoved",
          "type": "All APIs.Point of Sale Integration._com_wixpress_metasite_event_api_ServiceRemoved",
          "doc": ""
        },
                {
          "name": "siteRenamedPayload",
          "type": "All APIs.Point of Sale Integration._com_wixpress_metasite_event_api_SiteRenamed",
          "doc": ""
        },
                {
          "name": "hardDeleted",
          "type": "All APIs.Point of Sale Integration._com_wixpress_metasite_event_api_SiteHardDeleted",
          "doc": ""
        },
                {
          "name": "namespaceChanged",
          "type": "All APIs.Point of Sale Integration._com_wixpress_metasite_event_api_NamespaceChanged",
          "doc": ""
        }
      ],
      "enum": null,
      "extra": {},
      "labels": [],
      "oneOf": true
    },
        {
      "name": "_com_wixpress_restaurants_posspihost_GetConfigurationRequest",
      "displayName": "Get Configuration Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "id",
          "type": "string",
          "doc": " Configuration ID.\n"
        },
                {
          "name": "instanceId",
          "type": "string",
          "doc": " Instance ID.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_restaurants_posspihost_GetConfigurationResponse",
      "displayName": "Get Configuration Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "configuration",
        "type": "All APIs.Point of Sale Integration._com_wixpress_restaurants_posspihost_Configuration",
        "doc": " Configuration ID.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_restaurants_posspihost_ListConfigurationsRequest",
      "displayName": "List Configurations Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "locationId",
        "type": "string",
        "doc": " Location ID.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_restaurants_posspihost_ListConfigurationsResponse",
      "displayName": "List Configurations Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "configurations",
        "type":         {
          "name": "array",
          "typeParams": ["All APIs.Point of Sale Integration._com_wixpress_restaurants_posspihost_Configuration"]
        },
        "doc": " Configuration ID.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_restaurants_posspihost_GetProviderInfoRequest",
      "displayName": "Get Provider Info Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "configurationId",
          "type": "string",
          "doc": " Configuration ID.\n"
        },
                {
          "name": "instanceId",
          "type": "string",
          "doc": " Instance ID.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_restaurants_posspihost_GetProviderInfoResponse",
      "displayName": "Get Provider Info Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "providerInfo",
        "type": "All APIs.Point of Sale Integration._com_wixpress_restaurants_posspihost_ProviderInfo",
        "doc": " Provider information.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_restaurants_posspihost_ProviderInfo",
      "displayName": "Provider Info Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "configurationStatus",
          "type": "All APIs.Point of Sale Integration._com_wixpress_restaurants_posspihost_ProviderInfo_ConfigurationStatus",
          "doc": " Provider business status.\n"
        },
                {
          "name": "registrationUrl",
          "type": "string",
          "doc": " Registration URL.\n"
        },
                {
          "name": "catalogSyncConfiguration",
          "type": "All APIs.Point of Sale Integration._com_wixpress_restaurants_posspihost_spi_v1_CatalogSyncConfiguration",
          "doc": " SPI Configuration parameters\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_restaurants_posspihost_SyncCatalogRequest",
      "displayName": "Sync Catalog Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "configurationId",
        "type": "string",
        "doc": " Configuration ID for the location whose catalog (menu) is being synchronized.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_restaurants_posspihost_SyncCatalogResponse",
      "displayName": "Sync Catalog Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_restaurants_posspihost_GetCatalogSyncStatusRequest",
      "displayName": "Get Catalog Sync Status Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "configurationId",
        "type": "string",
        "doc": " Configuration ID for the location whose catalog (menu) is being synchronized.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_restaurants_posspihost_GetCatalogSyncStatusResponse",
      "displayName": "Get Catalog Sync Status Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "status",
          "type": "All APIs.Point of Sale Integration._com_wixpress_restaurants_posspihost_GetCatalogSyncStatusResponse_Status",
          "doc": " Catalog (menu) synchronization status.\n\n+ PENDING - Synchronization did not start.\n+ IN_PROGRESS - Synchronization is in progress.\n+ SYNCED - Synchronization ended successfully.\n+ FAILED - Synchronization ended with a failure.\n\n"
        },
                {
          "name": "statusMode",
          "type": "All APIs.Point of Sale Integration._com_wixpress_restaurants_posspihost_GetCatalogSyncStatusResponse_statusMode",
          "doc": ""
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_restaurants_posspihost_GetCatalogSyncStatusResponse_statusMode",
      "displayName": "status Mode Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "inProgress",
          "type": "All APIs.Point of Sale Integration._com_wixpress_restaurants_posspihost_SyncInProgress",
          "doc": " Synchronization is in progress.\n"
        },
                {
          "name": "synced",
          "type": "All APIs.Point of Sale Integration._com_wixpress_restaurants_posspihost_SyncSynced",
          "doc": " Synchronization succeeded.\n"
        },
                {
          "name": "failed",
          "type": "All APIs.Point of Sale Integration._com_wixpress_restaurants_posspihost_SyncFailed",
          "doc": " Synchronization failed.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": [],
      "oneOf": true
    },
        {
      "name": "_com_wixpress_restaurants_posspihost_SyncInProgress",
      "displayName": "Sync In Progress Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "elapsedSeconds",
        "type": "integer",
        "doc": " Number of seconds since the synchronization process started.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_restaurants_posspihost_SyncSynced",
      "displayName": "Sync Synced Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "lastSyncDate",
        "type": "string",
        "doc": " Date and time of the latest synchronization process.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "paramsMapEntry",
      "displayName": "params Map Entry Object",
      "locations": [],
      "docs":       {
        "summary": "Set of key-value pairs. Error parameters.\n",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "key:value",
        "type": "string",
        "doc": "`key` of type string, `value` of type string"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_restaurants_posspihost_SyncFailed",
      "displayName": "Sync Failed Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "lastSyncDate",
          "type": "string",
          "doc": " Date and time of the latest synchronization process.\n"
        },
                {
          "name": "lastSuccessfullySyncDate",
          "type": "string",
          "doc": " Date and time of the last successful synchronization process.\n"
        },
                {
          "name": "reason",
          "type": "string",
          "doc": " Failure reason.\n"
        },
                {
          "name": "code",
          "type": "All APIs.Point of Sale Integration._com_wixpress_restaurants_posspihost_SyncFailed_Code",
          "doc": " Error code.\n"
        },
                {
          "name": "params",
          "type": "All APIs.Point of Sale Integration.paramsMapEntry",
          "doc": "Set of key-value pairs. Error parameters.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_restaurants_posspihost_CreateOrderRequest",
      "displayName": "Create Order Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "configurationId",
          "type": "string",
          "doc": " Configuration ID representing the merchant's location where the order is being created on the Wix site.\n"
        },
                {
          "name": "order",
          "type": "All APIs.Point of Sale Integration._com_wixpress_restaurants_posspihost_WixOrder",
          "doc": " Details of the order being created on the Wix site.\n"
        },
                {
          "name": "paidByPosGateway",
          "type": "boolean",
          "doc": " Whether the order will be paid using the same payment gateway as the POS system.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_restaurants_posspihost_CreateOrderResponse",
      "displayName": "Create Order Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "posOrderId",
          "type": "string",
          "doc": " Unique identifier of the order in the POS system.\n"
        },
                {
          "name": "posLocationId",
          "type": "string",
          "doc": " Unique identifier of the location in which the order was created in the POS system.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_restaurants_posspihost_ValidateOrderRequest",
      "displayName": "Validate Order Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "configurationId",
          "type": "string",
          "doc": " Configuration ID.\n"
        },
                {
          "name": "order",
          "type": "All APIs.Point of Sale Integration._com_wixpress_restaurants_posspihost_WixOrder",
          "doc": " Details of the order being created on the Wix site.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_restaurants_posspihost_ValidateOrderResponse",
      "displayName": "Validate Order Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "posOrderStatus",
        "type": "string",
        "doc": " Unique identifier of the pos order status.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_restaurants_posspihost_WixOrder_LoyaltyInfo",
      "displayName": "Loyalty Info Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "appliedAmount",
        "type": "string",
        "doc": " Amount saved redeeming Wix Loyalty reward.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_restaurants_posspihost_WixOrder",
      "displayName": "Wix Order Object",
      "locations": [],
      "docs":       {
        "summary": " Details of the order being created on the Wix site.\n",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "id",
          "type": "string",
          "doc": " Order ID.\n",
          "readOnly": true
        },
                {
          "name": "currency",
          "type": "string",
          "doc": " Currency of the order.\n"
        },
                {
          "name": "status",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Point of Sale Integration._com_wixpress_restaurants_orders_v3_Status"]
          },
          "doc": " Current order status.\n"
        },
                {
          "name": "lineItems",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Point of Sale Integration._com_wixpress_restaurants_orders_v3_LineItem"]
          },
          "doc": " Dishes and options included in the order.\n"
        },
                {
          "name": "discounts",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Point of Sale Integration._com_wixpress_restaurants_orders_v3_Discount"]
          },
          "doc": " Discounts associated with the order.\n"
        },
                {
          "name": "payments",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Point of Sale Integration._com_wixpress_restaurants_orders_v3_Payment"]
          },
          "doc": " Order payment information.\n"
        },
                {
          "name": "fulfillment",
          "type": "All APIs.Point of Sale Integration._com_wixpress_restaurants_orders_v3_Fulfillment",
          "doc": " Order fulfillment information.\n"
        },
                {
          "name": "customer",
          "type": "All APIs.Point of Sale Integration._com_wixpress_restaurants_orders_v3_Customer",
          "doc": " Customer information.\n"
        },
                {
          "name": "totals",
          "type": "All APIs.Point of Sale Integration._com_wixpress_restaurants_orders_v3_Totals",
          "doc": " Order totals.\n"
        },
                {
          "name": "comment",
          "type": "string",
          "doc": " Order comment.\n"
        },
                {
          "name": "loyaltyInfo",
          "type": "All APIs.Point of Sale Integration._com_wixpress_restaurants_posspihost_WixOrder_LoyaltyInfo",
          "doc": " Loyalty amount\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_restaurants_posspihost_ToggleConfigurationRequest",
      "displayName": "Toggle Configuration Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "configurationId",
          "type": "string",
          "doc": ""
        },
                {
          "name": "enabled",
          "type": "boolean",
          "doc": ""
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_restaurants_posspihost_ToggleConfigurationResponse",
      "displayName": "Toggle Configuration Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_restaurants_posspihost_GetActiveConfigurationRequest",
      "displayName": "Get Active Configuration Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "locationId",
        "type": "string",
        "doc": ""
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_restaurants_posspihost_GetActiveConfigurationResponse",
      "displayName": "Get Active Configuration Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "configuration",
        "type": "All APIs.Point of Sale Integration._com_wixpress_restaurants_posspihost_Configuration",
        "doc": ""
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_restaurants_posspihost_spi_v1_ListAccountIdsRequest",
      "displayName": "List Account Ids Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_restaurants_posspihost_spi_v1_ListAccountIdsResponse",
      "displayName": "List Account Ids Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "accountIds",
        "type":         {
          "name": "array",
          "typeParams": ["string"]
        },
        "doc": " Account IDs with the POS system.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_restaurants_posspihost_spi_v1_GetConfigurationStatusRequest",
      "displayName": "Get Configuration Status Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "accountId",
          "type": "string",
          "doc": " Merchant's account ID with the POS system.\n"
        },
                {
          "name": "configurationId",
          "type": "string",
          "doc": " Unique identifier of the merchant's Wix location configuration.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_restaurants_posspihost_spi_v1_GetConfigurationStatusResponse",
      "displayName": "Get Configuration Status Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "status",
        "type": "All APIs.Point of Sale Integration._com_wixpress_restaurants_posspihost_spi_v1_GetConfigurationStatusResponse_ConfigurationStatus",
        "doc": " Status of the configuration. \n+ `NOT_STARTED` - This is the initial status for the configuration. The status is set to `NOT_STARTED` after installing the 3rd party integration app and before the integration app is authenticated.\n+ `PENDING` - The status is set to `PENDING` after authentication but before completing the app's integration for this configuration.\n+ `READY` - Integration for this configuration is completed and the business is ready to activate the integration.\n+ `ERROR` - The integration for this configuration did not complete. An error occurred.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_restaurants_posspihost_spi_v1_SyncCatalogRequest",
      "displayName": "Sync Catalog Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "accountId",
          "type": "string",
          "doc": " Merchant's account ID with the POS system.\n"
        },
                {
          "name": "configurationId",
          "type": "string",
          "doc": " Unique identifier of the merchant's Wix location configuration.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_restaurants_posspihost_spi_v1_SyncCatalogResponse",
      "displayName": "Sync Catalog Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_restaurants_posspihost_spi_v1_GetCatalogSyncStatusRequest",
      "displayName": "Get Catalog Sync Status Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "accountId",
          "type": "string",
          "doc": " Merchant's account ID with the POS system.\n"
        },
                {
          "name": "configurationId",
          "type": "string",
          "doc": " Unique identifier of the merchant's Wix location configuration.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_restaurants_posspihost_spi_v1_GetCatalogSyncStatusResponse",
      "displayName": "Get Catalog Sync Status Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "status",
          "type": "All APIs.Point of Sale Integration._com_wixpress_restaurants_posspihost_spi_v1_GetCatalogSyncStatusResponse_Status",
          "doc": " Status of the catalog (menu) synchronization. \n+ `PENDING` - Synchronization did not yet start.\n+ `IN_PROGRESS` - Synchronization has started.\n+ `SYNCED` - Synchronization completed successfully.\n+ `ERROR` - Synchronization ended with failure.\n"
        },
                {
          "name": "statusMode",
          "type": "All APIs.Point of Sale Integration._com_wixpress_restaurants_posspihost_spi_v1_GetCatalogSyncStatusResponse_statusMode",
          "doc": " Additional information, depending on the `status` of the catalog (menu) synchronization.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_restaurants_posspihost_spi_v1_GetCatalogSyncStatusResponse_statusMode",
      "displayName": "status Mode Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "inProgress",
          "type": "All APIs.Point of Sale Integration._com_wixpress_restaurants_posspihost_spi_v1_SyncInProgress",
          "doc": " Additional information available if the catalog (menu) synchronization is in progress.\n"
        },
                {
          "name": "synced",
          "type": "All APIs.Point of Sale Integration._com_wixpress_restaurants_posspihost_spi_v1_SyncSynced",
          "doc": " Additional information available if the catalog (menu) synchronization has completed successfully.\n"
        },
                {
          "name": "failed",
          "type": "All APIs.Point of Sale Integration._com_wixpress_restaurants_posspihost_spi_v1_SyncFailed",
          "doc": " Additional information available if the catalog (menu) synchronization ended with failure.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": [],
      "oneOf": true
    },
        {
      "name": "_com_wixpress_restaurants_posspihost_spi_v1_SyncInProgress",
      "displayName": "Sync In Progress Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "elapsedSeconds",
        "type": "integer",
        "doc": " Number of seconds that have elapsed since the catalog (menu) synchronization process started.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_restaurants_posspihost_spi_v1_SyncSynced",
      "displayName": "Sync Synced Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "lastSyncDate",
        "type": "string",
        "doc": " Date and time of the latest catalog (menu) synchronization process.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "paramsMapEntry",
      "displayName": "params Map Entry Object",
      "locations": [],
      "docs":       {
        "summary": "Set of key-value pairs. Error parameters.\n",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "key:value",
        "type": "string",
        "doc": "`key` of type string, `value` of type string"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_restaurants_posspihost_spi_v1_SyncFailed",
      "displayName": "Sync Failed Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "lastSyncDate",
          "type": "string",
          "doc": " Date and time of the latest sync process.\n"
        },
                {
          "name": "lastSuccessfullySyncDate",
          "type": "string",
          "doc": " Date and time of the latest successfully sync process.\n"
        },
                {
          "name": "reason",
          "type": "string",
          "doc": " Failure reason.\n"
        },
                {
          "name": "code",
          "type": "All APIs.Point of Sale Integration._com_wixpress_restaurants_posspihost_spi_v1_SyncFailed_Code",
          "doc": " Error code. \n+ `NONE` - No error code available.\n+ `OTHER` - Error doesn't resemble the existing synchronization errors.\n+ `SYSTEM_ERROR` - A system error occurred during synchronization.\n+ `ACCOUNT_NOT_FOUND` - Synchronization failed because the corresponding account with the POS system could not be found.\n+ `ACCOUNT_NOT_AUTHORIZED` - Synchronization failed because the corresponding account with the POS system could was not authorized.\n+ `LOCATION_NOT_FOUND` - Synchronization failed because the corresponding location with the POS system could not be found.\n+ `ACCOUNT_NOT_CONNECTED` - Synchronization failed because the corresponding account with the POS system was not connected successfully.\n+ `ACCOUNT_CONFIGURATION` - Synchronization failed because of a configuration error. \n"
        },
                {
          "name": "params",
          "type": "All APIs.Point of Sale Integration.paramsMapEntry",
          "doc": "Set of key-value pairs. Error parameters.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_restaurants_posspihost_spi_v1_CreateOrderRequest",
      "displayName": "Create Order Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "accountId",
          "type": "string",
          "doc": " Merchant's account ID with the POS system.\n"
        },
                {
          "name": "configurationId",
          "type": "string",
          "doc": " Unique identifier of the merchant's Wix location configuration.\n"
        },
                {
          "name": "order",
          "type": "All APIs.Point of Sale Integration._com_wixpress_restaurants_posspihost_spi_v1_WixOrder",
          "doc": " Details of the order being created on the Wix site.\n"
        },
                {
          "name": "paidByPosGateway",
          "type": "boolean",
          "doc": " Whether the order is being paid by the same payment gateway as the POS.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_restaurants_posspihost_spi_v1_CreateOrderResponse",
      "displayName": "Create Order Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "posOrderId",
          "type": "string",
          "doc": " Unique identifier of the order with the POS system.\n"
        },
                {
          "name": "posLocationId",
          "type": "string",
          "doc": " Unique identifier of the location for the order in the POS system.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_restaurants_posspihost_spi_v1_ValidateOrderRequest",
      "displayName": "Validate Order Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "accountId",
          "type": "string",
          "doc": " Merchant's account ID with the POS system.\n"
        },
                {
          "name": "configurationId",
          "type": "string",
          "doc": " Unique identifier of the merchant's Wix location configuration.\n"
        },
                {
          "name": "order",
          "type": "All APIs.Point of Sale Integration._com_wixpress_restaurants_posspihost_spi_v1_WixOrder",
          "doc": " Details of the order created on the Wix site.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_restaurants_posspihost_spi_v1_ValidateOrderResponse",
      "displayName": "Validate Order Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "posOrderStatus",
        "type": "string",
        "doc": " Status of the order in the POS system.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_restaurants_posspihost_spi_v1_WixOrder_LoyaltyInfo",
      "displayName": "Loyalty Info Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "appliedAmount",
        "type": "string",
        "doc": " Amount saved by redeeming a Wix Loyalty reward.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_restaurants_posspihost_spi_v1_WixOrder",
      "displayName": "Wix Order Object",
      "locations": [],
      "docs":       {
        "summary": " Details of the order being created on the Wix site.\n",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "id",
          "type": "string",
          "doc": " Order ID.\n",
          "readOnly": true
        },
                {
          "name": "currency",
          "type": "string",
          "doc": " Currency of the order.\n"
        },
                {
          "name": "lineItems",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Point of Sale Integration._com_wixpress_restaurants_orders_v3_LineItem"]
          },
          "doc": " Dishes and options included in the order.\n"
        },
                {
          "name": "discounts",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Point of Sale Integration._com_wixpress_restaurants_orders_v3_Discount"]
          },
          "doc": " Discounts associated with the order.\n"
        },
                {
          "name": "fulfillment",
          "type": "All APIs.Point of Sale Integration._com_wixpress_restaurants_orders_v3_Fulfillment",
          "doc": " Order fulfillment information.\n"
        },
                {
          "name": "payments",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Point of Sale Integration._com_wixpress_restaurants_orders_v3_Payment"]
          },
          "doc": " Order payment information.\n"
        },
                {
          "name": "customer",
          "type": "All APIs.Point of Sale Integration._com_wixpress_restaurants_orders_v3_Customer",
          "doc": " Customer information.\n"
        },
                {
          "name": "totals",
          "type": "All APIs.Point of Sale Integration._com_wixpress_restaurants_orders_v3_Totals",
          "doc": " Order totals.\n"
        },
                {
          "name": "comment",
          "type": "string",
          "doc": " Order comment.\n"
        },
                {
          "name": "loyaltyInfo",
          "type": "All APIs.Point of Sale Integration._com_wixpress_restaurants_posspihost_spi_v1_WixOrder_LoyaltyInfo",
          "doc": " Amount saved by redeeming a Wix Loyalty reward.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_restaurants_postpaapi_Configuration",
      "displayName": "Configuration Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "id",
          "type": "string",
          "doc": " Configuration ID for the location on the Wix site.\n"
        },
                {
          "name": "location",
          "type": "All APIs.Point of Sale Integration._com_wixpress_restaurants_postpaapi_Location",
          "doc": " The corresponding Wix location for the configuration, as defined for the Wix site using the Business Info's [Locations](https://dev.wix.com/api/rest/business-info/locations) and/or [Site Properties](https://dev.wix.com/api/rest/business-info/site-properties) APIs, \n or using [Dashboard Settings](https://www.wix.com/my-account/site-selector/?buttonText=Select%20Site&title=Select%20a%20Site&autoSelectOnSingleSite=true&actionUrl=https:%2F%2Fwww.wix.com%2Fdashboard%2F%7B%7BmetaSiteId%7D%7D%2Fsettings/business-info).\n"
        },
                {
          "name": "catalogId",
          "type": "string",
          "doc": " Restaurant catalog ID.\n"
        },
                {
          "name": "archived",
          "type": "boolean",
          "doc": " Whether a configuration is archived.\n"
        },
                {
          "name": "enabled",
          "type": "boolean",
          "doc": " Whether a configuration is enabled.\n"
        },
                {
          "name": "integrationSettingsUrl",
          "type": "string",
          "doc": " URL linking to the POS integration settings in the Dashboard \n if an online POS ordering app is installed.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_restaurants_postpaapi_Location",
      "displayName": "Location Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "name",
        "type": "string",
        "doc": " The Wix location [name](https://dev.wix.com/api/rest/business-info/locations/location-object).\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_restaurants_postpaapi_GetConfigurationRequest",
      "displayName": "Get Configuration Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "id",
        "type": "string",
        "doc": " Configuration ID.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_restaurants_postpaapi_GetConfigurationResponse",
      "displayName": "Get Configuration Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "configuration",
        "type": "All APIs.Point of Sale Integration._com_wixpress_restaurants_postpaapi_Configuration",
        "doc": " The merchant's location configuration on Wix.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_restaurants_postpaapi_ListConfigurationsRequest",
      "displayName": "List Configurations Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_restaurants_postpaapi_ListConfigurationsResponse",
      "displayName": "List Configurations Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "configurations",
        "type":         {
          "name": "array",
          "typeParams": ["All APIs.Point of Sale Integration._com_wixpress_restaurants_postpaapi_Configuration"]
        },
        "doc": " The merchant's configurations (locations) on Wix.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_restaurants_postpaapi_DisconnectAccountRequest",
      "displayName": "Disconnect Account Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "appDefId",
          "type": "string",
          "doc": " The app's definition ID.\n"
        },
                {
          "name": "accountId",
          "type": "string",
          "doc": " The ID for the account between the merchant and the POS service provider.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_restaurants_postpaapi_DisconnectAccountResponse",
      "displayName": "Disconnect Account Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_restaurants_postpaapi_DisconnectConfigurationRequest",
      "displayName": "Disconnect Configuration Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "configurationId",
        "type": "string",
        "doc": " The ID of the merchant's location configuration on Wix.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_restaurants_postpaapi_DisconnectConfigurationResponse",
      "displayName": "Disconnect Configuration Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_restaurants_orders_v3_Status",
      "displayName": "Status Object",
      "locations": [],
      "docs":       {
        "summary": " This might be extended in the future with pending orders statuses\n \n Possible values are: <li><code> UNSPECIFIED_ORDER_STATUS -  Order status can't be classified, due to an error\n <\/code><\/li><li><code> PENDING -  Order is pending response from the payment provider - IF THIS WILL REMAIN PAYMENT PROVIDER SPECIFIC, THIS SHOULD BE CLEAR FROM THE NAME - E.G. PENDING_PAYMENT_PROVIDER.\n <\/code><\/li><li><code> NEW -  The order is marked as new - wait for state machine\n <\/code><\/li><li><code> ACCEPTED -  Order was accepted\n <\/code><\/li><li><code> CANCELED -  Order is canceled\n <\/code><\/li><li><code> FULFILLED -  Order is fulfilled\n <\/code><\/li>",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum":       [
        "UNSPECIFIED_ORDER_STATUS",
        "PENDING",
        "NEW",
        "ACCEPTED",
        "CANCELED",
        "FULFILLED"
      ],
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_restaurants_orders_v3_LineItemOption_DisplayType",
      "displayName": "Display Type Object",
      "locations": [],
      "docs":       {
        "summary": " \n Possible values are: <li><code> UNSPECIFIED_DISPLAY_TYPE -  DisplayType, due to an error\n <\/code><\/li><li><code> SELECTION -  Single choice selection\n <\/code><\/li><li><code> EXTRAS -  Multiple choices selection\n <\/code><\/li><li><code> DESELECTION -  Allow choices removal\n <\/code><\/li>",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum":       [
        "UNSPECIFIED_DISPLAY_TYPE",
        "SELECTION",
        "EXTRAS",
        "DESELECTION"
      ],
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_restaurants_orders_v3_Discount_DiscountType",
      "displayName": "Discount Type Object",
      "locations": [],
      "docs":       {
        "summary": " \n Possible values are: <li><code> UNSPECIFIED_TYPE <\/code><\/li><li><code> OFF_ITEM <\/code><\/li><li><code> OFF_ORDER <\/code><\/li><li><code> OFF_ORDER_MANAGER_DISCOUNT <\/code><\/li>",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum":       [
        "UNSPECIFIED_TYPE",
        "OFF_ITEM",
        "OFF_ORDER",
        "OFF_ORDER_MANAGER_DISCOUNT"
      ],
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_restaurants_orders_v3_Payment_Type",
      "displayName": "Type Object",
      "locations": [],
      "docs":       {
        "summary": " \n Possible values are: <li><code> UNSPECIFIED_PAYMENT_TYPE -  PaymentType, due to an error\n <\/code><\/li><li><code> CASH -  Cash\n <\/code><\/li><li><code> CREDIT -  credit\n <\/code><\/li><li><code> DELIVERY_CLUB -  Delivery club\n <\/code><\/li><li><code> DELIVERY_COM -  Delivery com\n <\/code><\/li><li><code> BITPAY -  Bitpay\n <\/code><\/li><li><code> CELLARIX -  Cellarix\n <\/code><\/li><li><code> BITSOFGOLD -  Bits of gold\n <\/code><\/li><li><code> MULTIPASS -  Multi pass\n <\/code><\/li><li><code> TENBIS -  Tenbis\n <\/code><\/li><li><code> PAYPAL -  Paypal\n <\/code><\/li><li><code> MYSODEXO -  Mysodexo\n <\/code><\/li><li><code> WIX_PAYMENTS -  Wix Payments\n <\/code><\/li>",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum":       [
        "UNSPECIFIED_PAYMENT_TYPE",
        "CASH",
        "CREDIT",
        "DELIVERY_CLUB",
        "DELIVERY_COM",
        "BITPAY",
        "CELLARIX",
        "BITSOFGOLD",
        "MULTIPASS",
        "TENBIS",
        "PAYPAL",
        "MYSODEXO",
        "WIX_PAYMENTS"
      ],
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_restaurants_orders_v3_Fulfillment_Type",
      "displayName": "Type Object",
      "locations": [],
      "docs":       {
        "summary": " \n Possible values are: <li><code> UNSPECIFIED_FULFILLMENT_TYPE -  Missing type due to an error\n <\/code><\/li><li><code> PICKUP -  Pickup\n <\/code><\/li><li><code> DELIVERY -  Delivery\n <\/code><\/li><li><code> DINE_IN -  Dine-in\n <\/code><\/li>",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum":       [
        "UNSPECIFIED_FULFILLMENT_TYPE",
        "PICKUP",
        "DELIVERY",
        "DINE_IN"
      ],
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_restaurants_orders_v3_DeliveryAddress_OnArrival",
      "displayName": "On Arrival Object",
      "locations": [],
      "docs":       {
        "summary": " \n Possible values are: <li><code> UNSPECIFIED_ON_ARRIVAL_TYPE -  Missing type due to an error\n <\/code><\/li><li><code> BUZZ_DOOR -  Buzz the door\n <\/code><\/li><li><code> CALL_ME -  Phone me\n <\/code><\/li>",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum":       [
        "UNSPECIFIED_ON_ARRIVAL_TYPE",
        "BUZZ_DOOR",
        "CALL_ME"
      ],
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_restaurants_posspihost_spi_v1_CatalogSyncConfiguration_Default",
      "displayName": "Default Object",
      "locations": [],
      "docs":       {
        "summary": " \n Possible values are: <li><code> WIX <\/code><\/li><li><code> POS <\/code><\/li>",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum":       [
        "WIX",
        "POS"
      ],
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_restaurants_site_properties_syncer_SyncLocationsSource",
      "displayName": "Sync Locations Source Object",
      "locations": [],
      "docs":       {
        "summary": " \n Possible values are: <li><code> API <\/code><\/li><li><code> LOCATION_EVENT <\/code><\/li><li><code> RESTAURANT_PROVISIONED_EVENT <\/code><\/li><li><code> IMMIGRATOR <\/code><\/li>",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum":       [
        "API",
        "LOCATION_EVENT",
        "RESTAURANT_PROVISIONED_EVENT",
        "IMMIGRATOR"
      ],
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_restaurants_site_properties_syncer_RestaurantLocationsUpdatedEvent_SpecialEvent_Type",
      "displayName": "Type Object",
      "locations": [],
      "docs":       {
        "summary": " \n Possible values are: <li><code> UNKNOWN <\/code><\/li><li><code> FROM_ZERO_LOCATIONS_TO_ONE_LOCATION <\/code><\/li><li><code> FROM_ONE_LOCATION_TO_ZERO_LOCATIONS <\/code><\/li>",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum":       [
        "UNKNOWN",
        "FROM_ZERO_LOCATIONS_TO_ONE_LOCATION",
        "FROM_ONE_LOCATION_TO_ZERO_LOCATIONS"
      ],
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_metasite_event_api_Asset_State",
      "displayName": "State Object",
      "locations": [],
      "docs":       {
        "summary": " \n Possible values are: <li><code> UNKNOWN <\/code><\/li><li><code> ENABLED <\/code><\/li><li><code> DISABLED <\/code><\/li><li><code> PENDING <\/code><\/li><li><code> DEMO <\/code><\/li>",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum":       [
        "UNKNOWN",
        "ENABLED",
        "DISABLED",
        "PENDING",
        "DEMO"
      ],
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_metasite_event_api_DeleteContext_DeleteStatus",
      "displayName": "Delete Status Object",
      "locations": [],
      "docs":       {
        "summary": " \n Possible values are: <li><code> UNKNOWN <\/code><\/li><li><code> TRASH <\/code><\/li><li><code> DELETED <\/code><\/li><li><code> PENDING_PURGE <\/code><\/li>",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum":       [
        "UNKNOWN",
        "TRASH",
        "DELETED",
        "PENDING_PURGE"
      ],
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_metasite_event_api_MetaSite_Namespace",
      "displayName": "Namespace Object",
      "locations": [],
      "docs":       {
        "summary": " \n Possible values are: <li><code> UNKNOWN_NAMESPACE <\/code><\/li><li><code> WIX -  Default namespace for UGC sites. MetaSites with this namespace will be shown in a user's site list by default.\n <\/code><\/li><li><code> SHOUT_OUT -  ShoutOut stand alone product. These are siteless (no actual Wix site, no HtmlWeb). MetaSites with this namespace will *not* be shown in a user's site list by default.\n <\/code><\/li><li><code> ALBUMS -  MetaSites created by the Albums product, they appear as part of the Albums app. MetaSites with this namespace will *not* be shown in a user's site list by default.\n <\/code><\/li><li><code> WIX_STORES_TEST_DRIVE -  Part of the WixStores migration flow, a user tries to migrate and gets this site to view and if the user likes it then stores removes this namespace and deletes the old site with the old stores. MetaSites with this namespace will *not* be shown in a user's site list by default.\n <\/code><\/li><li><code> HOTELS -  Hotels standalone (siteless). MetaSites with this namespace will *not* be shown in a user's site list by default.\n <\/code><\/li><li><code> CLUBS -  Clubs siteless MetaSites, a club without a wix website. MetaSites with this namespace will *not* be shown in a user's site list by default.\n <\/code><\/li><li><code> ONBOARDING_DRAFT -  A partially created ADI website. MetaSites with this namespace will *not* be shown in a user's site list by default.\n <\/code><\/li><li><code> DEV_SITE -  AppBuilder for AppStudio / shmite (c). MetaSites with this namespace will *not* be shown in a user's site list by default.\n <\/code><\/li><li><code> LOGOS -  LogoMaker websites offered to the user after logo purchase. MetaSites with this namespace will *not* be shown in a user's site list by default.\n <\/code><\/li><li><code> VIDEO_MAKER -  VideoMaker websites offered to the user after video purchase. MetaSites with this namespace will *not* be shown in a user's site list by default.\n <\/code><\/li><li><code> PARTNER_DASHBOARD -  MetaSites with this namespace will *not* be shown in a user's site list by default.\n <\/code><\/li><li><code> DEV_CENTER_COMPANY -  MetaSites with this namespace will *not* be shown in a user's site list by default.\n <\/code><\/li><li><code> HTML_DRAFT - \nA draft created by HTML editor on open. Upon \"first save\" it will be moved to be of WIX domain.\n\nMeta site with this namespace will *not* be shown in a user's site list by default.\n <\/code><\/li><li><code> SITELESS_BUSINESS - \nthe user-journey for Fitness users who want to start from managing their business instead of designing their website.\nWill be accessible from Site List and will not have a website app.\nOnce the user attaches a site, the site will become a regular wixsite.\n <\/code><\/li><li><code> CREATOR_ECONOMY - \nBelongs to \"strategic products\" company. Supports new product in the creator's economy space.\n <\/code><\/li><li><code> DASHBOARD_FIRST - *\nIt is to be used in the Business First efforts.\n <\/code><\/li><li><code> ANYWHERE - *\nBookings business flow with no site.\n <\/code><\/li>",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum":       [
        "UNKNOWN_NAMESPACE",
        "WIX",
        "SHOUT_OUT",
        "ALBUMS",
        "WIX_STORES_TEST_DRIVE",
        "HOTELS",
        "CLUBS",
        "ONBOARDING_DRAFT",
        "DEV_SITE",
        "LOGOS",
        "VIDEO_MAKER",
        "PARTNER_DASHBOARD",
        "DEV_CENTER_COMPANY",
        "HTML_DRAFT",
        "SITELESS_BUSINESS",
        "CREATOR_ECONOMY",
        "DASHBOARD_FIRST",
        "ANYWHERE"
      ],
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_metasite_event_api_SiteCreatedContext",
      "displayName": "Site Created Context Object",
      "locations": [],
      "docs":       {
        "summary": " \n Possible values are: <li><code> OTHER -  A valid option, we don't expose all reasons why site might be created.\n <\/code><\/li><li><code> FROM_TEMPLATE -  A meta site was created from template.\n <\/code><\/li><li><code> DUPLICATE_BY_SITE_TRANSFER -  A meta site was created by copying of the transfferred meta site.\n <\/code><\/li><li><code> DUPLICATE -  A copy of existing meta site.\n <\/code><\/li><li><code> OLD_SITE_TRANSFER -  A meta site was created as a transfferred site (copy of the original), old flow, should die soon.\n <\/code><\/li><li><code> FLASH - deprecated A meta site was created for Flash editor.\n <\/code><\/li>",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum":       [
        "OTHER",
        "FROM_TEMPLATE",
        "DUPLICATE_BY_SITE_TRANSFER",
        "DUPLICATE",
        "OLD_SITE_TRANSFER",
        "FLASH"
      ],
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_restaurants_posspihost_ProviderInfo_ConfigurationStatus",
      "displayName": "Configuration Status Object",
      "locations": [],
      "docs":       {
        "summary": " \n Possible values are: <li><code> UNKNOWN <\/code><\/li><li><code> NOT_STARTED <\/code><\/li><li><code> PENDING <\/code><\/li><li><code> READY <\/code><\/li><li><code> ERROR <\/code><\/li>",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum":       [
        "UNKNOWN",
        "NOT_STARTED",
        "PENDING",
        "READY",
        "ERROR"
      ],
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_restaurants_posspihost_GetCatalogSyncStatusResponse_Status",
      "displayName": "Status Object",
      "locations": [],
      "docs":       {
        "summary": " \n Possible values are: <li><code> UNKNOWN -  UNKNOWN STATUS.\n <\/code><\/li><li><code> PENDING -  Synchronization didn't started.\n <\/code><\/li><li><code> IN_PROGRESS -  Synchronization is in progress.\n <\/code><\/li><li><code> SYNCED -  Synchronization completed successfully.\n <\/code><\/li><li><code> FAILED -  Synchronization completed with failure.\n <\/code><\/li>",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum":       [
        "UNKNOWN",
        "PENDING",
        "IN_PROGRESS",
        "SYNCED",
        "FAILED"
      ],
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_restaurants_posspihost_SyncFailed_Code",
      "displayName": "Code Object",
      "locations": [],
      "docs":       {
        "summary": " \n Possible values are: <li><code> NONE <\/code><\/li><li><code> OTHER <\/code><\/li><li><code> SYSTEM_ERROR <\/code><\/li><li><code> ACCOUNT_NOT_FOUND <\/code><\/li><li><code> ACCOUNT_NOT_AUTHORIZED <\/code><\/li><li><code> LOCATION_NOT_FOUND <\/code><\/li><li><code> ACCOUNT_NOT_CONNECTED <\/code><\/li><li><code> ACCOUNT_CONFIGURATION <\/code><\/li>",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum":       [
        "NONE",
        "OTHER",
        "SYSTEM_ERROR",
        "ACCOUNT_NOT_FOUND",
        "ACCOUNT_NOT_AUTHORIZED",
        "LOCATION_NOT_FOUND",
        "ACCOUNT_NOT_CONNECTED",
        "ACCOUNT_CONFIGURATION"
      ],
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_restaurants_posspihost_spi_v1_GetConfigurationStatusResponse_ConfigurationStatus",
      "displayName": "Configuration Status Object",
      "locations": [],
      "docs":       {
        "summary": " \n Possible values are: <li><code> UNKNOWN <\/code><\/li><li><code> NOT_STARTED <\/code><\/li><li><code> PENDING <\/code><\/li><li><code> READY <\/code><\/li><li><code> ERROR <\/code><\/li>",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum":       [
        "UNKNOWN",
        "NOT_STARTED",
        "PENDING",
        "READY",
        "ERROR"
      ],
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_restaurants_posspihost_spi_v1_GetCatalogSyncStatusResponse_Status",
      "displayName": "Status Object",
      "locations": [],
      "docs":       {
        "summary": " \n Possible values are: <li><code> UNKNOWN -  UNKNOWN STATUS.\n <\/code><\/li><li><code> PENDING -  Sync didn't started yet.\n <\/code><\/li><li><code> IN_PROGRESS -  Sync is in progress.\n <\/code><\/li><li><code> SYNCED -  Sync completed successfully.\n <\/code><\/li><li><code> FAILED -  Sync completed with failure.\n <\/code><\/li>",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum":       [
        "UNKNOWN",
        "PENDING",
        "IN_PROGRESS",
        "SYNCED",
        "FAILED"
      ],
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wixpress_restaurants_posspihost_spi_v1_SyncFailed_Code",
      "displayName": "Code Object",
      "locations": [],
      "docs":       {
        "summary": " \n Possible values are: <li><code> NONE <\/code><\/li><li><code> OTHER <\/code><\/li><li><code> SYSTEM_ERROR <\/code><\/li><li><code> ACCOUNT_NOT_FOUND <\/code><\/li><li><code> ACCOUNT_NOT_AUTHORIZED <\/code><\/li><li><code> LOCATION_NOT_FOUND <\/code><\/li><li><code> ACCOUNT_NOT_CONNECTED <\/code><\/li><li><code> ACCOUNT_CONFIGURATION <\/code><\/li>",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum":       [
        "NONE",
        "OTHER",
        "SYSTEM_ERROR",
        "ACCOUNT_NOT_FOUND",
        "ACCOUNT_NOT_AUTHORIZED",
        "LOCATION_NOT_FOUND",
        "ACCOUNT_NOT_CONNECTED",
        "ACCOUNT_CONFIGURATION"
      ],
      "extra": {},
      "labels": []
    }
  ],
  "extra": {"artifactId": "com.wixpress.restaurants.restaurants-pos-spi-host"}
}