{
  "name": "Events - Policies V2",
  "client_id": "https://github.com/wix-private/events/tree/master/events-services/events-policies#public",
  "memberOf": "All APIs",
  "category": "business-service",
  "mixes": [],
  "labels": [],
  "docs":   {
    "summary": "API to manage policies",
    "description": []
  },
  "properties": [],
  "tags": [  {
    "name": "Policy",
    "entity": null
  }],
  "relatedGuides": [  {
    "path": "../guides/events---policies-v2/docs/README.md",
    "name": "Introduction"
  }],
  "operations":   [
        {
      "name": "Create Policy",
      "methodName": "CreatePolicy",
      "serviceName": "PolicyManagement",
      "tag": "Policy",
      "permissions": [],
      "events": [],
      "labels": [],
      "nameParams": [],
      "requiredFields":       [
        "policy",
        "policy.name",
        "policy.body",
        "policy.eventId"
      ],
      "params": [      {
        "in": "BODY",
        "name": "policy",
        "type": "All APIs.Events - Policies V2._wix_events_v2_Policy",
        "doc": " An Event Policy to be created\n",
        "required": true
      }],
      "ret":       {
        "type":         {
          "name": "CreatePolicy",
          "statusCode": "200",
          "typeParams": ["All APIs.Events - Policies V2._wix_events_v2_CreatePolicyResponse"]
        },
        "doc": ""
      },
      "locations": [],
      "docs":       {
        "summary": " Creates a policy for an event.\n Each event can have up to 3 policies.\n \n",
        "description": [],
        "request": "POST",
        "url": "https://www.wixapis.com/events-policies/v2/policies",
        "links": [],
        "examples": [],
        "extra": {}
      },
      "extra":       {
        "hasRest": true,
        "rpcRequestName": "CreatePolicyRequest",
        "rpcResponseName": "CreatePolicyResponse"
      },
      "customLabels": []
    },
        {
      "name": "Delete Policy",
      "methodName": "DeletePolicy",
      "serviceName": "PolicyManagement",
      "tag": "Policy",
      "permissions": [],
      "events": [],
      "labels": [],
      "nameParams": [],
      "requiredFields": ["policyId"],
      "params":       [
                {
          "in": "PATH",
          "name": "policyId",
          "type": "string",
          "doc": " Event Policy to delete\n",
          "required": true
        },
                {
          "in": "BODY",
          "name": "revision",
          "type": "string",
          "doc": " The revision of the Event Policy\n",
          "required": false
        }
      ],
      "ret":       {
        "type":         {
          "name": "DeletePolicy",
          "statusCode": "200",
          "typeParams": ["All APIs.Events - Policies V2._wix_events_v2_DeletePolicyResponse"]
        },
        "doc": ""
      },
      "locations": [],
      "docs":       {
        "summary": " Deletes a policy.\n \n",
        "description": [],
        "request": "DELETE",
        "url": "https://www.wixapis.com/events-policies/v2/policies/{policyId}",
        "links": [],
        "examples": [],
        "extra": {}
      },
      "extra":       {
        "hasRest": true,
        "rpcRequestName": "DeletePolicyRequest",
        "rpcResponseName": "DeletePolicyResponse"
      },
      "customLabels": []
    },
        {
      "name": "Get Event Policies",
      "methodName": "GetEventPolicies",
      "serviceName": "PolicyManagement",
      "tag": "Policy",
      "permissions": [],
      "events": [],
      "labels": [],
      "nameParams": [],
      "requiredFields": ["eventId"],
      "params": [      {
        "in": "QUERY",
        "name": "eventId",
        "type": "string",
        "doc": " Event Id\n",
        "required": true
      }],
      "ret":       {
        "type":         {
          "name": "GetEventPolicies",
          "statusCode": "200",
          "typeParams": ["All APIs.Events - Policies V2._wix_events_v2_GetEventPoliciesResponse"]
        },
        "doc": ""
      },
      "locations": [],
      "docs":       {
        "summary": " Get all Event Policies of an Event\n \n",
        "description": [],
        "request": "GET",
        "url": "https://www.wixapis.com/events-policies/v2/policies",
        "links": [],
        "examples": [],
        "extra": {}
      },
      "extra":       {
        "hasRest": true,
        "rpcRequestName": "GetEventPoliciesRequest",
        "rpcResponseName": "GetEventPoliciesResponse"
      },
      "customLabels": []
    },
        {
      "name": "Query Policies",
      "methodName": "QueryPolicies",
      "serviceName": "PolicyManagement",
      "tag": "Policy",
      "permissions": [],
      "events": [],
      "labels": [],
      "nameParams": [],
      "requiredFields": ["query"],
      "params": [      {
        "in": "BODY",
        "name": "query",
        "type": "All APIs.Events - Policies V2._wix_common_QueryV2",
        "doc": " WQL expression\n",
        "required": true
      }],
      "ret":       {
        "type":         {
          "name": "QueryPolicies",
          "statusCode": "200",
          "typeParams": ["All APIs.Events - Policies V2._wix_events_v2_QueryPoliciesResponse"]
        },
        "doc": ""
      },
      "locations": [],
      "docs":       {
        "summary": " Retrieves a list of policies, given the provided paging and filter.\n \n",
        "description": [],
        "request": "POST",
        "url": "https://www.wixapis.com/events-policies/v2/policies/query",
        "links": [],
        "examples": [],
        "extra": {}
      },
      "extra":       {
        "hasRest": true,
        "rpcRequestName": "QueryPoliciesRequest",
        "rpcResponseName": "QueryPoliciesResponse"
      },
      "customLabels": []
    },
        {
      "name": "Reorder Event Policies",
      "methodName": "ReorderEventPolicies",
      "serviceName": "PolicyManagement",
      "tag": "Policy",
      "permissions": [],
      "events": [],
      "labels": [],
      "nameParams": [],
      "params":       [
                {
          "in": "BODY",
          "name": "eventId",
          "type": "string",
          "doc": " Event ID\n",
          "required": false
        },
                {
          "in": "BODY",
          "name": "policyId",
          "type": "string",
          "doc": " Event Policy ID\n",
          "required": false
        },
                {
          "in": "BODY",
          "name": "referencePolicy",
          "type": "All APIs.Events - Policies V2._wix_events_v2_ReorderEventPoliciesRequest_ReferencePolicy",
          "doc": "",
          "required": false
        }
      ],
      "ret":       {
        "type":         {
          "name": "ReorderEventPolicies",
          "statusCode": "200",
          "typeParams": ["All APIs.Events - Policies V2._wix_events_v2_ReorderEventPoliciesResponse"]
        },
        "doc": ""
      },
      "locations": [],
      "docs":       {
        "summary": " Change the order of Event Policies\n \n",
        "description": [],
        "request": "POST",
        "url": "https://www.wixapis.com/events-policies/v2/policies/reorder",
        "links": [],
        "examples": [],
        "extra": {}
      },
      "extra":       {
        "hasRest": true,
        "rpcRequestName": "ReorderEventPoliciesRequest",
        "rpcResponseName": "ReorderEventPoliciesResponse"
      },
      "customLabels": []
    },
        {
      "name": "Update Policy",
      "methodName": "UpdatePolicy",
      "serviceName": "PolicyManagement",
      "tag": "Policy",
      "permissions": [],
      "events": [],
      "labels": [],
      "nameParams": [],
      "requiredFields":       [
        "policy",
        "policy.name",
        "policy.id",
        "policy.body",
        "policy.eventId"
      ],
      "params":       [
                {
          "in": "PATH",
          "name": "policy.id",
          "type": "string",
          "doc": " Policy ID (generated automatically)\n",
          "required": true
        },
                {
          "in": "BODY",
          "name": "policy",
          "type": "All APIs.Events - Policies V2._wix_events_v2_Policy",
          "doc": " Event Policy to update\n",
          "required": true
        },
                {
          "in": "BODY",
          "name": "mask",
          "type": "All APIs.Events - Policies V2._google_protobuf_FieldMask",
          "doc": " Explicit list of fields to update\n",
          "required": false
        }
      ],
      "ret":       {
        "type":         {
          "name": "UpdatePolicy",
          "statusCode": "200",
          "typeParams": ["All APIs.Events - Policies V2._wix_events_v2_UpdatePolicyResponse"]
        },
        "doc": ""
      },
      "locations": [],
      "docs":       {
        "summary": " Updates a policy.\n \n",
        "description": [],
        "request": "PATCH",
        "url": "https://www.wixapis.com/events-policies/v2/policies/{policy.id}",
        "links": [],
        "examples": [],
        "extra": {}
      },
      "extra":       {
        "hasRest": true,
        "rpcRequestName": "UpdatePolicyRequest",
        "rpcResponseName": "UpdatePolicyResponse"
      },
      "customLabels": []
    }
  ],
  "events":   [
        {
      "type": "_wix_events_v2_PolicyUpdatedDomainEvent",
      "name": "Policy Updated Webhook",
      "docs":       {
        "summary": "",
        "src": "https://github.com/wix-private/events/tree/master/events-services/events-policies/src/main/proto/wix/events/v2/policy_management.proto"
      },
      "topic": "domain_events_wix.events.v2.policy",
      "tag": "Policy",
      "permissions": [],
      "customLabels": [],
      "eventType": "wix.events.v2.policy_updated",
      "extra": {"isDomainEvent": true}
    },
        {
      "type": "_wix_events_v2_PolicyDeletedDomainEvent",
      "name": "Policy Deleted Webhook",
      "docs":       {
        "summary": "",
        "src": "https://github.com/wix-private/events/tree/master/events-services/events-policies/src/main/proto/wix/events/v2/policy_management.proto"
      },
      "topic": "domain_events_wix.events.v2.policy",
      "tag": "Policy",
      "permissions": [],
      "customLabels": [],
      "eventType": "wix.events.v2.policy_deleted",
      "extra": {"isDomainEvent": true}
    },
        {
      "type": "_wix_events_v2_PolicyCreatedDomainEvent",
      "name": "Policy Created Webhook",
      "docs":       {
        "summary": "",
        "src": "https://github.com/wix-private/events/tree/master/events-services/events-policies/src/main/proto/wix/events/v2/policy_management.proto"
      },
      "topic": "domain_events_wix.events.v2.policy",
      "tag": "Policy",
      "permissions": [],
      "customLabels": [],
      "eventType": "wix.events.v2.policy_created",
      "extra": {"isDomainEvent": true}
    }
  ],
  "callbacks": [],
  "messages":   [
        {
      "name": "_wix_events_v2_PolicyUpdatedDomainEvent",
      "displayName": "Policy Updated Domain Event Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "id",
          "type": "string",
          "doc": "Unique event ID."
        },
                {
          "name": "entityFqdn",
          "type": "string",
          "doc": "Expected `wix.events.v2.policy`.\nFully Qualified Domain Name."
        },
                {
          "name": "slug",
          "type": "string",
          "doc": "Expected `updated`.\nEvent name."
        },
                {
          "name": "updatedEvent",
          "type": "All APIs.Events - Policies V2._wix_events_v2_PolicyEntityUpdatedEvent",
          "doc": "Event Info"
        },
                {
          "name": "entityId",
          "type": "string",
          "doc": "Policy ID associated with this event."
        },
                {
          "name": "eventTime",
          "type": "string",
          "doc": "Event timestamp."
        },
                {
          "name": "triggeredByAnonymizeRequest",
          "type": "boolean",
          "doc": "Whether this event was triggered as a result of a privacy regulation application (e.g., GDPR)."
        },
                {
          "name": "originatedFrom",
          "type": "string",
          "doc": "If present, indicates the action that triggered the event."
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_v2_PolicyEntityUpdatedEvent",
      "displayName": "Policy Entity Updated Event Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "currentEntityAsJson",
        "type": "All APIs.Events - Policies V2._wix_events_v2_Policy",
        "doc": "Event body as a stringified JSON"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_v2_PolicyDeletedDomainEvent",
      "displayName": "Policy Deleted Domain Event Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "id",
          "type": "string",
          "doc": "Unique event ID."
        },
                {
          "name": "entityFqdn",
          "type": "string",
          "doc": "Expected `wix.events.v2.policy`.\nFully Qualified Domain Name."
        },
                {
          "name": "slug",
          "type": "string",
          "doc": "Expected `deleted`.\nEvent name."
        },
                {
          "name": "deletedEvent",
          "type": "All APIs.Events - Policies V2._wix_events_v2_PolicyEntityDeletedEvent",
          "doc": "Event Info"
        },
                {
          "name": "entityId",
          "type": "string",
          "doc": "Policy ID associated with this event."
        },
                {
          "name": "eventTime",
          "type": "string",
          "doc": "Event timestamp."
        },
                {
          "name": "triggeredByAnonymizeRequest",
          "type": "boolean",
          "doc": "Whether this event was triggered as a result of a privacy regulation application (e.g., GDPR)."
        },
                {
          "name": "originatedFrom",
          "type": "string",
          "doc": "If present, indicates the action that triggered the event."
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_v2_PolicyEntityDeletedEvent",
      "displayName": "Policy Entity Deleted Event Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_v2_PolicyCreatedDomainEvent",
      "displayName": "Policy Created Domain Event Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "id",
          "type": "string",
          "doc": "Unique event ID."
        },
                {
          "name": "entityFqdn",
          "type": "string",
          "doc": "Expected `wix.events.v2.policy`.\nFully Qualified Domain Name."
        },
                {
          "name": "slug",
          "type": "string",
          "doc": "Expected `created`.\nEvent name."
        },
                {
          "name": "createdEvent",
          "type": "All APIs.Events - Policies V2._wix_events_v2_PolicyEntityCreatedEvent",
          "doc": "Event Info"
        },
                {
          "name": "entityId",
          "type": "string",
          "doc": "Policy ID associated with this event."
        },
                {
          "name": "eventTime",
          "type": "string",
          "doc": "Event timestamp."
        },
                {
          "name": "triggeredByAnonymizeRequest",
          "type": "boolean",
          "doc": "Whether this event was triggered as a result of a privacy regulation application (e.g., GDPR)."
        },
                {
          "name": "originatedFrom",
          "type": "string",
          "doc": "If present, indicates the action that triggered the event."
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_v2_PolicyEntityCreatedEvent",
      "displayName": "Policy Entity Created Event Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "entity",
        "type": "All APIs.Events - Policies V2._wix_events_v2_Policy",
        "doc": "Event body"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_v2_Policy",
      "displayName": "Policy Object",
      "locations": [],
      "docs":       {
        "summary": " Each event can have up to 3 policies - free-text that define terms & conditions, refunds & exchanges and/or other policies, as relevant.\n",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "id",
          "type": "string",
          "doc": " Policy ID (generated automatically)\n",
          "readOnly": true
        },
                {
          "name": "revision",
          "type": "string",
          "doc": " Represents the current state of Policy. Each time the item is modified, its `revision` changes. for an update operation to succeed, you MUST pass the latest revision\n",
          "readOnly": true
        },
                {
          "name": "createdDate",
          "type": "string",
          "doc": " Date  policy was created\n",
          "readOnly": true
        },
                {
          "name": "updatedDate",
          "type": "string",
          "doc": " Date policy was updated.\n",
          "readOnly": true
        },
                {
          "name": "name",
          "type": "string",
          "doc": " Policy name.\n"
        },
                {
          "name": "body",
          "type": "string",
          "doc": " Policy body.\n"
        },
                {
          "name": "eventId",
          "type": "string",
          "doc": " Event ID.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_google_protobuf_Empty",
      "displayName": "Empty Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_google_protobuf_FieldMask",
      "displayName": "Field Mask Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "paths",
        "type":         {
          "name": "array",
          "typeParams": ["string"]
        },
        "doc": " The set of field mask paths.\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wix_events_upstream_wix_common_Address",
      "displayName": "Address Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "country",
          "type": "string",
          "doc": " country code\n"
        },
                {
          "name": "subdivision",
          "type": "string",
          "doc": " subdivision (usually state or region) code according to ISO 3166-2\n"
        },
                {
          "name": "city",
          "type": "string",
          "doc": " city name\n"
        },
                {
          "name": "postalCode",
          "type": "string",
          "doc": " zip/postal code\n"
        },
                {
          "name": "street",
          "type": "All APIs.Events - Policies V2._com_wix_events_upstream_wix_common_Address_street",
          "doc": ""
        },
                {
          "name": "addressLine2",
          "type": "string",
          "doc": " Free text providing more detailed address info. Usually contains Apt, Suite, Floor\n"
        },
                {
          "name": "formattedAddress",
          "type": "string",
          "doc": " A string containing the human-readable address of this location\n"
        },
                {
          "name": "hint",
          "type": "string",
          "doc": " Free text for human-to-human textual orientation aid purposes\n"
        },
                {
          "name": "geocode",
          "type": "All APIs.Events - Policies V2._com_wix_events_upstream_wix_common_AddressLocation",
          "doc": " coordinates of the physical address\n"
        },
                {
          "name": "countryFullname",
          "type": "string",
          "doc": " country full-name\n"
        },
                {
          "name": "subdivisions",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Events - Policies V2._com_wix_events_upstream_wix_common_Subdivision"]
          },
          "doc": " multi-level subdivisions from top to bottom\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wix_events_upstream_wix_common_Address_street",
      "displayName": "street Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "streetAddress",
          "type": "All APIs.Events - Policies V2._com_wix_events_upstream_wix_common_StreetAddress",
          "doc": " a break down of the street to number and street name\n"
        },
                {
          "name": "addressLine",
          "type": "string",
          "doc": " Main address line (usually street and number) as free text\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": [],
      "oneOf": true
    },
        {
      "name": "_com_wix_events_upstream_wix_common_Subdivision",
      "displayName": "Subdivision Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "code",
          "type": "string",
          "doc": " subdivision short code\n"
        },
                {
          "name": "name",
          "type": "string",
          "doc": " subdivision full-name\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wix_events_upstream_wix_common_StreetAddress",
      "displayName": "Street Address Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "number",
          "type": "string",
          "doc": " street number\n"
        },
                {
          "name": "name",
          "type": "string",
          "doc": " street name\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_com_wix_events_upstream_wix_common_AddressLocation",
      "displayName": "Address Location Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "latitude",
          "type": "number",
          "doc": ""
        },
                {
          "name": "longitude",
          "type": "number",
          "doc": ""
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_MapCoordinates",
      "displayName": "Map Coordinates Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "lat",
          "type": "number",
          "doc": " Latitude.\n"
        },
                {
          "name": "lng",
          "type": "number",
          "doc": " Longitude.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_Location",
      "displayName": "Location Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "name",
          "type": "string",
          "doc": " Location name.\n"
        },
                {
          "name": "coordinates",
          "type": "All APIs.Events - Policies V2._wix_events_MapCoordinates",
          "doc": " Location map coordinates.\n"
        },
                {
          "name": "address",
          "type": "string",
          "doc": " Single line address representation.\n"
        },
                {
          "name": "type",
          "type": "All APIs.Events - Policies V2._wix_events_Location_LocationType",
          "doc": " Location type.\n"
        },
                {
          "name": "fullAddress",
          "type": "All APIs.Events - Policies V2._com_wix_events_upstream_wix_common_Address",
          "doc": " Full address derived from formatted single line `address`.\n When `full_address` is used to create or update the event, deprecated `address` and `coordinates` are ignored.\n If provided `full_address` has empty `formatted_address` or `coordinates`, it will be auto-completed using Atlas service.\n\n Migration notes:\n - `full_address.formatted_address` is equivalent to `address`.\n - `full_address.geocode` is equivalent to `coordinates`.\n"
        },
                {
          "name": "tbd",
          "type": "boolean",
          "doc": " Defines event location as TBD (To Be Determined).\n When event location is not yet defined, `name` is displayed instead of location address.\n `coordinates`, `address`, `type` and `full_address` are not required when location is TBD.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_ScheduleConfig",
      "displayName": "Schedule Config Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "scheduleTbd",
          "type": "boolean",
          "doc": " Defines event as TBD (To Be Determined) schedule.\n When event time is not yet defined, TBD message is displayed instead of event start and end times.\n `startDate`, `endDate` and `timeZoneId` are not required when schedule is TBD.\n"
        },
                {
          "name": "scheduleTbdMessage",
          "type": "string",
          "doc": " TBD message.\n"
        },
                {
          "name": "startDate",
          "type": "string",
          "doc": " Event start timestamp.\n"
        },
                {
          "name": "endDate",
          "type": "string",
          "doc": " Event end timestamp.\n"
        },
                {
          "name": "timeZoneId",
          "type": "string",
          "doc": " Event time zone ID in TZ database format, e.g., `EST`, `America/Los_Angeles`.\n"
        },
                {
          "name": "endDateHidden",
          "type": "boolean",
          "doc": " Whether end date is hidden in the formatted schedule.\n"
        },
                {
          "name": "showTimeZone",
          "type": "boolean",
          "doc": " Whether time zone is displayed in formatted schedule.\n"
        },
                {
          "name": "recurrences",
          "type": "All APIs.Events - Policies V2._wix_events_Recurrences",
          "doc": " Event recurrences.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_Recurrences",
      "displayName": "Recurrences Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "occurrences",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Events - Policies V2._wix_events_Occurrence"]
          },
          "doc": " Event occurrences.\n"
        },
                {
          "name": "categoryId",
          "type": "string",
          "doc": " Recurring event category ID.\n",
          "readOnly": true
        },
                {
          "name": "status",
          "type": "All APIs.Events - Policies V2._wix_events_RecurrenceStatus_Status",
          "doc": " Recurrence status.\n",
          "readOnly": true
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_Occurrence",
      "displayName": "Occurrence Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "startDate",
          "type": "string",
          "doc": " Event start timestamp.\n"
        },
                {
          "name": "endDate",
          "type": "string",
          "doc": " Event end timestamp.\n"
        },
                {
          "name": "timeZoneId",
          "type": "string",
          "doc": " Event time zone ID in TZ database format, e.g., `EST`, `America/Los_Angeles`.\n"
        },
                {
          "name": "showTimeZone",
          "type": "boolean",
          "doc": " Whether time zone is displayed in formatted schedule.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "ticketDefinitionsMapEntry",
      "displayName": "ticket Definitions Map Entry Object",
      "locations": [],
      "docs":       {
        "summary": "Set of key-value pairs. Map of copied ticket definitions from original event.\n Key represents ticket def id in the original event.\n Value represents ticket def id in the newly created event.\n",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "key:value",
        "type": "string",
        "doc": "`key` of type string, `value` of type string"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_events_EventCopied",
      "displayName": "Event Copied Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "timestamp",
          "type": "string",
          "doc": "Event created timestamp in ISO UTC format.\n"
        },
                {
          "name": "eventId",
          "type": "string",
          "doc": "  Event ID.\n"
        },
                {
          "name": "location",
          "type": "All APIs.Events - Policies V2._wix_events_Location",
          "doc": " Event location.\n"
        },
                {
          "name": "scheduleConfig",
          "type": "All APIs.Events - Policies V2._wix_events_ScheduleConfig",
          "doc": " Event schedule configuration.\n"
        },
                {
          "name": "title",
          "type": "string",
          "doc": " Event title.\n"
        },
                {
          "name": "userId",
          "type": "string",
          "doc": " Event creator user ID.\n"
        },
                {
          "name": "status",
          "type": "All APIs.Events - Policies V2._wix_events_EventStatus",
          "doc": " Event status.\n"
        },
                {
          "name": "derivedFromInstanceId",
          "type": "string",
          "doc": " Instance ID. Indicates the original app instance which current event was derived from.\n"
        },
                {
          "name": "derivedFromEventId",
          "type": "string",
          "doc": " Event ID. Indicates the original event which current event was derived from.\n"
        },
                {
          "name": "ticketDefinitions",
          "type": "All APIs.Events - Policies V2.ticketDefinitionsMapEntry",
          "doc": "Set of key-value pairs. Map of copied ticket definitions from original event.\n Key represents ticket def id in the original event.\n Value represents ticket def id in the newly created event.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_common_Paging",
      "displayName": "Paging Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "limit",
          "type": "integer",
          "doc": " Number of items to load.\n"
        },
                {
          "name": "offset",
          "type": "integer",
          "doc": " Number of items to skip in the current sort order.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_common_CursorPaging",
      "displayName": "Cursor Paging Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "limit",
          "type": "integer",
          "doc": " Number of items to load.\n"
        },
                {
          "name": "cursor",
          "type": "string",
          "doc": "\nPointer to the next or previous page in the list of results.\n\nYou can get the relevant cursor token\nfrom the `pagingMetadata` object in the previous call's response.\nNot relevant for the first request.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_common_PagingMetadataV2",
      "displayName": "Paging Metadata V 2 Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "count",
          "type": "integer",
          "doc": " Number of items returned in the response.\n"
        },
                {
          "name": "offset",
          "type": "integer",
          "doc": " Offset that was requested.\n"
        },
                {
          "name": "total",
          "type": "integer",
          "doc": " Total number of items that match the query. Returned if offset paging is used and the `tooManyToCount` flag is not set.\n"
        },
                {
          "name": "tooManyToCount",
          "type": "boolean",
          "doc": " Flag that indicates the server failed to calculate the `total` field.\n"
        },
                {
          "name": "cursors",
          "type": "All APIs.Events - Policies V2._wix_common_Cursors",
          "doc": " Cursors to navigate through the result pages using `next` and `prev`. Returned if cursor paging is used.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_common_Cursors",
      "displayName": "Cursors Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "next",
          "type": "string",
          "doc": " Cursor pointing to next page in the list of results.\n"
        },
                {
          "name": "prev",
          "type": "string",
          "doc": " Cursor pointing to previous page in the list of results.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_common_Sorting",
      "displayName": "Sorting Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "fieldName",
          "type": "string",
          "doc": " Name of the field to sort by.\n"
        },
                {
          "name": "order",
          "type": "All APIs.Events - Policies V2._wix_common_SortOrder",
          "doc": " Sort order.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_common_QueryV2",
      "displayName": "Query V 2 Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "filter",
          "type": "struct",
          "doc": "Filter object in the following format:  \n`\"filter\" : {  \n              \"fieldName1\": \"value1\",  \n              \"fieldName2\":{\"$operator\":\"value2\"}  \n  }`  \nExample of operators: `$eq`, `$ne`, `$lt`, `$lte`, `$gt`, `$gte`, `$in`, `$hasSome`, `$hasAll`, `$startsWith`, `$contains`\n"
        },
                {
          "name": "sort",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Events - Policies V2._wix_common_Sorting"]
          },
          "doc": "Sort object in the following format:  \n`[{\"fieldName\":\"sortField1\",\"order\":\"ASC\"},{\"fieldName\":\"sortField2\",\"order\":\"DESC\"}]`\n"
        },
                {
          "name": "fields",
          "type":           {
            "name": "array",
            "typeParams": ["string"]
          },
          "doc": "Array of projected fields. A list of specific field names to return. If `fieldsets` are also specified, the union of `fieldsets` and `fields` is returned.\n"
        },
                {
          "name": "fieldsets",
          "type":           {
            "name": "array",
            "typeParams": ["string"]
          },
          "doc": "Array of named, predefined sets of projected fields. A array of predefined named sets of fields to be returned. Specifying multiple `fieldsets` will return the union of fields from all sets. If `fields` are also specified, the union of `fieldsets` and `fields` is returned.\n"
        },
                {
          "name": "pagingMethod",
          "type": "All APIs.Events - Policies V2._wix_common_QueryV2_pagingMethod",
          "doc": ""
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_common_QueryV2_pagingMethod",
      "displayName": "paging Method Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "paging",
          "type": "All APIs.Events - Policies V2._wix_common_Paging",
          "doc": "Paging options to limit and skip the number of items.\n"
        },
                {
          "name": "cursorPaging",
          "type": "All APIs.Events - Policies V2._wix_common_CursorPaging",
          "doc": "Cursor token pointing to a page of results. Not used in the first request. Following requests use the cursor token and not `filter` or `sort`.\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": [],
      "oneOf": true
    },
        {
      "name": "_wix_events_v2_CreatePolicyRequest",
      "displayName": "Create Policy Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "policy",
        "type": "All APIs.Events - Policies V2._wix_events_v2_Policy",
        "doc": " An Event Policy to be created\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_v2_CreatePolicyResponse",
      "displayName": "Create Policy Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "policy",
        "type": "All APIs.Events - Policies V2._wix_events_v2_Policy",
        "doc": " The Event Policy that was created\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_v2_UpdatePolicyRequest",
      "displayName": "Update Policy Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "policy",
          "type": "All APIs.Events - Policies V2._wix_events_v2_Policy",
          "doc": " Event Policy to update\n"
        },
                {
          "name": "mask",
          "type": "All APIs.Events - Policies V2._google_protobuf_FieldMask",
          "doc": " Explicit list of fields to update\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_v2_UpdatePolicyResponse",
      "displayName": "Update Policy Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "policy",
        "type": "All APIs.Events - Policies V2._wix_events_v2_Policy",
        "doc": " The updated Event Policy\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_v2_UpdatePolicySortIndexRequest",
      "displayName": "Update Policy Sort Index Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "policyId",
          "type": "string",
          "doc": " Policy's ID\n"
        },
                {
          "name": "revision",
          "type": "string",
          "doc": " The revision of the Event Policy\n"
        },
                {
          "name": "sortIndex",
          "type": "integer",
          "doc": " the sort index of a policy to set\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_v2_UpdatePolicySortIndexResponse",
      "displayName": "Update Policy Sort Index Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "policy",
        "type": "All APIs.Events - Policies V2._wix_events_v2_Policy",
        "doc": " the updated Event Policy\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_v2_DeletePolicyRequest",
      "displayName": "Delete Policy Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "policyId",
          "type": "string",
          "doc": " Event Policy to delete\n"
        },
                {
          "name": "revision",
          "type": "string",
          "doc": " The revision of the Event Policy\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_v2_DeletePolicyResponse",
      "displayName": "Delete Policy Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_v2_QueryPoliciesRequest",
      "displayName": "Query Policies Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "query",
        "type": "All APIs.Events - Policies V2._wix_common_QueryV2",
        "doc": " WQL expression\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_v2_QueryPoliciesResponse",
      "displayName": "Query Policies Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "policies",
          "type":           {
            "name": "array",
            "typeParams": ["All APIs.Events - Policies V2._wix_events_v2_Policy"]
          },
          "doc": " Event Policies\n"
        },
                {
          "name": "metadata",
          "type": "All APIs.Events - Policies V2._wix_common_PagingMetadataV2",
          "doc": " Query result's metadata\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_v2_ReorderEventPoliciesRequest",
      "displayName": "Reorder Event Policies Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "eventId",
          "type": "string",
          "doc": " Event ID\n"
        },
                {
          "name": "policyId",
          "type": "string",
          "doc": " Event Policy ID\n"
        },
                {
          "name": "referencePolicy",
          "type": "All APIs.Events - Policies V2._wix_events_v2_ReorderEventPoliciesRequest_ReferencePolicy",
          "doc": ""
        }
      ],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_v2_ReorderEventPoliciesRequest_ReferencePolicy",
      "displayName": "Reference Policy Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members":       [
                {
          "name": "beforePolicyId",
          "type": "string",
          "doc": " Move the Event Policy Id before this Event Policy ID\n"
        },
                {
          "name": "afterPolicyId",
          "type": "string",
          "doc": " Move the Event Policy Id after this Event Policy ID\n"
        }
      ],
      "enum": null,
      "extra": {},
      "labels": [],
      "oneOf": true
    },
        {
      "name": "_wix_events_v2_ReorderEventPoliciesResponse",
      "displayName": "Reorder Event Policies Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "policies",
        "type":         {
          "name": "array",
          "typeParams": ["All APIs.Events - Policies V2._wix_events_v2_Policy"]
        },
        "doc": " Ordered Event Policies\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_v2_GetEventPoliciesRequest",
      "displayName": "Get Event Policies Request Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "eventId",
        "type": "string",
        "doc": " Event Id\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_v2_GetEventPoliciesResponse",
      "displayName": "Get Event Policies Response Object",
      "locations": [],
      "docs":       {
        "summary": "",
        "links": [],
        "examples": []
      },
      "members": [      {
        "name": "policies",
        "type":         {
          "name": "array",
          "typeParams": ["All APIs.Events - Policies V2._wix_events_v2_Policy"]
        },
        "doc": " All policies of a particular event\n"
      }],
      "enum": null,
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_common_Subdivision_SubdivisionType",
      "displayName": "Subdivision Type Object",
      "locations": [],
      "docs":       {
        "summary": " \n Possible values are: <li><code> UNKNOWN_SUBDIVISION_TYPE <\/code><\/li><li><code> ADMINISTRATIVE_AREA_LEVEL_1 -  State\n <\/code><\/li><li><code> ADMINISTRATIVE_AREA_LEVEL_2 -  County\n <\/code><\/li><li><code> ADMINISTRATIVE_AREA_LEVEL_3 -  City/town\n <\/code><\/li><li><code> ADMINISTRATIVE_AREA_LEVEL_4 -  Neighborhood/quarter\n <\/code><\/li><li><code> ADMINISTRATIVE_AREA_LEVEL_5 -  Street/block\n <\/code><\/li><li><code> COUNTRY -  ADMINISTRATIVE_AREA_LEVEL_0. Indicates the national political entity, and is typically the highest order type returned by the Geocoder.\n <\/code><\/li>",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum":       [
        "UNKNOWN_SUBDIVISION_TYPE",
        "ADMINISTRATIVE_AREA_LEVEL_1",
        "ADMINISTRATIVE_AREA_LEVEL_2",
        "ADMINISTRATIVE_AREA_LEVEL_3",
        "ADMINISTRATIVE_AREA_LEVEL_4",
        "ADMINISTRATIVE_AREA_LEVEL_5",
        "COUNTRY"
      ],
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_EventStatus",
      "displayName": "Event Status Object",
      "locations": [],
      "docs":       {
        "summary": " \n Possible values are: <li><code> SCHEDULED -  Event is public and scheduled to start\n <\/code><\/li><li><code> STARTED -  Event has started\n <\/code><\/li><li><code> ENDED -  Event has ended\n <\/code><\/li><li><code> CANCELED -  Event was canceled\n <\/code><\/li><li><code> DRAFT -  Event is not public and needs to be published\n <\/code><\/li>",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum":       [
        "SCHEDULED",
        "STARTED",
        "ENDED",
        "CANCELED",
        "DRAFT"
      ],
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_Location_LocationType",
      "displayName": "Location Type Object",
      "locations": [],
      "docs":       {
        "summary": " \n Possible values are: <li><code> VENUE <\/code><\/li><li><code> ONLINE <\/code><\/li>",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum":       [
        "VENUE",
        "ONLINE"
      ],
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_events_RecurrenceStatus_Status",
      "displayName": "Status Object",
      "locations": [],
      "docs":       {
        "summary": " \n Possible values are: <li><code> ONE_TIME -  Event occurs only once.\n <\/code><\/li><li><code> RECURRING -  Event is recurring.\n <\/code><\/li><li><code> RECURRING_NEXT -  Marks the next upcoming occurrence of the recurring event.\n <\/code><\/li><li><code> RECURRING_LAST_ENDED -  Marks the most recent ended occurrence of the recurring event.\n <\/code><\/li><li><code> RECURRING_LAST_CANCELED -  Marks the most recent canceled occurrence of the recurring event.\n <\/code><\/li>",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum":       [
        "ONE_TIME",
        "RECURRING",
        "RECURRING_NEXT",
        "RECURRING_LAST_ENDED",
        "RECURRING_LAST_CANCELED"
      ],
      "extra": {},
      "labels": []
    },
        {
      "name": "_wix_common_SortOrder",
      "displayName": "Sort Order Object",
      "locations": [],
      "docs":       {
        "summary": " \n Possible values are: <li><code> ASC <\/code><\/li><li><code> DESC <\/code><\/li>",
        "links": [],
        "examples": []
      },
      "members": [],
      "enum":       [
        "ASC",
        "DESC"
      ],
      "extra": {},
      "labels": []
    }
  ],
  "extra": {"artifactId": "com.wixpress.events.events-policies"}
}